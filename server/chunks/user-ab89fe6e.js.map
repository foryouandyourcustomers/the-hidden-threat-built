{"version":3,"file":"user-ab89fe6e.js","sources":["../../../.svelte-kit/adapter-node/chunks/user.js"],"sourcesContent":["const isDefenderId = (id) => id !== \"attacker\";\nconst isAttackerId = (id) => id === \"attacker\";\nconst isPlayerIdOfSide = (playerId, side) => side === \"attack\" ? isAttackerId(playerId) : isDefenderId(playerId);\nconst gameEventRequiresReaction = (event) => !![\n  \"ask-question\",\n  \"quarter-reveal\",\n  \"is-attacking-stage\",\n  \"is-next-to-attacker\"\n].find((action) => isActionEventOf(event, action));\nconst isGameEventOf = (event, type) => event?.type === type;\nconst isActionEventOf = (event, action) => event?.type === \"action\" && event.action === action;\nconst isAdminActionEventOf = (event, action) => event?.type === \"system\" && event.action === action;\nconst guardForGameEventType = (type) => (event) => isGameEventOf(event, type);\nconst isPlayerGameEvent = (event) => event.type === \"action\" || event.type === \"placement\" || event.type === \"move\" || event.type === \"reaction\";\nconst guardForGameEventAction = (action) => (event) => isActionEventOf(event, action);\nconst guardForGameEventAdminAction = (action) => (event) => isAdminActionEventOf(event, action);\nconst isDefenseCharacter = (character) => Object.hasOwn(character, \"ability\");\nconst ABILITIES = {\n  \"quarter-reveal\": \"Darf fragen, auf welchem Viertel des Spielbretts sich der/die Angreifer:in befindet.\",\n  \"is-attacking-stage\": \"Darf fragen, ob der/die Angreifer:in, eine Stufe angreift, wenn sie sich auf dieser Stufe oder auf einem angrenzenden Feld zu dazu befindet.\",\n  \"is-next-to-attacker\": \"Darf fragen, ob der/die Angreifer:in sich auf seinem oder einem angrenzenden Feld, befindet.\",\n  \"exchange-digital-footprint\": \"Darf den Gegenstand „Digital Footprint“ als Joker für einen beliebigen Gegenstand einsetzen.\"\n};\nconst CHARACTERS = [\n  {\n    id: \"order-manager\",\n    name: \"Auftragsmanagement\",\n    description: \"Die Auftragsmanager:innen sind für die Koordination und Überwachung des Bestell- und Lieferprozesses eines Unternehmens zuständig und kümmern sich auch um die Beauftragung von Großhandel und Lieferanten.\",\n    ability: \"quarter-reveal\",\n    side: \"defense\"\n  },\n  {\n    id: \"dispatch-manager\",\n    name: \"Speditionsleitung\",\n    description: \"Die Leiter:innen in der Spedition müssen sicherstellen, das alle Produkte den hohen Qualitätsstandards entsprechen.\",\n    ability: \"is-attacking-stage\",\n    side: \"defense\"\n  },\n  {\n    id: \"quality-manager\",\n    name: \"Qualitätsmanagement\",\n    description: \"Die Qualitätsmanager:innen sind für die Sicherstellung der Qualität der Produkte verantwortlich. Sie stellen sicher, dass alle Standards eingehalten werden\",\n    ability: \"is-next-to-attacker\",\n    side: \"defense\"\n  },\n  {\n    id: \"it-specialist\",\n    name: \"IT Fachkraft\",\n    description: \"Die IT-Spezialist:innen sind für die Sicherstellung von Informations-Systeme zuständig. Sie kümmern sich auch um den Schutz der Systeme gegen Cyberangriffe\",\n    ability: \"exchange-digital-footprint\",\n    side: \"defense\"\n  },\n  {\n    id: \"frustrated\",\n    name: \"Frustration\",\n    description: \"Du wurdest bei der letzten Beförderungsrunde übergangen – schon wieder! Frustriert über diese andauernde Ungerechtigkeit ziehst du den Schlussstrich und verlässt deine Firma; aber nicht, ohne dich vorher durch einen Sabotageakt bei ihr zu „bedanken“ – als ihr ehemaliger Risikomanager weißt du schließlich über die Schwachstellen im System Bescheid\",\n    side: \"attack\"\n  },\n  {\n    id: \"disappointed\",\n    name: \"Enttäuscht\",\n    description: \"Als System-Administratorin hast du Zugriff auf die sensibelsten Daten. Durch einen Blick in die interne Kommunikation der Geschäftsführung erfährt deine Kollegin, dass länger geplant ist, eure Abteilung demnächst zu outsourcen. Zutiefst enttäuscht darüber, dass man euch vor vollendete Tatsachen stellen wird. Jetzt willst du ihnen einen Denkzettel verpassen\",\n    side: \"attack\"\n  }\n];\nconst getPlayer = (playerId, context) => {\n  if (isDefenderId(playerId)) {\n    const player = context.defense.defenders.find((player2) => player2.id === playerId);\n    if (!player)\n      throw new Error(`Player ${playerId} not found in context`);\n    return player;\n  } else {\n    return context.attack.attacker;\n  }\n};\nconst getPlayerSide = (playerId) => isDefenderId(playerId) ? \"defense\" : \"attack\";\nconst getCharacter = (characterId) => (\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  CHARACTERS.find((character) => character.id === characterId)\n);\nconst getAbility = (character) => {\n  if (isDefenseCharacter(character)) {\n    return ABILITIES[character.ability];\n  } else {\n    return void 0;\n  }\n};\nconst findUserIndex = (userId, context) => {\n  const index = context.users.findIndex((user) => user.id === userId);\n  return index === -1 ? void 0 : index;\n};\nconst getUser = (userId, context) => {\n  const user = context.users.find((user2) => user2.id === userId);\n  if (!user)\n    throw new Error(`The user with id ${userId} was not found.`);\n  return user;\n};\nconst userControlsPlayerId = (userId, playerId, context) => userControlsPlayer(userId, getPlayer(playerId, context), context);\nconst userControlsPlayer = (userId, player, context) => {\n  if (player.userId === userId)\n    return true;\n  return userIsAdmin(userId, context);\n};\nconst userIsAdmin = (userId, context) => {\n  const user = getUser(userId, context);\n  return user.isAdmin;\n};\nexport {\n  ABILITIES as A,\n  CHARACTERS as C,\n  isDefenderId as a,\n  getCharacter as b,\n  getAbility as c,\n  isActionEventOf as d,\n  guardForGameEventType as e,\n  gameEventRequiresReaction as f,\n  getPlayer as g,\n  getPlayerSide as h,\n  isDefenseCharacter as i,\n  getUser as j,\n  isPlayerGameEvent as k,\n  findUserIndex as l,\n  userControlsPlayerId as m,\n  userControlsPlayer as n,\n  isAttackerId as o,\n  isGameEventOf as p,\n  guardForGameEventAdminAction as q,\n  guardForGameEventAction as r,\n  isPlayerIdOfSide as s,\n  userIsAdmin as u\n};\n"],"names":[],"mappings":"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"}