{"version":3,"file":"xstate.esm-56f7456f.js","sources":["../../../.svelte-kit/adapter-node/chunks/guards.js","../../../node_modules/.pnpm/xstate@5.0.0-beta.40/node_modules/xstate/dev/dist/xstate-dev.esm.js","../../../node_modules/.pnpm/xstate@5.0.0-beta.40/node_modules/xstate/dist/interpreter-ed0fac7e.esm.js","../../../node_modules/.pnpm/xstate@5.0.0-beta.40/node_modules/xstate/dist/raise-2b2fdec3.esm.js","../../../node_modules/.pnpm/xstate@5.0.0-beta.40/node_modules/xstate/dist/send-59f66c58.esm.js","../../../node_modules/.pnpm/xstate@5.0.0-beta.40/node_modules/xstate/dist/xstate.esm.js"],"sourcesContent":["import { j as isPlayerGameEvent, d as guardForGameEventType, e as gameEventRequiresReaction, o as isGameEventOf, f as getPlayerSide, p as guardForGameEventAdminAction, q as guardForGameEventAction, r as isPlayerIdOfSide, c as isActionEventOf } from \"./user.js\";\nimport { s as seededRandomGenerator, c as BOARD_ITEMS, o as objectEntries, B as BOARD_SUPPLY_CHAINS, h as getStageAt, T as TARGETED_ATTACKS, G as GLOBAL_ATTACK_SCENARIOS, S as STAGES, f as findStageAt } from \"./index3.js\";\nimport isEqual from \"lodash/isEqual.js\";\nimport { I as ITEMS, b as isDefenseItemId, a as isAttackItemId } from \"./items.js\";\nconst TOTAL_ROUNDS = 12;\nconst COLUMN_COUNT = 9;\nconst ROW_COUNT = 8;\nconst NEW_GLOBAL_ATTACK_ROUNDS = [0, 3, 6, 9];\nconst ATTACKER_REVEAL_ROUNDS = [4, 9];\nclass GameState {\n  /** Use GameState.fromContext() to create a GameState */\n  constructor(context) {\n    this.context = context;\n    const numberGenerator = seededRandomGenerator(context.timestamp);\n    this.randomNumbers = Array.from({ length: 23 }, () => numberGenerator());\n    this.playersInOrder = [\n      context.attack.attacker,\n      context.defense.defenders[0],\n      context.defense.defenders[1],\n      context.attack.attacker,\n      context.defense.defenders[2],\n      context.defense.defenders[3]\n    ];\n    this.playerEvents = this.context.events.filter(isPlayerGameEvent);\n    this.finalizedEvents = this.playerEvents.filter((event) => event.finalized);\n    this.finalizedPlacementEvents = this.finalizedEvents.filter(guardForGameEventType(\"placement\"));\n    this.finalizedActionEvents = this.finalizedEvents.filter(guardForGameEventType(\"action\"));\n    this.finalizedMoveEvents = this.finalizedEvents.filter(guardForGameEventType(\"move\"));\n    this.finalizedReactionEvents = this.finalizedEvents.filter(guardForGameEventType(\"reaction\"));\n    this.finalizedActionEventsRequiringReaction = this.finalizedActionEvents.filter(gameEventRequiresReaction);\n    this.finalizedMoveOrActionEvents = this.finalizedEvents.filter(\n      (event) => isGameEventOf(event, \"move\") || isGameEventOf(event, \"action\")\n    );\n    this.finalizedPlayerEvents = this.finalizedEvents.filter(\n      (event) => isGameEventOf(event, \"move\") || isGameEventOf(event, \"action\") || isGameEventOf(event, \"placement\") || isGameEventOf(event, \"reaction\")\n    );\n    this.lastEvent = this.playerEvents[this.playerEvents.length - 1];\n    this.lastFinalizedEvent = this.finalizedEvents[this.finalizedEvents.length - 1];\n    const finalizedAndReactedActionEventCount = this.finalizedActionEvents.length - (this.finalizedActionEventsRequiringReaction.length - this.finalizedReactionEvents.length);\n    this.currentRound = Math.floor(finalizedAndReactedActionEventCount / this.playersInOrder.length);\n    this.nextEventType = this.finalizedPlacementEvents.length < 5 ? \"placement\" : this.lastFinalizedEvent && this.lastFinalizedEvent.type === \"move\" ? \"action\" : this.finalizedActionEventsRequiringReaction.length > this.finalizedReactionEvents.length ? \"reaction\" : \"move\";\n    if (this.nextEventType === \"reaction\") {\n      this.activePlayer = context.attack.attacker;\n    } else if (this.nextEventType === \"placement\") {\n      if (this.finalizedPlacementEvents.length < 4) {\n        this.activePlayer = context.defense.defenders[this.finalizedPlacementEvents.length];\n      } else {\n        this.activePlayer = context.attack.attacker;\n      }\n    } else {\n      this.activePlayer = this.playersInOrder[Math.floor(this.finalizedMoveOrActionEvents.length / 2) % this.playersInOrder.length];\n    }\n    this.activeSide = getPlayerSide(this.activePlayer.id);\n    this.activePlayerPosition = this.playerPositions[this.activePlayer.id];\n  }\n  playersInOrder;\n  randomNumbers;\n  playerEvents;\n  finalizedEvents;\n  finalizedPlacementEvents;\n  finalizedActionEvents;\n  finalizedMoveEvents;\n  finalizedReactionEvents;\n  finalizedPlayerEvents;\n  finalizedActionEventsRequiringReaction;\n  finalizedMoveOrActionEvents;\n  currentRound;\n  activePlayer;\n  activeSide;\n  activePlayerPosition;\n  lastEvent;\n  lastFinalizedEvent;\n  nextEventType;\n  static previousState;\n  static fromContext(context) {\n    if (this.previousState && isEqual(this.previousState.context, context)) {\n      return this.previousState.state;\n    }\n    const state = new GameState(context);\n    this.previousState = { state, context };\n    return state;\n  }\n  get isFinished() {\n    return this.nextEventType !== \"reaction\" && this.finalizedActionEvents.length >= this.playersInOrder.length * TOTAL_ROUNDS || this.attackerIsCaught;\n  }\n  get playerPositions() {\n    const playerPositions = {\n      attacker: [0, 0],\n      defender0: [0, 0],\n      defender1: [0, 0],\n      defender2: [0, 0],\n      defender3: [0, 0]\n    };\n    this.context.events.filter(guardForGameEventType(\"placement\")).filter((event) => event.finalized).forEach((event) => playerPositions[event.playerId] = event.coordinate);\n    this.context.events.filter(guardForGameEventType(\"move\")).filter((event) => event.finalized).forEach((event) => playerPositions[event.playerId] = event.to);\n    return playerPositions;\n  }\n  get jokers() {\n    return 2 - this.finalizedEvents.filter(\n      (event) => event.type === \"action\" && event.action === \"exchange-joker\" || event.type === \"reaction\" && event.action === \"joker\" && event.useJoker === true\n    ).length;\n  }\n  get defenseInventory() {\n    const defenseInventoryIds = Object.values(ITEMS).map((item) => item.id).filter(isDefenseItemId);\n    let initialAmount = 0;\n    if (this.context.events.find(guardForGameEventAdminAction(\"fill-inventory\"))) {\n      initialAmount = 50;\n    }\n    const inventory = Object.fromEntries(\n      defenseInventoryIds.map((id) => [id, initialAmount])\n    );\n    this.finalizedActionEvents.filter(guardForGameEventAction(\"collect\")).forEach((event) => {\n      if (event.itemId && isDefenseItemId(event.itemId)) {\n        inventory[event.itemId] += 1;\n      }\n    });\n    this.finalizedActionEvents.filter(guardForGameEventAction(\"exchange-digital-footprint\")).forEach((event) => {\n      if (event.item) {\n        inventory[event.item]++;\n        inventory[\"digital-footprint\"]--;\n      }\n    });\n    return inventory;\n  }\n  get attackInventory() {\n    const attackInventoryIds = Object.values(ITEMS).map((item) => item.id).filter(isAttackItemId);\n    let initialAmount = 0;\n    if (this.context.events.find(guardForGameEventAdminAction(\"fill-inventory\"))) {\n      initialAmount = 50;\n    }\n    const inventory = Object.fromEntries(\n      attackInventoryIds.map((id) => [id, initialAmount])\n    );\n    this.finalizedActionEvents.filter(guardForGameEventAction(\"collect\")).forEach((event) => {\n      if (event.itemId && isAttackItemId(event.itemId)) {\n        inventory[event.itemId] += 1;\n      }\n    });\n    this.finalizedActionEvents.filter(guardForGameEventAction(\"exchange-joker\")).forEach((event) => {\n      if (event.itemId) {\n        inventory[event.itemId] += 1;\n      }\n    });\n    return inventory;\n  }\n  getItemsForCoordinate(coordinate) {\n    const items = BOARD_ITEMS.filter((item) => isEqual(item.position, coordinate));\n    return items.map((item) => {\n      const collectedCount = this.context.events.filter(guardForGameEventAction(\"collect\")).filter((event) => isEqual(event.position, coordinate)).filter((event) => event.itemId === item.id).length;\n      return {\n        item,\n        collectedCount\n      };\n    });\n  }\n  /** Check if this is a valid target destination for the active player */\n  isValidMove(to) {\n    if (to[0] < 0 || to[0] > 8 || to[1] < 0 || to[1] > 7)\n      return false;\n    for (const playerPosition of Object.keys(this.playerPositions).filter((playerId) => isPlayerIdOfSide(playerId, this.activeSide)).map((playerId) => this.playerPositions[playerId])) {\n      if (isEqual(playerPosition, to))\n        return false;\n    }\n    const currentPosition = this.activePlayerPosition;\n    const xDiff = Math.abs(currentPosition[0] - to[0]);\n    const yDiff = Math.abs(currentPosition[1] - to[1]);\n    return xDiff + yDiff <= 2 && xDiff + yDiff != 0;\n  }\n  isValidPlacement(coordinate) {\n    if (coordinate[0] < 0 || coordinate[0] > 8 || coordinate[1] < 0 || coordinate[1] > 7)\n      return false;\n    if (this.activePlayer.id === \"attacker\")\n      return true;\n    for (const [playerId, position] of objectEntries(this.playerPositions)) {\n      if (isEqual(position, coordinate) && this.isPlaced(playerId))\n        return false;\n    }\n    let stageIds;\n    switch (this.activePlayer.character) {\n      case \"dispatch-manager\":\n        stageIds = [\"logistics\", \"storage\"];\n        break;\n      case \"it-specialist\":\n        stageIds = [\"datacenter\"];\n        break;\n      case \"order-manager\":\n        stageIds = [\"sales\", \"supply\"];\n        break;\n      case \"quality-manager\":\n        stageIds = [\"production\"];\n        break;\n    }\n    let allValidCoordinates = BOARD_SUPPLY_CHAINS.flat().filter((stage) => stageIds.includes(stage.id)).map((stage) => stage.coordinate).filter((stageCoordinate) => {\n      for (const [playerId, position] of objectEntries(this.playerPositions)) {\n        if (isEqual(position, stageCoordinate) && this.isPlaced(playerId))\n          return false;\n      }\n      return true;\n    });\n    if (allValidCoordinates.length === 0) {\n      allValidCoordinates = BOARD_SUPPLY_CHAINS.flat().map((stage) => stage.coordinate);\n    }\n    for (const stageCoordinate of allValidCoordinates) {\n      if (isEqual(stageCoordinate, coordinate))\n        return true;\n    }\n    return false;\n  }\n  isPlaced(playerId) {\n    return this.context.events.filter(guardForGameEventType(\"placement\")).filter((event) => event.playerId === playerId && event.finalized).length > 0;\n  }\n  get defendedStages() {\n    return this.attackedAndDefendedStages.defended;\n  }\n  get attackedStages() {\n    return this.attackedAndDefendedStages.attacked;\n  }\n  // Returns a random number, but always the same for i\n  getRandomNumber(i) {\n    return this.randomNumbers[Math.round(i) % this.randomNumbers.length];\n  }\n  attackedAndDefendedStagesCache;\n  get attackedAndDefendedStages() {\n    if (this.attackedAndDefendedStagesCache)\n      return this.attackedAndDefendedStagesCache;\n    const attackedStages = [];\n    const defendedStages = [];\n    let defendedStagesInSection = [];\n    this.finalizedActionEvents.forEach((event, i) => {\n      const round = Math.floor(i / this.playersInOrder.length);\n      if (isActionEventOf(event, \"attack\")) {\n        attackedStages.push(getStageAt(event.position));\n      } else if (isActionEventOf(event, \"defend\")) {\n        defendedStages.push(getStageAt(event.position));\n        defendedStagesInSection.push(getStageAt(event.position).id);\n      }\n      if ((i + 1) % (this.playersInOrder.length * 3) === 0 && this.nextEventType !== \"reaction\") {\n        const section = Math.floor(round / 3);\n        const globalAttack = this.globalAttackScenario.attacks[section];\n        globalAttack.targets.forEach((attackedStage) => {\n          if (!defendedStagesInSection.includes(attackedStage.stageId)) {\n            const allAvailableStages = BOARD_SUPPLY_CHAINS.flat().filter((stage) => stage.id === attackedStage.stageId).filter(\n              (stage) => ![...defendedStages, ...attackedStages].find(\n                (s) => isEqual(s.coordinate, stage.coordinate)\n              )\n            );\n            if (allAvailableStages.length > 0) {\n              attackedStages.push(\n                allAvailableStages[Math.floor(allAvailableStages.length * this.getRandomNumber(i))]\n              );\n            }\n          }\n        });\n        defendedStagesInSection = [];\n      }\n      const chainAttackCounts = [\n        attackedStages.filter((stage) => stage.supplyChainId === 0).length,\n        attackedStages.filter((stage) => stage.supplyChainId === 1).length,\n        attackedStages.filter((stage) => stage.supplyChainId === 2).length\n      ];\n      chainAttackCounts.forEach((count, chainId) => {\n        if (count >= 3) {\n          const otherStages = BOARD_SUPPLY_CHAINS[chainId].filter((stage) => ![...attackedStages, ...defendedStages].includes(stage));\n          attackedStages.push(...otherStages);\n        }\n      });\n    });\n    return this.attackedAndDefendedStagesCache = {\n      attacked: attackedStages,\n      defended: defendedStages\n    };\n  }\n  isDefended(position) {\n    return !!this.defendedStages.find((stage) => isEqual(stage.coordinate, position));\n  }\n  isAttacked(position) {\n    return !!this.attackedStages.find((stage) => isEqual(stage.coordinate, position));\n  }\n  get activeTargetedAttacks() {\n    const attackCount = 3 * (Math.floor(this.currentRound / 3) + 1);\n    return this.context.targetedAttacks.slice(0, attackCount).map((attackIndex) => TARGETED_ATTACKS[attackIndex]);\n  }\n  get activeGlobalAttackIndex() {\n    return Math.floor(this.currentRound / 3);\n  }\n  get activeGlobalAttack() {\n    return this.globalAttackScenario.attacks[this.activeGlobalAttackIndex];\n  }\n  get globalAttackScenario() {\n    return GLOBAL_ATTACK_SCENARIOS[this.context.globalAttackScenario];\n  }\n  /** All targeted attacks for which the user has all required items. */\n  get executableAttacks() {\n    return this.activeTargetedAttacks.filter(\n      (attack) => attack.target.requiredItems.every((item) => this.attackInventory[item] > 0)\n    );\n  }\n  get executableDefenseStages() {\n    return STAGES.filter(\n      (stage) => stage.defenseItems.every((item) => this.defenseInventory[item] > 0)\n    );\n  }\n  static isReachable(a, b) {\n    return a[0] === b[0] && Math.abs(a[1] - b[1]) <= 1 || a[1] === b[1] && Math.abs(a[0] - b[0]) <= 1;\n  }\n  /** Stages that are reachable by the attacker. */\n  get reachableStages() {\n    return BOARD_SUPPLY_CHAINS.flat().filter(\n      (stage) => GameState.isReachable(stage.coordinate, this.activePlayerPosition)\n    );\n  }\n  /** All stages that are reachable and can be attacked. */\n  get attackableStages() {\n    return this.reachableStages.filter(\n      (stage) => !this.isAttacked(stage.coordinate) && !this.isDefended(stage.coordinate) && this.executableAttacks.find(\n        (attack) => attack.target.stageId === stage.id && attack.target.supplyChainId === stage.supplyChainId\n      )\n    );\n  }\n  /** Returns the stage of the player position if all required conditions are met. */\n  get canDefendStage() {\n    const currentStage = findStageAt(this.activePlayerPosition);\n    if (!currentStage)\n      return false;\n    if (this.isAttacked(currentStage.coordinate) || this.isDefended(currentStage.coordinate)) {\n      return false;\n    }\n    return !!this.executableDefenseStages.find((stage) => stage.id === currentStage.id);\n  }\n  get attackerIsCaught() {\n    const lastFinalizedActionEvent = this.finalizedActionEvents.at(-1);\n    if (lastFinalizedActionEvent?.action !== \"ask-question\" || lastFinalizedActionEvent.question !== \"is-on-field\") {\n      return false;\n    }\n    const lastFinalizedPlayerEvent = this.finalizedPlayerEvents.at(-1);\n    if (lastFinalizedPlayerEvent?.type === \"reaction\" && lastFinalizedPlayerEvent.action === \"joker\" && lastFinalizedPlayerEvent.useJoker === false && lastFinalizedPlayerEvent.finalized) {\n      return isEqual(lastFinalizedActionEvent.position, this.playerPositions.attacker);\n    }\n    return false;\n  }\n  get score() {\n    const section = Math.floor(this.currentRound / 3);\n    const attackerCaughtPoints = Math.max(1, 3 - section);\n    const attack = this.attackedStages.length;\n    const defense = this.defendedStages.length + (this.attackerIsCaught ? attackerCaughtPoints : 0);\n    return {\n      attack,\n      defense\n    };\n  }\n  /**\n   * Returns the \"active\" question, meaning: if the last *finalized* action was\n   * an action that requires a reaction.\n   *\n   * This ignores any attacker movement or actions after.\n   */\n  get activeQuestion() {\n    const lastEvent = this.finalizedActionEvents.filter((event) => event.playerId !== \"attacker\").at(-1);\n    if (lastEvent) {\n      if (lastEvent.action === \"ask-question\")\n        return lastEvent.question;\n      if (gameEventRequiresReaction(lastEvent)) {\n        return lastEvent.action;\n      }\n    }\n    return void 0;\n  }\n}\nconst sharedGuards = {\n  // TODO\n  gameFinished: ({ context }) => GameState.fromContext(context).isFinished,\n  /** All users have been assigned a side, and there is at least one admin on both sides */\n  allSidesAssigned: ({ context }) => context.users.every((user) => user.isSideAssigned) && !!context.users.find((user) => user.side === \"defense\" && user.isAdmin) && !!context.users.find((user) => user.side === \"attack\" && user.isAdmin),\n  /** The admin said that they finished assigning the sides */\n  finishedAssigningSides: ({ context }) => context.finishedAssigningSides,\n  /** Both, defense and attack has all players configured */\n  allRolesAssigned: ({ context }) => context.attack.attacker.isConfigured && context.defense.defenders.every((defender) => defender.isConfigured),\n  // TODO\n  finishedAssigningRoles: ({ context }) => context.attack.finishedAssigning && context.defense.finishedAssigning,\n  attackerShouldBeVisible: () => false,\n  attackerShouldBeInvisible: () => false\n};\nexport {\n  ATTACKER_REVEAL_ROUNDS as A,\n  COLUMN_COUNT as C,\n  GameState as G,\n  NEW_GLOBAL_ATTACK_ROUNDS as N,\n  ROW_COUNT as R,\n  TOTAL_ROUNDS as T,\n  sharedGuards as s\n};\n","// From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/globalThis\nfunction getGlobal() {\n  if (typeof globalThis !== 'undefined') {\n    return globalThis;\n  }\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n}\nfunction getDevTools() {\n  const w = getGlobal();\n  if (!!w.__xstate__) {\n    return w.__xstate__;\n  }\n  return undefined;\n}\nfunction registerService(service) {\n  if (typeof window === 'undefined') {\n    return;\n  }\n  const devTools = getDevTools();\n  if (devTools) {\n    devTools.register(service);\n  }\n}\nconst devToolsAdapter = service => {\n  if (typeof window === 'undefined') {\n    return;\n  }\n  const devTools = getDevTools();\n  if (devTools) {\n    devTools.register(service);\n  }\n};\n\nexport { devToolsAdapter, getGlobal, registerService };\n","import { devToolsAdapter } from '../dev/dist/xstate-dev.esm.js';\n\nconst STATE_DELIMITER = '.';\nconst TARGETLESS_KEY = '';\nconst NULL_EVENT = '';\nconst STATE_IDENTIFIER = '#';\nconst WILDCARD = '*';\nconst XSTATE_INIT = 'xstate.init';\nconst XSTATE_ERROR = 'xstate.error';\nconst XSTATE_STOP = 'xstate.stop';\n\nclass Mailbox {\n  constructor(_process) {\n    this._process = _process;\n    this._active = false;\n    this._current = null;\n    this._last = null;\n  }\n  start() {\n    this._active = true;\n    this.flush();\n  }\n  clear() {\n    // we can't set _current to null because we might be currently processing\n    // and enqueue following clear shouldnt start processing the enqueued item immediately\n    if (this._current) {\n      this._current.next = null;\n      this._last = this._current;\n    }\n  }\n  enqueue(event) {\n    const enqueued = {\n      value: event,\n      next: null\n    };\n    if (this._current) {\n      this._last.next = enqueued;\n      this._last = enqueued;\n      return;\n    }\n    this._current = enqueued;\n    this._last = enqueued;\n    if (this._active) {\n      this.flush();\n    }\n  }\n  flush() {\n    while (this._current) {\n      // atm the given _process is responsible for implementing proper try/catch handling\n      // we assume here that this won't throw in a way that can affect this mailbox\n      const consumed = this._current;\n      this._process(consumed.value);\n      this._current = consumed.next;\n    }\n    this._last = null;\n  }\n}\n\n/**\n * Returns an event that represents an implicit event that\n * is sent after the specified `delay`.\n *\n * @param delayRef The delay in milliseconds\n * @param id The state node ID where this event is handled\n */\nfunction createAfterEvent(delayRef, id) {\n  const idSuffix = id ? `#${id}` : '';\n  return {\n    type: `xstate.after(${delayRef})${idSuffix}`\n  };\n}\n\n/**\n * Returns an event that represents that a final state node\n * has been reached in the parent state node.\n *\n * @param id The final state node's parent state node `id`\n * @param output The data to pass into the event\n */\nfunction createDoneStateEvent(id, output) {\n  return {\n    type: `xstate.done.state.${id}`,\n    output\n  };\n}\n\n/**\n * Returns an event that represents that an invoked service has terminated.\n *\n * An invoked service is terminated when it has reached a top-level final state node,\n * but not when it is canceled.\n *\n * @param invokeId The invoked service ID\n * @param output The data to pass into the event\n */\nfunction createDoneActorEvent(invokeId, output) {\n  return {\n    type: `xstate.done.actor.${invokeId}`,\n    output\n  };\n}\nfunction createErrorActorEvent(id, data) {\n  return {\n    type: `xstate.error.actor.${id}`,\n    data\n  };\n}\nfunction createInitEvent(input) {\n  return {\n    type: XSTATE_INIT,\n    input\n  };\n}\n\n/**\n * This function makes sure that unhandled errors are thrown in a separate macrotask.\n * It allows those errors to be detected by global error handlers and reported to bug tracking services\n * without interrupting our own stack of execution.\n *\n * @param err error to be thrown\n */\nfunction reportUnhandledError(err) {\n  setTimeout(() => {\n    throw err;\n  });\n}\n\nconst symbolObservable = (() => typeof Symbol === 'function' && Symbol.observable || '@@observable')();\n\nlet idCounter = 0;\nfunction createSystem(rootActor) {\n  const children = new Map();\n  const keyedActors = new Map();\n  const reverseKeyedActors = new WeakMap();\n  const observers = new Set();\n  const system = {\n    _bookId: () => `x:${idCounter++}`,\n    _register: (sessionId, actorRef) => {\n      children.set(sessionId, actorRef);\n      return sessionId;\n    },\n    _unregister: actorRef => {\n      children.delete(actorRef.sessionId);\n      const systemId = reverseKeyedActors.get(actorRef);\n      if (systemId !== undefined) {\n        keyedActors.delete(systemId);\n        reverseKeyedActors.delete(actorRef);\n      }\n    },\n    get: systemId => {\n      return keyedActors.get(systemId);\n    },\n    _set: (systemId, actorRef) => {\n      const existing = keyedActors.get(systemId);\n      if (existing && existing !== actorRef) {\n        throw new Error(`Actor with system ID '${systemId}' already exists.`);\n      }\n      keyedActors.set(systemId, actorRef);\n      reverseKeyedActors.set(actorRef, systemId);\n    },\n    inspect: observer => {\n      observers.add(observer);\n    },\n    _sendInspectionEvent: event => {\n      const resolvedInspectionEvent = {\n        ...event,\n        rootId: rootActor.sessionId\n      };\n      observers.forEach(observer => observer.next?.(resolvedInspectionEvent));\n    },\n    _relay: (source, target, event) => {\n      system._sendInspectionEvent({\n        type: '@xstate.event',\n        sourceRef: source,\n        actorRef: target,\n        event\n      });\n      target._send(event);\n    }\n  };\n  return system;\n}\n\nfunction matchesState(parentStateId, childStateId) {\n  const parentStateValue = toStateValue(parentStateId);\n  const childStateValue = toStateValue(childStateId);\n  if (typeof childStateValue === 'string') {\n    if (typeof parentStateValue === 'string') {\n      return childStateValue === parentStateValue;\n    }\n\n    // Parent more specific than child\n    return false;\n  }\n  if (typeof parentStateValue === 'string') {\n    return parentStateValue in childStateValue;\n  }\n  return Object.keys(parentStateValue).every(key => {\n    if (!(key in childStateValue)) {\n      return false;\n    }\n    return matchesState(parentStateValue[key], childStateValue[key]);\n  });\n}\nfunction toStatePath(stateId) {\n  try {\n    if (isArray(stateId)) {\n      return stateId;\n    }\n    return stateId.toString().split(STATE_DELIMITER);\n  } catch (e) {\n    throw new Error(`'${stateId}' is not a valid state path.`);\n  }\n}\nfunction isStateLike(state) {\n  return typeof state === 'object' && 'value' in state && 'context' in state && 'event' in state;\n}\nfunction toStateValue(stateValue) {\n  if (isStateLike(stateValue)) {\n    return stateValue.value;\n  }\n  if (isArray(stateValue)) {\n    return pathToStateValue(stateValue);\n  }\n  if (typeof stateValue !== 'string') {\n    return stateValue;\n  }\n  const statePath = toStatePath(stateValue);\n  return pathToStateValue(statePath);\n}\nfunction pathToStateValue(statePath) {\n  if (statePath.length === 1) {\n    return statePath[0];\n  }\n  const value = {};\n  let marker = value;\n  for (let i = 0; i < statePath.length - 1; i++) {\n    if (i === statePath.length - 2) {\n      marker[statePath[i]] = statePath[i + 1];\n    } else {\n      const previous = marker;\n      marker = {};\n      previous[statePath[i]] = marker;\n    }\n  }\n  return value;\n}\nfunction mapValues(collection, iteratee) {\n  const result = {};\n  const collectionKeys = Object.keys(collection);\n  for (let i = 0; i < collectionKeys.length; i++) {\n    const key = collectionKeys[i];\n    result[key] = iteratee(collection[key], key, collection, i);\n  }\n  return result;\n}\nfunction flatten(array) {\n  return [].concat(...array);\n}\nfunction toArrayStrict(value) {\n  if (isArray(value)) {\n    return value;\n  }\n  return [value];\n}\nfunction toArray(value) {\n  if (value === undefined) {\n    return [];\n  }\n  return toArrayStrict(value);\n}\nfunction resolveOutput(mapper, context, event, self) {\n  if (typeof mapper === 'function') {\n    return mapper({\n      context,\n      event,\n      self\n    });\n  }\n  return mapper;\n}\nfunction isArray(value) {\n  return Array.isArray(value);\n}\nfunction isErrorActorEvent(event) {\n  return event.type.startsWith('xstate.error.actor');\n}\nfunction toTransitionConfigArray(configLike) {\n  return toArrayStrict(configLike).map(transitionLike => {\n    if (typeof transitionLike === 'undefined' || typeof transitionLike === 'string') {\n      return {\n        target: transitionLike\n      };\n    }\n    return transitionLike;\n  });\n}\nfunction normalizeTarget(target) {\n  if (target === undefined || target === TARGETLESS_KEY) {\n    return undefined;\n  }\n  return toArray(target);\n}\nfunction toObserver(nextHandler, errorHandler, completionHandler) {\n  const isObserver = typeof nextHandler === 'object';\n  const self = isObserver ? nextHandler : undefined;\n  return {\n    next: (isObserver ? nextHandler.next : nextHandler)?.bind(self),\n    error: (isObserver ? nextHandler.error : errorHandler)?.bind(self),\n    complete: (isObserver ? nextHandler.complete : completionHandler)?.bind(self)\n  };\n}\nfunction createInvokeId(stateNodeId, index) {\n  return `${stateNodeId}[${index}]`;\n}\nfunction resolveReferencedActor(machine, src) {\n  if (src.startsWith('xstate#')) {\n    const [, indexStr] = src.match(/\\[(\\d+)\\]$/);\n    const node = machine.getStateNodeById(src.slice(7, -(indexStr.length + 2)));\n    const invokeConfig = node.config.invoke;\n    return {\n      src: (Array.isArray(invokeConfig) ? invokeConfig[indexStr] : invokeConfig).src,\n      input: undefined\n    };\n  }\n  const referenced = machine.implementations.actors[src];\n  return referenced ? 'transition' in referenced ? {\n    src: referenced,\n    input: undefined\n  } : referenced : undefined;\n}\n\nconst $$ACTOR_TYPE = 1;\nlet ActorStatus = /*#__PURE__*/function (ActorStatus) {\n  ActorStatus[ActorStatus[\"NotStarted\"] = 0] = \"NotStarted\";\n  ActorStatus[ActorStatus[\"Running\"] = 1] = \"Running\";\n  ActorStatus[ActorStatus[\"Stopped\"] = 2] = \"Stopped\";\n  return ActorStatus;\n}({});\n\n/**\n * @deprecated Use `ActorStatus` instead.\n */\nconst InterpreterStatus = ActorStatus;\nconst defaultOptions = {\n  clock: {\n    setTimeout: (fn, ms) => {\n      return setTimeout(fn, ms);\n    },\n    clearTimeout: id => {\n      return clearTimeout(id);\n    }\n  },\n  logger: console.log.bind(console),\n  devTools: false\n};\n\n/**\n * An Actor is a running process that can receive events, send events and change its behavior based on the events it receives, which can cause effects outside of the actor. When you run a state machine, it becomes an actor.\n */\nclass Actor {\n  /**\n   * The current internal state of the actor.\n   */\n\n  /**\n   * The clock that is responsible for setting and clearing timeouts, such as delayed events and transitions.\n   */\n\n  /**\n   * The unique identifier for this actor relative to its parent.\n   */\n\n  /**\n   * Whether the service is started.\n   */\n\n  // Actor Ref\n\n  // TODO: add typings for system\n\n  /**\n   * The globally unique process ID for this invocation.\n   */\n\n  /**\n   * The system to which this actor belongs.\n   */\n\n  /**\n   * Creates a new actor instance for the given logic with the provided options, if any.\n   *\n   * @param logic The logic to create an actor from\n   * @param options Actor options\n   */\n  constructor(logic, options) {\n    this.logic = logic;\n    this._state = void 0;\n    this.clock = void 0;\n    this.options = void 0;\n    this.id = void 0;\n    this.mailbox = new Mailbox(this._process.bind(this));\n    this.delayedEventsMap = {};\n    this.observers = new Set();\n    this.logger = void 0;\n    this.status = ActorStatus.NotStarted;\n    this._parent = void 0;\n    this.ref = void 0;\n    this._actorScope = void 0;\n    this._systemId = void 0;\n    this.sessionId = void 0;\n    this.system = void 0;\n    this._doneEvent = void 0;\n    this.src = void 0;\n    this._deferred = [];\n    const resolvedOptions = {\n      ...defaultOptions,\n      ...options\n    };\n    const {\n      clock,\n      logger,\n      parent,\n      id,\n      systemId,\n      inspect\n    } = resolvedOptions;\n    this.system = parent?.system ?? createSystem(this);\n    if (inspect && !parent) {\n      // Always inspect at the system-level\n      this.system.inspect(toObserver(inspect));\n    }\n    this.sessionId = this.system._bookId();\n    this.id = id ?? this.sessionId;\n    this.logger = logger;\n    this.clock = clock;\n    this._parent = parent;\n    this.options = resolvedOptions;\n    this.src = resolvedOptions.src;\n    this.ref = this;\n    this._actorScope = {\n      self: this,\n      id: this.id,\n      sessionId: this.sessionId,\n      logger: this.logger,\n      defer: fn => {\n        this._deferred.push(fn);\n      },\n      system: this.system,\n      stopChild: child => {\n        if (child._parent !== this) {\n          throw new Error(`Cannot stop child actor ${child.id} of ${this.id} because it is not a child`);\n        }\n        child._stop();\n      }\n    };\n\n    // Ensure that the send method is bound to this Actor instance\n    // if destructured\n    this.send = this.send.bind(this);\n    this.system._sendInspectionEvent({\n      type: '@xstate.actor',\n      actorRef: this\n    });\n    this._initState();\n    if (systemId && this._state.status === 'active') {\n      this._systemId = systemId;\n      this.system._set(systemId, this);\n    }\n  }\n  _initState() {\n    this._state = this.options.state ? this.logic.restoreState ? this.logic.restoreState(this.options.state, this._actorScope) : this.options.state : this.logic.getInitialState(this._actorScope, this.options?.input);\n  }\n\n  // array of functions to defer\n\n  update(snapshot, event) {\n    // Update state\n    this._state = snapshot;\n\n    // Execute deferred effects\n    let deferredFn;\n    while (deferredFn = this._deferred.shift()) {\n      deferredFn();\n    }\n    for (const observer of this.observers) {\n      // TODO: should observers be notified in case of the error?\n      try {\n        observer.next?.(snapshot);\n      } catch (err) {\n        reportUnhandledError(err);\n      }\n    }\n    switch (this._state.status) {\n      case 'done':\n        this._stopProcedure();\n        this._complete();\n        this._doneEvent = createDoneActorEvent(this.id, this._state.output);\n        if (this._parent) {\n          this.system._relay(this, this._parent, this._doneEvent);\n        }\n        break;\n      case 'error':\n        this._stopProcedure();\n        this._error(this._state.error);\n        if (this._parent) {\n          this.system._relay(this, this._parent, createErrorActorEvent(this.id, this._state.error));\n        }\n        break;\n    }\n    this.system._sendInspectionEvent({\n      type: '@xstate.snapshot',\n      actorRef: this,\n      event,\n      snapshot\n    });\n  }\n\n  /**\n   * Subscribe an observer to an actor’s snapshot values.\n   *\n   * @remarks\n   * The observer will receive the actor’s snapshot value when it is emitted. The observer can be:\n   * - A plain function that receives the latest snapshot, or\n   * - An observer object whose `.next(snapshot)` method receives the latest snapshot\n   *\n   * @example\n   * ```ts\n   * // Observer as a plain function\n   * const subscription = actor.subscribe((snapshot) => {\n   *   console.log(snapshot);\n   * });\n   * ```\n   *\n   * @example\n   * ```ts\n   * // Observer as an object\n   * const subscription = actor.subscribe({\n   *   next(snapshot) {\n   *     console.log(snapshot);\n   *   },\n   *   error(err) {\n   *     // ...\n   *   },\n   *   complete() {\n   *     // ...\n   *   },\n   * });\n   * ```\n   *\n   * The return value of `actor.subscribe(observer)` is a subscription object that has an `.unsubscribe()` method. You can call `subscription.unsubscribe()` to unsubscribe the observer:\n   *\n   * @example\n   * ```ts\n   * const subscription = actor.subscribe((snapshot) => {\n   *   // ...\n   * });\n   *\n   * // Unsubscribe the observer\n   * subscription.unsubscribe();\n   * ```\n   *\n   * When the actor is stopped, all of its observers will automatically be unsubscribed.\n   *\n   * @param observer - Either a plain function that receives the latest snapshot, or an observer object whose `.next(snapshot)` method receives the latest snapshot\n   */\n\n  subscribe(nextListenerOrObserver, errorListener, completeListener) {\n    const observer = toObserver(nextListenerOrObserver, errorListener, completeListener);\n    if (this.status !== ActorStatus.Stopped) {\n      this.observers.add(observer);\n    } else {\n      try {\n        observer.complete?.();\n      } catch (err) {\n        reportUnhandledError(err);\n      }\n    }\n    return {\n      unsubscribe: () => {\n        this.observers.delete(observer);\n      }\n    };\n  }\n\n  /**\n   * Starts the Actor from the initial state\n   */\n  start() {\n    if (this.status === ActorStatus.Running) {\n      // Do not restart the service if it is already started\n      return this;\n    }\n    this.system._register(this.sessionId, this);\n    if (this._systemId) {\n      this.system._set(this._systemId, this);\n    }\n    this.status = ActorStatus.Running;\n    const initEvent = createInitEvent(this.options.input);\n    this.system._sendInspectionEvent({\n      type: '@xstate.event',\n      sourceRef: this._parent,\n      actorRef: this,\n      event: initEvent\n    });\n    const status = this._state.status;\n    switch (status) {\n      case 'done':\n        // a state machine can be \"done\" upon initialization (it could reach a final state using initial microsteps)\n        // we still need to complete observers, flush deferreds etc\n        this.update(this._state, initEvent);\n      // fallthrough\n      case 'error':\n        // TODO: rethink cleanup of observers, mailbox, etc\n        return this;\n    }\n    if (this.logic.start) {\n      try {\n        this.logic.start(this._state, this._actorScope);\n      } catch (err) {\n        this._stopProcedure();\n        this._error(err);\n        this._parent?.send(createErrorActorEvent(this.id, err));\n        return this;\n      }\n    }\n\n    // TODO: this notifies all subscribers but usually this is redundant\n    // there is no real change happening here\n    // we need to rethink if this needs to be refactored\n    this.update(this._state, initEvent);\n    if (this.options.devTools) {\n      this.attachDevTools();\n    }\n    this.mailbox.start();\n    return this;\n  }\n  _process(event) {\n    // TODO: reexamine what happens when an action (or a guard or smth) throws\n    let nextState;\n    let caughtError;\n    try {\n      nextState = this.logic.transition(this._state, event, this._actorScope);\n    } catch (err) {\n      // we wrap it in a box so we can rethrow it later even if falsy value gets caught here\n      caughtError = {\n        err\n      };\n    }\n    if (caughtError) {\n      const {\n        err\n      } = caughtError;\n      this._stopProcedure();\n      this._error(err);\n      this._parent?.send(createErrorActorEvent(this.id, err));\n      return;\n    }\n    this.update(nextState, event);\n    if (event.type === XSTATE_STOP) {\n      this._stopProcedure();\n      this._complete();\n    }\n  }\n  _stop() {\n    if (this.status === ActorStatus.Stopped) {\n      return this;\n    }\n    this.mailbox.clear();\n    if (this.status === ActorStatus.NotStarted) {\n      this.status = ActorStatus.Stopped;\n      return this;\n    }\n    this.mailbox.enqueue({\n      type: XSTATE_STOP\n    });\n    return this;\n  }\n\n  /**\n   * Stops the Actor and unsubscribe all listeners.\n   */\n  stop() {\n    if (this._parent) {\n      throw new Error('A non-root actor cannot be stopped directly.');\n    }\n    return this._stop();\n  }\n  _complete() {\n    for (const observer of this.observers) {\n      try {\n        observer.complete?.();\n      } catch (err) {\n        reportUnhandledError(err);\n      }\n    }\n    this.observers.clear();\n  }\n  _error(err) {\n    if (!this.observers.size) {\n      if (!this._parent) {\n        reportUnhandledError(err);\n      }\n      return;\n    }\n    let reportError = false;\n    for (const observer of this.observers) {\n      const errorListener = observer.error;\n      reportError ||= !errorListener;\n      try {\n        errorListener?.(err);\n      } catch (err2) {\n        reportUnhandledError(err2);\n      }\n    }\n    this.observers.clear();\n    if (reportError) {\n      reportUnhandledError(err);\n    }\n  }\n  _stopProcedure() {\n    if (this.status !== ActorStatus.Running) {\n      // Actor already stopped; do nothing\n      return this;\n    }\n\n    // Cancel all delayed events\n    for (const key of Object.keys(this.delayedEventsMap)) {\n      this.clock.clearTimeout(this.delayedEventsMap[key]);\n    }\n\n    // TODO: mailbox.reset\n    this.mailbox.clear();\n    // TODO: after `stop` we must prepare ourselves for receiving events again\n    // events sent *after* stop signal must be queued\n    // it seems like this should be the common behavior for all of our consumers\n    // so perhaps this should be unified somehow for all of them\n    this.mailbox = new Mailbox(this._process.bind(this));\n    this.status = ActorStatus.Stopped;\n    this.system._unregister(this);\n    return this;\n  }\n\n  /**\n   * @internal\n   */\n  _send(event) {\n    if (this.status === ActorStatus.Stopped) {\n      return;\n    }\n    this.mailbox.enqueue(event);\n  }\n\n  /**\n   * Sends an event to the running Actor to trigger a transition.\n   *\n   * @param event The event to send\n   */\n  send(event) {\n    this.system._relay(undefined, this, event);\n  }\n\n  /**\n   * TODO: figure out a way to do this within the machine\n   * @internal\n   */\n  delaySend(params) {\n    const {\n      event,\n      id,\n      delay\n    } = params;\n    const timerId = this.clock.setTimeout(() => {\n      this.system._relay(this, params.to ?? this, event);\n    }, delay);\n\n    // TODO: consider the rehydration story here\n    if (id) {\n      this.delayedEventsMap[id] = timerId;\n    }\n  }\n\n  /**\n   * TODO: figure out a way to do this within the machine\n   * @internal\n   */\n  cancel(sendId) {\n    this.clock.clearTimeout(this.delayedEventsMap[sendId]);\n    delete this.delayedEventsMap[sendId];\n  }\n  attachDevTools() {\n    const {\n      devTools\n    } = this.options;\n    if (devTools) {\n      const resolvedDevToolsAdapter = typeof devTools === 'function' ? devTools : devToolsAdapter;\n      resolvedDevToolsAdapter(this);\n    }\n  }\n  toJSON() {\n    return {\n      xstate$$type: $$ACTOR_TYPE,\n      id: this.id\n    };\n  }\n  getPersistedState() {\n    return this.logic.getPersistedState(this._state);\n  }\n  [symbolObservable]() {\n    return this;\n  }\n\n  /**\n   * Read an actor’s snapshot synchronously.\n   *\n   * @remarks\n   * The snapshot represent an actor's last emitted value.\n   *\n   * When an actor receives an event, its internal state may change.\n   * An actor may emit a snapshot when a state transition occurs.\n   *\n   * Note that some actors, such as callback actors generated with `fromCallback`, will not emit snapshots.\n   *\n   * @see {@link Actor.subscribe} to subscribe to an actor’s snapshot values.\n   * @see {@link Actor.getPersistedState} to persist the internal state of an actor (which is more than just a snapshot).\n   */\n  getSnapshot() {\n    return this._state;\n  }\n}\n\n/**\n * Creates a new `ActorRef` instance for the given machine with the provided options, if any.\n *\n * @param machine The machine to create an actor from\n * @param options `ActorRef` options\n */\n\nfunction createActor(logic, options) {\n  const interpreter = new Actor(logic, options);\n  return interpreter;\n}\n\n/**\n * Creates a new Interpreter instance for the given machine with the provided options, if any.\n *\n * @deprecated Use `createActor` instead\n */\nconst interpret = createActor;\n\n/**\n * @deprecated Use `Actor` instead.\n */\n\nexport { $$ACTOR_TYPE as $, Actor as A, InterpreterStatus as I, NULL_EVENT as N, STATE_DELIMITER as S, WILDCARD as W, XSTATE_STOP as X, toTransitionConfigArray as a, createInitEvent as b, createInvokeId as c, createActor as d, matchesState as e, ActorStatus as f, interpret as g, toObserver as h, isErrorActorEvent as i, createErrorActorEvent as j, toStateValue as k, STATE_IDENTIFIER as l, mapValues as m, normalizeTarget as n, toStatePath as o, pathToStateValue as p, createDoneStateEvent as q, resolveReferencedActor as r, resolveOutput as s, toArray as t, XSTATE_INIT as u, createAfterEvent as v, flatten as w, XSTATE_ERROR as x };\n","import { r as resolveReferencedActor, d as createActor, f as ActorStatus, j as createErrorActorEvent, k as toStateValue, l as STATE_IDENTIFIER, n as normalizeTarget, t as toArray, N as NULL_EVENT, a as toTransitionConfigArray, S as STATE_DELIMITER, o as toStatePath, q as createDoneStateEvent, s as resolveOutput, X as XSTATE_STOP, u as XSTATE_INIT, W as WILDCARD, v as createAfterEvent, w as flatten, e as matchesState, $ as $$ACTOR_TYPE } from './interpreter-ed0fac7e.esm.js';\n\nconst cache = new WeakMap();\nfunction memo(object, key, fn) {\n  let memoizedData = cache.get(object);\n  if (!memoizedData) {\n    memoizedData = {\n      [key]: fn()\n    };\n    cache.set(object, memoizedData);\n  } else if (!(key in memoizedData)) {\n    memoizedData[key] = fn();\n  }\n  return memoizedData[key];\n}\n\nfunction resolveCancel(_, state, actionArgs, actionParams, {\n  sendId\n}) {\n  const resolvedSendId = typeof sendId === 'function' ? sendId(actionArgs, actionParams) : sendId;\n  return [state, resolvedSendId];\n}\nfunction executeCancel(actorScope, resolvedSendId) {\n  actorScope.self.cancel(resolvedSendId);\n}\n/**\n * Cancels an in-flight `send(...)` action. A canceled sent action will not\n * be executed, nor will its event be sent, unless it has already been sent\n * (e.g., if `cancel(...)` is called after the `send(...)` action's `delay`).\n *\n * @param sendId The `id` of the `send(...)` action to cancel.\n */\nfunction cancel(sendId) {\n  function cancel(args, params) {\n  }\n  cancel.type = 'xstate.cancel';\n  cancel.sendId = sendId;\n  cancel.resolve = resolveCancel;\n  cancel.execute = executeCancel;\n  return cancel;\n}\n\nfunction resolveSpawn(actorScope, state, actionArgs, _actionParams, {\n  id,\n  systemId,\n  src,\n  input,\n  syncSnapshot\n}) {\n  const referenced = typeof src === 'string' ? resolveReferencedActor(state.machine, src) : {\n    src,\n    input: undefined\n  };\n  const resolvedId = typeof id === 'function' ? id(actionArgs) : id;\n  let actorRef;\n  if (referenced) {\n    // TODO: inline `input: undefined` should win over the referenced one\n    const configuredInput = input || referenced.input;\n    actorRef = createActor(referenced.src, {\n      id: resolvedId,\n      src: typeof src === 'string' ? src : undefined,\n      parent: actorScope?.self,\n      systemId,\n      input: typeof configuredInput === 'function' ? configuredInput({\n        context: state.context,\n        event: actionArgs.event,\n        self: actorScope?.self\n      }) : configuredInput\n    });\n    if (syncSnapshot) {\n      actorRef.subscribe({\n        next: snapshot => {\n          if (snapshot.status === 'active') {\n            actorScope.self.send({\n              type: `xstate.snapshot.${id}`,\n              snapshot\n            });\n          }\n        },\n        error: () => {}\n      });\n    }\n  }\n  return [cloneState(state, {\n    children: {\n      ...state.children,\n      [resolvedId]: actorRef\n    }\n  }), {\n    id,\n    actorRef\n  }];\n}\nfunction executeSpawn(actorScope, {\n  id,\n  actorRef\n}) {\n  if (!actorRef) {\n    return;\n  }\n  actorScope.defer(() => {\n    if (actorRef.status === ActorStatus.Stopped) {\n      return;\n    }\n    try {\n      actorRef.start?.();\n    } catch (err) {\n      actorScope.self.send(createErrorActorEvent(id, err));\n      return;\n    }\n  });\n}\nfunction spawn(...[src, {\n  id,\n  systemId,\n  input,\n  syncSnapshot = false\n} = {}]) {\n  function spawn(args, params) {\n  }\n  spawn.type = 'xstate.spawn';\n  spawn.id = id;\n  spawn.systemId = systemId;\n  spawn.src = src;\n  spawn.input = input;\n  spawn.syncSnapshot = syncSnapshot;\n  spawn.resolve = resolveSpawn;\n  spawn.execute = executeSpawn;\n  return spawn;\n}\n\nfunction resolveStop(_, state, args, actionParams, {\n  actorRef\n}) {\n  const actorRefOrString = typeof actorRef === 'function' ? actorRef(args, actionParams) : actorRef;\n  const resolvedActorRef = typeof actorRefOrString === 'string' ? state.children[actorRefOrString] : actorRefOrString;\n  let children = state.children;\n  if (resolvedActorRef) {\n    children = {\n      ...children\n    };\n    delete children[resolvedActorRef.id];\n  }\n  return [cloneState(state, {\n    children\n  }), resolvedActorRef];\n}\nfunction executeStop(actorScope, actorRef) {\n  if (!actorRef) {\n    return;\n  }\n\n  // we need to eagerly unregister it here so a new actor with the same systemId can be registered immediately\n  // since we defer actual stopping of the actor but we don't defer actor creations (and we can't do that)\n  // this could throw on `systemId` collision, for example, when dealing with reentering transitions\n  actorScope.system._unregister(actorRef);\n\n  // this allows us to prevent an actor from being started if it gets stopped within the same macrostep\n  // this can happen, for example, when the invoking state is being exited immediately by an always transition\n  if (actorRef.status !== ActorStatus.Running) {\n    actorScope.stopChild(actorRef);\n    return;\n  }\n  // stopping a child enqueues a stop event in the child actor's mailbox\n  // we need for all of the already enqueued events to be processed before we stop the child\n  // the parent itself might want to send some events to a child (for example from exit actions on the invoking state)\n  // and we don't want to ignore those events\n  actorScope.defer(() => {\n    actorScope.stopChild(actorRef);\n  });\n}\n/**\n * Stops an actor.\n *\n * @param actorRef The actor to stop.\n */\nfunction stop(actorRef) {\n  function stop(args, params) {\n  }\n  stop.type = 'xstate.stop';\n  stop.actorRef = actorRef;\n  stop.resolve = resolveStop;\n  stop.execute = executeStop;\n  return stop;\n}\n\nfunction checkStateIn(state, _, {\n  stateValue\n}) {\n  if (typeof stateValue === 'string' && isStateId(stateValue)) {\n    const target = state.machine.getStateNodeById(stateValue);\n    return state.configuration.some(sn => sn === target);\n  }\n  return state.matches(stateValue);\n}\nfunction stateIn(stateValue) {\n  function stateIn(args, params) {\n    return false;\n  }\n  stateIn.check = checkStateIn;\n  stateIn.stateValue = stateValue;\n  return stateIn;\n}\nfunction checkNot(state, {\n  context,\n  event\n}, {\n  guards\n}) {\n  return !evaluateGuard(guards[0], context, event, state);\n}\nfunction not(guard) {\n  function not(args, params) {\n    return false;\n  }\n  not.check = checkNot;\n  not.guards = [guard];\n  return not;\n}\nfunction checkAnd(state, {\n  context,\n  event\n}, {\n  guards\n}) {\n  return guards.every(guard => evaluateGuard(guard, context, event, state));\n}\nfunction and(guards) {\n  function and(args, params) {\n    return false;\n  }\n  and.check = checkAnd;\n  and.guards = guards;\n  return and;\n}\nfunction checkOr(state, {\n  context,\n  event\n}, {\n  guards\n}) {\n  return guards.some(guard => evaluateGuard(guard, context, event, state));\n}\nfunction or(guards) {\n  function or(args, params) {\n    return false;\n  }\n  or.check = checkOr;\n  or.guards = guards;\n  return or;\n}\n\n// TODO: throw on cycles (depth check should be enough)\nfunction evaluateGuard(guard, context, event, state) {\n  const {\n    machine\n  } = state;\n  const isInline = typeof guard === 'function';\n  const resolved = isInline ? guard : machine.implementations.guards[typeof guard === 'string' ? guard : guard.type];\n  if (!isInline && !resolved) {\n    throw new Error(`Guard '${typeof guard === 'string' ? guard : guard.type}' is not implemented.'.`);\n  }\n  if (typeof resolved !== 'function') {\n    return evaluateGuard(resolved, context, event, state);\n  }\n  const guardArgs = {\n    context,\n    event\n  };\n  const guardParams = isInline || typeof guard === 'string' ? undefined : 'params' in guard ? typeof guard.params === 'function' ? guard.params({\n    context,\n    event\n  }) : guard.params : undefined;\n  if (!('check' in resolved)) {\n    // the existing type of `.guards` assumes non-nullable `TExpressionGuard`\n    // inline guards expect `TExpressionGuard` to be set to `undefined`\n    // it's fine to cast this here, our logic makes sure that we call those 2 \"variants\" correctly\n    return resolved(guardArgs, guardParams);\n  }\n  const builtinGuard = resolved;\n  return builtinGuard.check(state, guardArgs, resolved // this holds all params\n  );\n}\n\nconst isAtomicStateNode = stateNode => stateNode.type === 'atomic' || stateNode.type === 'final';\nfunction getChildren(stateNode) {\n  return Object.values(stateNode.states).filter(sn => sn.type !== 'history');\n}\nfunction getProperAncestors(stateNode, toStateNode) {\n  const ancestors = [];\n  if (toStateNode === stateNode) {\n    return ancestors;\n  }\n\n  // add all ancestors\n  let m = stateNode.parent;\n  while (m && m !== toStateNode) {\n    ancestors.push(m);\n    m = m.parent;\n  }\n  return ancestors;\n}\nfunction getConfiguration(stateNodes) {\n  const configuration = new Set(stateNodes);\n  const configurationSet = new Set(stateNodes);\n  const adjList = getAdjList(configurationSet);\n\n  // add descendants\n  for (const s of configuration) {\n    // if previously active, add existing child nodes\n    if (s.type === 'compound' && (!adjList.get(s) || !adjList.get(s).length)) {\n      getInitialStateNodesWithTheirAncestors(s).forEach(sn => configurationSet.add(sn));\n    } else {\n      if (s.type === 'parallel') {\n        for (const child of getChildren(s)) {\n          if (child.type === 'history') {\n            continue;\n          }\n          if (!configurationSet.has(child)) {\n            const initialStates = getInitialStateNodesWithTheirAncestors(child);\n            for (const initialStateNode of initialStates) {\n              configurationSet.add(initialStateNode);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  // add all ancestors\n  for (const s of configurationSet) {\n    let m = s.parent;\n    while (m) {\n      configurationSet.add(m);\n      m = m.parent;\n    }\n  }\n  return configurationSet;\n}\nfunction getValueFromAdj(baseNode, adjList) {\n  const childStateNodes = adjList.get(baseNode);\n  if (!childStateNodes) {\n    return {}; // todo: fix?\n  }\n\n  if (baseNode.type === 'compound') {\n    const childStateNode = childStateNodes[0];\n    if (childStateNode) {\n      if (isAtomicStateNode(childStateNode)) {\n        return childStateNode.key;\n      }\n    } else {\n      return {};\n    }\n  }\n  const stateValue = {};\n  for (const childStateNode of childStateNodes) {\n    stateValue[childStateNode.key] = getValueFromAdj(childStateNode, adjList);\n  }\n  return stateValue;\n}\nfunction getAdjList(configuration) {\n  const adjList = new Map();\n  for (const s of configuration) {\n    if (!adjList.has(s)) {\n      adjList.set(s, []);\n    }\n    if (s.parent) {\n      if (!adjList.has(s.parent)) {\n        adjList.set(s.parent, []);\n      }\n      adjList.get(s.parent).push(s);\n    }\n  }\n  return adjList;\n}\nfunction getStateValue(rootNode, configuration) {\n  const config = getConfiguration(configuration);\n  return getValueFromAdj(rootNode, getAdjList(config));\n}\nfunction isInFinalState(configuration, stateNode) {\n  if (stateNode.type === 'compound') {\n    return getChildren(stateNode).some(s => s.type === 'final' && configuration.has(s));\n  }\n  if (stateNode.type === 'parallel') {\n    return getChildren(stateNode).every(sn => isInFinalState(configuration, sn));\n  }\n  return stateNode.type === 'final';\n}\nconst isStateId = str => str[0] === STATE_IDENTIFIER;\nfunction getCandidates(stateNode, receivedEventType) {\n  const candidates = stateNode.transitions.get(receivedEventType) || [...stateNode.transitions.keys()].filter(descriptor => {\n    // check if transition is a wildcard transition,\n    // which matches any non-transient events\n    if (descriptor === WILDCARD) {\n      return true;\n    }\n    if (!descriptor.endsWith('.*')) {\n      return false;\n    }\n    const partialEventTokens = descriptor.split('.');\n    const eventTokens = receivedEventType.split('.');\n    for (let tokenIndex = 0; tokenIndex < partialEventTokens.length; tokenIndex++) {\n      const partialEventToken = partialEventTokens[tokenIndex];\n      const eventToken = eventTokens[tokenIndex];\n      if (partialEventToken === '*') {\n        const isLastToken = tokenIndex === partialEventTokens.length - 1;\n        return isLastToken;\n      }\n      if (partialEventToken !== eventToken) {\n        return false;\n      }\n    }\n    return true;\n  }).sort((a, b) => b.length - a.length).flatMap(key => stateNode.transitions.get(key));\n  return candidates;\n}\n\n/**\n * All delayed transitions from the config.\n */\nfunction getDelayedTransitions(stateNode) {\n  const afterConfig = stateNode.config.after;\n  if (!afterConfig) {\n    return [];\n  }\n  const mutateEntryExit = (delay, i) => {\n    const delayRef = typeof delay === 'function' ? `${stateNode.id}:delay[${i}]` : delay;\n    const afterEvent = createAfterEvent(delayRef, stateNode.id);\n    const eventType = afterEvent.type;\n    stateNode.entry.push(raise(afterEvent, {\n      id: eventType,\n      delay\n    }));\n    stateNode.exit.push(cancel(eventType));\n    return eventType;\n  };\n  const delayedTransitions = Object.keys(afterConfig).flatMap((delay, i) => {\n    const configTransition = afterConfig[delay];\n    const resolvedTransition = typeof configTransition === 'string' ? {\n      target: configTransition\n    } : configTransition;\n    const resolvedDelay = !isNaN(+delay) ? +delay : delay;\n    const eventType = mutateEntryExit(resolvedDelay, i);\n    return toArray(resolvedTransition).map(transition => ({\n      ...transition,\n      event: eventType,\n      delay: resolvedDelay\n    }));\n  });\n  return delayedTransitions.map(delayedTransition => {\n    const {\n      delay\n    } = delayedTransition;\n    return {\n      ...formatTransition(stateNode, delayedTransition.event, delayedTransition),\n      delay\n    };\n  });\n}\nfunction formatTransition(stateNode, descriptor, transitionConfig) {\n  const normalizedTarget = normalizeTarget(transitionConfig.target);\n  const reenter = transitionConfig.reenter ?? false;\n  const target = resolveTarget(stateNode, normalizedTarget);\n  const transition = {\n    ...transitionConfig,\n    actions: toArray(transitionConfig.actions),\n    guard: transitionConfig.guard,\n    target,\n    source: stateNode,\n    reenter,\n    eventType: descriptor,\n    toJSON: () => ({\n      ...transition,\n      source: `#${stateNode.id}`,\n      target: target ? target.map(t => `#${t.id}`) : undefined\n    })\n  };\n  return transition;\n}\nfunction formatTransitions(stateNode) {\n  const transitions = new Map();\n  if (stateNode.config.on) {\n    for (const descriptor of Object.keys(stateNode.config.on)) {\n      if (descriptor === NULL_EVENT) {\n        throw new Error('Null events (\"\") cannot be specified as a transition key. Use `always: { ... }` instead.');\n      }\n      const transitionsConfig = stateNode.config.on[descriptor];\n      transitions.set(descriptor, toTransitionConfigArray(transitionsConfig).map(t => formatTransition(stateNode, descriptor, t)));\n    }\n  }\n  if (stateNode.config.onDone) {\n    const descriptor = `xstate.done.state.${stateNode.id}`;\n    transitions.set(descriptor, toTransitionConfigArray(stateNode.config.onDone).map(t => formatTransition(stateNode, descriptor, t)));\n  }\n  for (const invokeDef of stateNode.invoke) {\n    if (invokeDef.onDone) {\n      const descriptor = `xstate.done.actor.${invokeDef.id}`;\n      transitions.set(descriptor, toTransitionConfigArray(invokeDef.onDone).map(t => formatTransition(stateNode, descriptor, t)));\n    }\n    if (invokeDef.onError) {\n      const descriptor = `xstate.error.actor.${invokeDef.id}`;\n      transitions.set(descriptor, toTransitionConfigArray(invokeDef.onError).map(t => formatTransition(stateNode, descriptor, t)));\n    }\n    if (invokeDef.onSnapshot) {\n      const descriptor = `xstate.snapshot.${invokeDef.id}`;\n      transitions.set(descriptor, toTransitionConfigArray(invokeDef.onSnapshot).map(t => formatTransition(stateNode, descriptor, t)));\n    }\n  }\n  for (const delayedTransition of stateNode.after) {\n    let existing = transitions.get(delayedTransition.eventType);\n    if (!existing) {\n      existing = [];\n      transitions.set(delayedTransition.eventType, existing);\n    }\n    existing.push(delayedTransition);\n  }\n  return transitions;\n}\nfunction formatInitialTransition(stateNode, _target) {\n  const resolvedTarget = typeof _target === 'string' ? stateNode.states[_target] : _target ? stateNode.states[_target.target] : undefined;\n  if (!resolvedTarget && _target) {\n    throw new Error(`Initial state node \"${_target}\" not found on parent state node #${stateNode.id}`);\n  }\n  const transition = {\n    source: stateNode,\n    actions: !_target || typeof _target === 'string' ? [] : toArray(_target.actions),\n    eventType: null,\n    reenter: false,\n    target: resolvedTarget ? [resolvedTarget] : [],\n    toJSON: () => ({\n      ...transition,\n      source: `#${stateNode.id}`,\n      target: resolvedTarget ? [`#${resolvedTarget.id}`] : []\n    })\n  };\n  return transition;\n}\nfunction resolveTarget(stateNode, targets) {\n  if (targets === undefined) {\n    // an undefined target signals that the state node should not transition from that state when receiving that event\n    return undefined;\n  }\n  return targets.map(target => {\n    if (typeof target !== 'string') {\n      return target;\n    }\n    if (isStateId(target)) {\n      return stateNode.machine.getStateNodeById(target);\n    }\n    const isInternalTarget = target[0] === STATE_DELIMITER;\n    // If internal target is defined on machine,\n    // do not include machine key on target\n    if (isInternalTarget && !stateNode.parent) {\n      return getStateNodeByPath(stateNode, target.slice(1));\n    }\n    const resolvedTarget = isInternalTarget ? stateNode.key + target : target;\n    if (stateNode.parent) {\n      try {\n        const targetStateNode = getStateNodeByPath(stateNode.parent, resolvedTarget);\n        return targetStateNode;\n      } catch (err) {\n        throw new Error(`Invalid transition definition for state node '${stateNode.id}':\\n${err.message}`);\n      }\n    } else {\n      throw new Error(`Invalid target: \"${target}\" is not a valid target from the root node. Did you mean \".${target}\"?`);\n    }\n  });\n}\nfunction resolveHistoryDefaultTransition(stateNode) {\n  const normalizedTarget = normalizeTarget(stateNode.config.target);\n  if (!normalizedTarget) {\n    return stateNode.parent.initial;\n  }\n  return {\n    target: normalizedTarget.map(t => typeof t === 'string' ? getStateNodeByPath(stateNode.parent, t) : t)\n  };\n}\nfunction isHistoryNode(stateNode) {\n  return stateNode.type === 'history';\n}\nfunction getInitialStateNodesWithTheirAncestors(stateNode) {\n  const states = getInitialStateNodes(stateNode);\n  for (const initialState of states) {\n    for (const ancestor of getProperAncestors(initialState, stateNode)) {\n      states.add(ancestor);\n    }\n  }\n  return states;\n}\nfunction getInitialStateNodes(stateNode) {\n  const set = new Set();\n  function iter(descStateNode) {\n    if (set.has(descStateNode)) {\n      return;\n    }\n    set.add(descStateNode);\n    if (descStateNode.type === 'compound') {\n      iter(descStateNode.initial.target[0]);\n    } else if (descStateNode.type === 'parallel') {\n      for (const child of getChildren(descStateNode)) {\n        iter(child);\n      }\n    }\n  }\n  iter(stateNode);\n  return set;\n}\n/**\n * Returns the child state node from its relative `stateKey`, or throws.\n */\nfunction getStateNode(stateNode, stateKey) {\n  if (isStateId(stateKey)) {\n    return stateNode.machine.getStateNodeById(stateKey);\n  }\n  if (!stateNode.states) {\n    throw new Error(`Unable to retrieve child state '${stateKey}' from '${stateNode.id}'; no child states exist.`);\n  }\n  const result = stateNode.states[stateKey];\n  if (!result) {\n    throw new Error(`Child state '${stateKey}' does not exist on '${stateNode.id}'`);\n  }\n  return result;\n}\n\n/**\n * Returns the relative state node from the given `statePath`, or throws.\n *\n * @param statePath The string or string array relative path to the state node.\n */\nfunction getStateNodeByPath(stateNode, statePath) {\n  if (typeof statePath === 'string' && isStateId(statePath)) {\n    try {\n      return stateNode.machine.getStateNodeById(statePath);\n    } catch (e) {\n      // try individual paths\n      // throw e;\n    }\n  }\n  const arrayStatePath = toStatePath(statePath).slice();\n  let currentStateNode = stateNode;\n  while (arrayStatePath.length) {\n    const key = arrayStatePath.shift();\n    if (!key.length) {\n      break;\n    }\n    currentStateNode = getStateNode(currentStateNode, key);\n  }\n  return currentStateNode;\n}\n\n/**\n * Returns the state nodes represented by the current state value.\n *\n * @param state The state value or State instance\n */\nfunction getStateNodes(stateNode, state) {\n  const stateValue = state instanceof State ? state.value : toStateValue(state);\n  if (typeof stateValue === 'string') {\n    return [stateNode, stateNode.states[stateValue]];\n  }\n  const childStateKeys = Object.keys(stateValue);\n  const childStateNodes = childStateKeys.map(subStateKey => getStateNode(stateNode, subStateKey)).filter(Boolean);\n  return [stateNode.machine.root, stateNode].concat(childStateNodes, childStateKeys.reduce((allSubStateNodes, subStateKey) => {\n    const subStateNode = getStateNode(stateNode, subStateKey);\n    if (!subStateNode) {\n      return allSubStateNodes;\n    }\n    const subStateNodes = getStateNodes(subStateNode, stateValue[subStateKey]);\n    return allSubStateNodes.concat(subStateNodes);\n  }, []));\n}\nfunction transitionAtomicNode(stateNode, stateValue, state, event) {\n  const childStateNode = getStateNode(stateNode, stateValue);\n  const next = childStateNode.next(state, event);\n  if (!next || !next.length) {\n    return stateNode.next(state, event);\n  }\n  return next;\n}\nfunction transitionCompoundNode(stateNode, stateValue, state, event) {\n  const subStateKeys = Object.keys(stateValue);\n  const childStateNode = getStateNode(stateNode, subStateKeys[0]);\n  const next = transitionNode(childStateNode, stateValue[subStateKeys[0]], state, event);\n  if (!next || !next.length) {\n    return stateNode.next(state, event);\n  }\n  return next;\n}\nfunction transitionParallelNode(stateNode, stateValue, state, event) {\n  const allInnerTransitions = [];\n  for (const subStateKey of Object.keys(stateValue)) {\n    const subStateValue = stateValue[subStateKey];\n    if (!subStateValue) {\n      continue;\n    }\n    const subStateNode = getStateNode(stateNode, subStateKey);\n    const innerTransitions = transitionNode(subStateNode, subStateValue, state, event);\n    if (innerTransitions) {\n      allInnerTransitions.push(...innerTransitions);\n    }\n  }\n  if (!allInnerTransitions.length) {\n    return stateNode.next(state, event);\n  }\n  return allInnerTransitions;\n}\nfunction transitionNode(stateNode, stateValue, state, event) {\n  // leaf node\n  if (typeof stateValue === 'string') {\n    return transitionAtomicNode(stateNode, stateValue, state, event);\n  }\n\n  // compound node\n  if (Object.keys(stateValue).length === 1) {\n    return transitionCompoundNode(stateNode, stateValue, state, event);\n  }\n\n  // parallel node\n  return transitionParallelNode(stateNode, stateValue, state, event);\n}\nfunction getHistoryNodes(stateNode) {\n  return Object.keys(stateNode.states).map(key => stateNode.states[key]).filter(sn => sn.type === 'history');\n}\nfunction isDescendant(childStateNode, parentStateNode) {\n  let marker = childStateNode;\n  while (marker.parent && marker.parent !== parentStateNode) {\n    marker = marker.parent;\n  }\n  return marker.parent === parentStateNode;\n}\nfunction hasIntersection(s1, s2) {\n  const set1 = new Set(s1);\n  const set2 = new Set(s2);\n  for (const item of set1) {\n    if (set2.has(item)) {\n      return true;\n    }\n  }\n  for (const item of set2) {\n    if (set1.has(item)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction removeConflictingTransitions(enabledTransitions, configuration, historyValue) {\n  const filteredTransitions = new Set();\n  for (const t1 of enabledTransitions) {\n    let t1Preempted = false;\n    const transitionsToRemove = new Set();\n    for (const t2 of filteredTransitions) {\n      if (hasIntersection(computeExitSet([t1], configuration, historyValue), computeExitSet([t2], configuration, historyValue))) {\n        if (isDescendant(t1.source, t2.source)) {\n          transitionsToRemove.add(t2);\n        } else {\n          t1Preempted = true;\n          break;\n        }\n      }\n    }\n    if (!t1Preempted) {\n      for (const t3 of transitionsToRemove) {\n        filteredTransitions.delete(t3);\n      }\n      filteredTransitions.add(t1);\n    }\n  }\n  return Array.from(filteredTransitions);\n}\nfunction findLeastCommonAncestor(stateNodes) {\n  const [head, ...tail] = stateNodes;\n  for (const ancestor of getProperAncestors(head, undefined)) {\n    if (tail.every(sn => isDescendant(sn, ancestor))) {\n      return ancestor;\n    }\n  }\n}\nfunction getEffectiveTargetStates(transition, historyValue) {\n  if (!transition.target) {\n    return [];\n  }\n  const targets = new Set();\n  for (const targetNode of transition.target) {\n    if (isHistoryNode(targetNode)) {\n      if (historyValue[targetNode.id]) {\n        for (const node of historyValue[targetNode.id]) {\n          targets.add(node);\n        }\n      } else {\n        for (const node of getEffectiveTargetStates(resolveHistoryDefaultTransition(targetNode), historyValue)) {\n          targets.add(node);\n        }\n      }\n    } else {\n      targets.add(targetNode);\n    }\n  }\n  return [...targets];\n}\nfunction getTransitionDomain(transition, historyValue) {\n  const targetStates = getEffectiveTargetStates(transition, historyValue);\n  if (!targetStates) {\n    return;\n  }\n  if (!transition.reenter && targetStates.every(target => target === transition.source || isDescendant(target, transition.source))) {\n    return transition.source;\n  }\n  const lca = findLeastCommonAncestor(targetStates.concat(transition.source));\n  if (lca) {\n    return lca;\n  }\n\n  // at this point we know that it's a root transition since LCA couldn't be found\n  if (transition.reenter) {\n    return;\n  }\n  return transition.source.machine.root;\n}\nfunction computeExitSet(transitions, configuration, historyValue) {\n  const statesToExit = new Set();\n  for (const t of transitions) {\n    if (t.target?.length) {\n      const domain = getTransitionDomain(t, historyValue);\n      if (t.reenter && t.source === domain) {\n        statesToExit.add(domain);\n      }\n      for (const stateNode of configuration) {\n        if (isDescendant(stateNode, domain)) {\n          statesToExit.add(stateNode);\n        }\n      }\n    }\n  }\n  return [...statesToExit];\n}\nfunction areConfigurationsEqual(previousConfiguration, nextConfigurationSet) {\n  if (previousConfiguration.length !== nextConfigurationSet.size) {\n    return false;\n  }\n  for (const node of previousConfiguration) {\n    if (!nextConfigurationSet.has(node)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * https://www.w3.org/TR/scxml/#microstepProcedure\n */\nfunction microstep(transitions, currentState, actorScope, event, isInitial, internalQueue) {\n  if (!transitions.length) {\n    return currentState;\n  }\n  const mutConfiguration = new Set(currentState.configuration);\n  let historyValue = currentState.historyValue;\n  const filteredTransitions = removeConflictingTransitions(transitions, mutConfiguration, historyValue);\n  let nextState = currentState;\n\n  // Exit states\n  if (!isInitial) {\n    [nextState, historyValue] = exitStates(nextState, event, actorScope, filteredTransitions, mutConfiguration, historyValue, internalQueue);\n  }\n\n  // Execute transition content\n  nextState = resolveActionsAndContext(nextState, event, actorScope, filteredTransitions.flatMap(t => t.actions), internalQueue);\n\n  // Enter states\n  nextState = enterStates(nextState, event, actorScope, filteredTransitions, mutConfiguration, internalQueue, historyValue, isInitial);\n  const nextConfiguration = [...mutConfiguration];\n  if (nextState.status === 'done') {\n    nextState = resolveActionsAndContext(nextState, event, actorScope, nextConfiguration.sort((a, b) => b.order - a.order).flatMap(state => state.exit), internalQueue);\n  }\n  try {\n    if (historyValue === currentState.historyValue && areConfigurationsEqual(currentState.configuration, mutConfiguration)) {\n      return nextState;\n    }\n    return cloneState(nextState, {\n      configuration: nextConfiguration,\n      historyValue\n    });\n  } catch (e) {\n    // TODO: Refactor this once proper error handling is implemented.\n    // See https://github.com/statelyai/rfcs/pull/4\n    throw e;\n  }\n}\nfunction getMachineOutput(state, event, actorScope, rootNode, rootCompletionNode) {\n  if (!rootNode.output) {\n    return;\n  }\n  const doneStateEvent = createDoneStateEvent(rootCompletionNode.id, rootCompletionNode.output && rootCompletionNode.parent ? resolveOutput(rootCompletionNode.output, state.context, event, actorScope.self) : undefined);\n  return resolveOutput(rootNode.output, state.context, doneStateEvent, actorScope.self);\n}\nfunction enterStates(currentState, event, actorScope, filteredTransitions, mutConfiguration, internalQueue, historyValue, isInitial) {\n  let nextState = currentState;\n  const statesToEnter = new Set();\n  // those are states that were directly targeted or indirectly targeted by the explicit target\n  // in other words, those are states for which initial actions should be executed\n  // when we target `#deep_child` initial actions of its ancestors shouldn't be executed\n  const statesForDefaultEntry = new Set();\n  computeEntrySet(filteredTransitions, historyValue, statesForDefaultEntry, statesToEnter);\n\n  // In the initial state, the root state node is \"entered\".\n  if (isInitial) {\n    statesForDefaultEntry.add(currentState.machine.root);\n  }\n  const completedNodes = new Set();\n  for (const stateNodeToEnter of [...statesToEnter].sort((a, b) => a.order - b.order)) {\n    mutConfiguration.add(stateNodeToEnter);\n    const actions = [];\n\n    // Add entry actions\n    actions.push(...stateNodeToEnter.entry);\n    for (const invokeDef of stateNodeToEnter.invoke) {\n      actions.push(spawn(invokeDef.src, {\n        ...invokeDef,\n        syncSnapshot: !!invokeDef.onSnapshot\n      }));\n    }\n    if (statesForDefaultEntry.has(stateNodeToEnter)) {\n      const initialActions = stateNodeToEnter.initial.actions;\n      actions.push(...initialActions);\n    }\n    nextState = resolveActionsAndContext(nextState, event, actorScope, actions, internalQueue, stateNodeToEnter.invoke.map(invokeDef => invokeDef.id));\n    if (stateNodeToEnter.type === 'final') {\n      const parent = stateNodeToEnter.parent;\n      let ancestorMarker = parent?.type === 'parallel' ? parent : parent?.parent;\n      let rootCompletionNode = ancestorMarker || stateNodeToEnter;\n      if (parent?.type === 'compound') {\n        internalQueue.push(createDoneStateEvent(parent.id, stateNodeToEnter.output ? resolveOutput(stateNodeToEnter.output, nextState.context, event, actorScope.self) : undefined));\n      }\n      while (ancestorMarker?.type === 'parallel' && !completedNodes.has(ancestorMarker) && isInFinalState(mutConfiguration, ancestorMarker)) {\n        completedNodes.add(ancestorMarker);\n        internalQueue.push(createDoneStateEvent(ancestorMarker.id));\n        rootCompletionNode = ancestorMarker;\n        ancestorMarker = ancestorMarker.parent;\n      }\n      if (ancestorMarker) {\n        continue;\n      }\n      nextState = cloneState(nextState, {\n        status: 'done',\n        output: getMachineOutput(nextState, event, actorScope, currentState.configuration[0].machine.root, rootCompletionNode)\n      });\n    }\n  }\n  return nextState;\n}\nfunction computeEntrySet(transitions, historyValue, statesForDefaultEntry, statesToEnter) {\n  for (const t of transitions) {\n    const domain = getTransitionDomain(t, historyValue);\n    for (const s of t.target || []) {\n      if (!isHistoryNode(s) && (\n      // if the target is different than the source then it will *definitely* be entered\n      t.source !== s ||\n      // we know that the domain can't lie within the source\n      // if it's different than the source then it's outside of it and it means that the target has to be entered as well\n      t.source !== domain ||\n      // reentering transitions always enter the target, even if it's the source itself\n      t.reenter)) {\n        statesToEnter.add(s);\n        statesForDefaultEntry.add(s);\n      }\n      addDescendantStatesToEnter(s, historyValue, statesForDefaultEntry, statesToEnter);\n    }\n    const targetStates = getEffectiveTargetStates(t, historyValue);\n    for (const s of targetStates) {\n      const ancestors = getProperAncestors(s, domain);\n      if (domain?.type === 'parallel') {\n        ancestors.push(domain);\n      }\n      addAncestorStatesToEnter(statesToEnter, historyValue, statesForDefaultEntry, ancestors, !t.source.parent && t.reenter ? undefined : domain);\n    }\n  }\n}\nfunction addDescendantStatesToEnter(stateNode, historyValue, statesForDefaultEntry, statesToEnter) {\n  if (isHistoryNode(stateNode)) {\n    if (historyValue[stateNode.id]) {\n      const historyStateNodes = historyValue[stateNode.id];\n      for (const s of historyStateNodes) {\n        statesToEnter.add(s);\n        addDescendantStatesToEnter(s, historyValue, statesForDefaultEntry, statesToEnter);\n      }\n      for (const s of historyStateNodes) {\n        addProperAncestorStatesToEnter(s, stateNode.parent, statesToEnter, historyValue, statesForDefaultEntry);\n      }\n    } else {\n      const historyDefaultTransition = resolveHistoryDefaultTransition(stateNode);\n      for (const s of historyDefaultTransition.target) {\n        statesToEnter.add(s);\n        if (historyDefaultTransition === stateNode.parent?.initial) {\n          statesForDefaultEntry.add(stateNode.parent);\n        }\n        addDescendantStatesToEnter(s, historyValue, statesForDefaultEntry, statesToEnter);\n      }\n      for (const s of historyDefaultTransition.target) {\n        addProperAncestorStatesToEnter(s, stateNode, statesToEnter, historyValue, statesForDefaultEntry);\n      }\n    }\n  } else {\n    if (stateNode.type === 'compound') {\n      const [initialState] = stateNode.initial.target;\n      if (!isHistoryNode(initialState)) {\n        statesToEnter.add(initialState);\n        statesForDefaultEntry.add(initialState);\n      }\n      addDescendantStatesToEnter(initialState, historyValue, statesForDefaultEntry, statesToEnter);\n      addProperAncestorStatesToEnter(initialState, stateNode, statesToEnter, historyValue, statesForDefaultEntry);\n    } else {\n      if (stateNode.type === 'parallel') {\n        for (const child of getChildren(stateNode).filter(sn => !isHistoryNode(sn))) {\n          if (![...statesToEnter].some(s => isDescendant(s, child))) {\n            if (!isHistoryNode(child)) {\n              statesToEnter.add(child);\n              statesForDefaultEntry.add(child);\n            }\n            addDescendantStatesToEnter(child, historyValue, statesForDefaultEntry, statesToEnter);\n          }\n        }\n      }\n    }\n  }\n}\nfunction addAncestorStatesToEnter(statesToEnter, historyValue, statesForDefaultEntry, ancestors, reentrancyDomain) {\n  for (const anc of ancestors) {\n    if (!reentrancyDomain || isDescendant(anc, reentrancyDomain)) {\n      statesToEnter.add(anc);\n    }\n    if (anc.type === 'parallel') {\n      for (const child of getChildren(anc).filter(sn => !isHistoryNode(sn))) {\n        if (![...statesToEnter].some(s => isDescendant(s, child))) {\n          statesToEnter.add(child);\n          addDescendantStatesToEnter(child, historyValue, statesForDefaultEntry, statesToEnter);\n        }\n      }\n    }\n  }\n}\nfunction addProperAncestorStatesToEnter(stateNode, toStateNode, statesToEnter, historyValue, statesForDefaultEntry) {\n  addAncestorStatesToEnter(statesToEnter, historyValue, statesForDefaultEntry, getProperAncestors(stateNode, toStateNode));\n}\nfunction exitStates(currentState, event, actorScope, transitions, mutConfiguration, historyValue, internalQueue) {\n  let nextState = currentState;\n  const statesToExit = computeExitSet(transitions, mutConfiguration, historyValue);\n  statesToExit.sort((a, b) => b.order - a.order);\n  let changedHistory;\n\n  // From SCXML algorithm: https://www.w3.org/TR/scxml/#exitStates\n  for (const exitStateNode of statesToExit) {\n    for (const historyNode of getHistoryNodes(exitStateNode)) {\n      let predicate;\n      if (historyNode.history === 'deep') {\n        predicate = sn => isAtomicStateNode(sn) && isDescendant(sn, exitStateNode);\n      } else {\n        predicate = sn => {\n          return sn.parent === exitStateNode;\n        };\n      }\n      changedHistory ??= {\n        ...historyValue\n      };\n      changedHistory[historyNode.id] = Array.from(mutConfiguration).filter(predicate);\n    }\n  }\n  for (const s of statesToExit) {\n    nextState = resolveActionsAndContext(nextState, event, actorScope, [...s.exit, ...s.invoke.map(def => stop(def.id))], internalQueue);\n    mutConfiguration.delete(s);\n  }\n  return [nextState, changedHistory || historyValue];\n}\nfunction resolveActionsAndContextWorker(currentState, event, actorScope, actions, extra, retries) {\n  const {\n    machine\n  } = currentState;\n  let intermediateState = currentState;\n  for (const action of actions) {\n    const isInline = typeof action === 'function';\n    const resolvedAction = isInline ? action :\n    // the existing type of `.actions` assumes non-nullable `TExpressionAction`\n    // it's fine to cast this here to get a common type and lack of errors in the rest of the code\n    // our logic below makes sure that we call those 2 \"variants\" correctly\n    machine.implementations.actions[typeof action === 'string' ? action : action.type];\n    if (!resolvedAction) {\n      continue;\n    }\n    const actionArgs = {\n      context: intermediateState.context,\n      event,\n      self: actorScope?.self,\n      system: actorScope?.system\n    };\n    const actionParams = isInline || typeof action === 'string' ? undefined : 'params' in action ? typeof action.params === 'function' ? action.params({\n      context: intermediateState.context,\n      event\n    }) : action.params : undefined;\n    if (!('resolve' in resolvedAction)) {\n      if (actorScope?.self.status === ActorStatus.Running) {\n        resolvedAction(actionArgs, actionParams);\n      } else {\n        actorScope?.defer(() => {\n          resolvedAction(actionArgs, actionParams);\n        });\n      }\n      continue;\n    }\n    const builtinAction = resolvedAction;\n    const [nextState, params, actions] = builtinAction.resolve(actorScope, intermediateState, actionArgs, actionParams, resolvedAction,\n    // this holds all params\n    extra);\n    intermediateState = nextState;\n    if ('retryResolve' in builtinAction) {\n      retries?.push([builtinAction, params]);\n    }\n    if ('execute' in builtinAction) {\n      if (actorScope?.self.status === ActorStatus.Running) {\n        builtinAction.execute(actorScope, params);\n      } else {\n        actorScope?.defer(builtinAction.execute.bind(null, actorScope, params));\n      }\n    }\n    if (actions) {\n      intermediateState = resolveActionsAndContextWorker(intermediateState, event, actorScope, actions, extra, retries);\n    }\n  }\n  return intermediateState;\n}\nfunction resolveActionsAndContext(currentState, event, actorScope, actions, internalQueue, deferredActorIds) {\n  const retries = deferredActorIds ? [] : undefined;\n  const nextState = resolveActionsAndContextWorker(currentState, event, actorScope, actions, {\n    internalQueue,\n    deferredActorIds\n  }, retries);\n  retries?.forEach(([builtinAction, params]) => {\n    builtinAction.retryResolve(actorScope, nextState, params);\n  });\n  return nextState;\n}\nfunction macrostep(state, event, actorScope, internalQueue = []) {\n  let nextState = state;\n  const states = [];\n\n  // Handle stop event\n  if (event.type === XSTATE_STOP) {\n    nextState = cloneState(stopChildren(nextState, event, actorScope), {\n      status: 'stopped'\n    });\n    states.push(nextState);\n    return {\n      state: nextState,\n      microstates: states\n    };\n  }\n  let nextEvent = event;\n\n  // Assume the state is at rest (no raised events)\n  // Determine the next state based on the next microstep\n  if (nextEvent.type !== XSTATE_INIT) {\n    const transitions = selectTransitions(nextEvent, nextState);\n    nextState = microstep(transitions, state, actorScope, nextEvent, false, internalQueue);\n    states.push(nextState);\n  }\n  let shouldSelectEventlessTransitions = true;\n  while (nextState.status === 'active') {\n    let enabledTransitions = shouldSelectEventlessTransitions ? selectEventlessTransitions(nextState, nextEvent) : [];\n\n    // eventless transitions should always be selected after selecting *regular* transitions\n    // by assigning `undefined` to `previousState` we ensure that `shouldSelectEventlessTransitions` gets always computed to true in such a case\n    const previousState = enabledTransitions.length ? nextState : undefined;\n    if (!enabledTransitions.length) {\n      if (!internalQueue.length) {\n        break;\n      }\n      nextEvent = internalQueue.shift();\n      enabledTransitions = selectTransitions(nextEvent, nextState);\n    }\n    nextState = microstep(enabledTransitions, nextState, actorScope, nextEvent, false, internalQueue);\n    shouldSelectEventlessTransitions = nextState !== previousState;\n    states.push(nextState);\n  }\n  if (nextState.status !== 'active') {\n    stopChildren(nextState, nextEvent, actorScope);\n  }\n  return {\n    state: nextState,\n    microstates: states\n  };\n}\nfunction stopChildren(nextState, event, actorScope) {\n  return resolveActionsAndContext(nextState, event, actorScope, Object.values(nextState.children).map(child => stop(child)), []);\n}\nfunction selectTransitions(event, nextState) {\n  return nextState.machine.getTransitionData(nextState, event);\n}\nfunction selectEventlessTransitions(nextState, event) {\n  const enabledTransitionSet = new Set();\n  const atomicStates = nextState.configuration.filter(isAtomicStateNode);\n  for (const stateNode of atomicStates) {\n    loop: for (const s of [stateNode].concat(getProperAncestors(stateNode, undefined))) {\n      if (!s.always) {\n        continue;\n      }\n      for (const transition of s.always) {\n        if (transition.guard === undefined || evaluateGuard(transition.guard, nextState.context, event, nextState)) {\n          enabledTransitionSet.add(transition);\n          break loop;\n        }\n      }\n    }\n  }\n  return removeConflictingTransitions(Array.from(enabledTransitionSet), new Set(nextState.configuration), nextState.historyValue);\n}\n\n/**\n * Resolves a partial state value with its full representation in the state node's machine.\n *\n * @param stateValue The partial state value to resolve.\n */\nfunction resolveStateValue(rootNode, stateValue) {\n  const configuration = getConfiguration(getStateNodes(rootNode, stateValue));\n  return getStateValue(rootNode, [...configuration]);\n}\nfunction getInitialConfiguration(rootNode) {\n  const configuration = [];\n  const initialTransition = rootNode.initial;\n  const statesToEnter = new Set();\n  const statesForDefaultEntry = new Set([rootNode]);\n  computeEntrySet([initialTransition], {}, statesForDefaultEntry, statesToEnter);\n  for (const stateNodeToEnter of [...statesToEnter].sort((a, b) => a.order - b.order)) {\n    configuration.push(stateNodeToEnter);\n  }\n  return configuration;\n}\n\nclass State {\n  /**\n   * Indicates whether the state is a final state.\n   */\n\n  /**\n   * The output data of the top-level finite state.\n   */\n\n  /**\n   * The enabled state nodes representative of the state value.\n   */\n\n  /**\n   * An object mapping actor names to spawned/invoked actors.\n   */\n\n  /**\n   * Creates a new State instance for the given `stateValue` and `context`.\n   * @param stateValue\n   * @param context\n   */\n  static from(stateValue, context = {}, machine) {\n    if (stateValue instanceof State) {\n      if (stateValue.context !== context) {\n        return new State({\n          value: stateValue.value,\n          context,\n          meta: {},\n          configuration: [],\n          // TODO: fix,\n          children: {},\n          status: 'active'\n        }, machine);\n      }\n      return stateValue;\n    }\n    const configuration = getConfiguration(getStateNodes(machine.root, stateValue));\n    return new State({\n      value: stateValue,\n      context,\n      meta: undefined,\n      configuration: Array.from(configuration),\n      children: {},\n      status: 'active'\n    }, machine);\n  }\n\n  /**\n   * Creates a new `State` instance that represents the current state of a running machine.\n   *\n   * @param config\n   */\n  constructor(config, machine) {\n    this.machine = machine;\n    this.tags = void 0;\n    this.value = void 0;\n    this.status = void 0;\n    this.error = void 0;\n    this.context = void 0;\n    this.historyValue = {};\n    this.configuration = void 0;\n    this.children = void 0;\n    this.context = config.context;\n    this.historyValue = config.historyValue || {};\n    this.matches = this.matches.bind(this);\n    this.toStrings = this.toStrings.bind(this);\n    this.configuration = config.configuration ?? Array.from(getConfiguration(getStateNodes(machine.root, config.value)));\n    this.children = config.children;\n    this.value = getStateValue(machine.root, this.configuration);\n    this.tags = new Set(flatten(this.configuration.map(sn => sn.tags)));\n    this.status = config.status;\n    this.output = config.output;\n    this.error = config.error;\n  }\n\n  /**\n   * Returns an array of all the string leaf state node paths.\n   * @param stateValue\n   * @param delimiter The character(s) that separate each subpath in the string state node path.\n   */\n  toStrings(stateValue = this.value) {\n    if (typeof stateValue === 'string') {\n      return [stateValue];\n    }\n    const valueKeys = Object.keys(stateValue);\n    return valueKeys.concat(...valueKeys.map(key => this.toStrings(stateValue[key]).map(s => key + STATE_DELIMITER + s)));\n  }\n  toJSON() {\n    const {\n      configuration,\n      tags,\n      machine,\n      ...jsonValues\n    } = this;\n    return {\n      ...jsonValues,\n      tags: Array.from(tags),\n      meta: this.meta\n    };\n  }\n\n  /**\n   * Whether the current state value is a subset of the given parent state value.\n   * @param parentStateValue\n   */\n  matches(parentStateValue) {\n    return matchesState(parentStateValue, this.value);\n  }\n\n  /**\n   * Whether the current state configuration has a state node with the specified `tag`.\n   * @param tag\n   */\n  hasTag(tag) {\n    return this.tags.has(tag);\n  }\n\n  /**\n   * Determines whether sending the `event` will cause a non-forbidden transition\n   * to be selected, even if the transitions have no actions nor\n   * change the state value.\n   *\n   * @param event The event to test\n   * @returns Whether the event will cause a transition\n   */\n  can(event) {\n    const transitionData = this.machine.getTransitionData(this, event);\n    return !!transitionData?.length &&\n    // Check that at least one transition is not forbidden\n    transitionData.some(t => t.target !== undefined || t.actions.length);\n  }\n\n  /**\n   * The next events that will cause a transition from the current state.\n   */\n  get nextEvents() {\n    return memo(this, 'nextEvents', () => {\n      return [...new Set(flatten([...this.configuration.map(sn => sn.ownEvents)]))];\n    });\n  }\n  get meta() {\n    return this.configuration.reduce((acc, stateNode) => {\n      if (stateNode.meta !== undefined) {\n        acc[stateNode.id] = stateNode.meta;\n      }\n      return acc;\n    }, {});\n  }\n}\nfunction cloneState(state, config = {}) {\n  return new State({\n    ...state,\n    ...config\n  }, state.machine);\n}\nfunction getPersistedState(state) {\n  const {\n    configuration,\n    tags,\n    machine,\n    children,\n    context,\n    ...jsonValues\n  } = state;\n  const childrenJson = {};\n  for (const id in children) {\n    const child = children[id];\n    childrenJson[id] = {\n      state: child.getPersistedState(),\n      src: child.src,\n      systemId: child._systemId\n    };\n  }\n  const persisted = {\n    ...jsonValues,\n    context: persistContext(context),\n    children: childrenJson\n  };\n  return persisted;\n}\nfunction persistContext(contextPart) {\n  let copy;\n  for (const key in contextPart) {\n    const value = contextPart[key];\n    if (value && typeof value === 'object') {\n      if ('sessionId' in value && 'send' in value && 'ref' in value) {\n        copy ??= Array.isArray(contextPart) ? contextPart.slice() : {\n          ...contextPart\n        };\n        copy[key] = {\n          xstate$$type: $$ACTOR_TYPE,\n          id: value.id\n        };\n      } else {\n        const result = persistContext(value);\n        if (result !== value) {\n          copy ??= Array.isArray(contextPart) ? contextPart.slice() : {\n            ...contextPart\n          };\n          copy[key] = result;\n        }\n      }\n    }\n  }\n  return copy ?? contextPart;\n}\n\nfunction resolveRaise(_, state, args, actionParams, {\n  event: eventOrExpr,\n  id,\n  delay\n}, {\n  internalQueue\n}) {\n  const delaysMap = state.machine.implementations.delays;\n  if (typeof eventOrExpr === 'string') {\n    throw new Error(`Only event objects may be used with raise; use raise({ type: \"${eventOrExpr}\" }) instead`);\n  }\n  const resolvedEvent = typeof eventOrExpr === 'function' ? eventOrExpr(args, actionParams) : eventOrExpr;\n  let resolvedDelay;\n  if (typeof delay === 'string') {\n    const configDelay = delaysMap && delaysMap[delay];\n    resolvedDelay = typeof configDelay === 'function' ? configDelay(args, actionParams) : configDelay;\n  } else {\n    resolvedDelay = typeof delay === 'function' ? delay(args, actionParams) : delay;\n  }\n  if (typeof resolvedDelay !== 'number') {\n    internalQueue.push(resolvedEvent);\n  }\n  return [state, {\n    event: resolvedEvent,\n    id,\n    delay: resolvedDelay\n  }];\n}\nfunction executeRaise(actorScope, params) {\n  if (typeof params.delay === 'number') {\n    actorScope.self.delaySend(params);\n    return;\n  }\n}\n/**\n * Raises an event. This places the event in the internal event queue, so that\n * the event is immediately consumed by the machine in the current step.\n *\n * @param eventType The event to raise.\n */\nfunction raise(eventOrExpr, options) {\n  function raise(args, params) {\n  }\n  raise.type = 'xstate.raise';\n  raise.event = eventOrExpr;\n  raise.id = options?.id;\n  raise.delay = options?.delay;\n  raise.resolve = resolveRaise;\n  raise.execute = executeRaise;\n  return raise;\n}\n\nexport { raise as A, stop as B, spawn as C, State as S, formatTransition as a, formatInitialTransition as b, getCandidates as c, getConfiguration as d, evaluateGuard as e, formatTransitions as f, getDelayedTransitions as g, getStateNodes as h, isInFinalState as i, cloneState as j, macrostep as k, getInitialConfiguration as l, memo as m, resolveActionsAndContext as n, microstep as o, getInitialStateNodes as p, isStateId as q, resolveStateValue as r, getStateNodeByPath as s, transitionNode as t, getPersistedState as u, and as v, not as w, or as x, stateIn as y, cancel as z };\n","import { j as cloneState, e as evaluateGuard } from './raise-2b2fdec3.esm.js';\nimport { f as ActorStatus, j as createErrorActorEvent, r as resolveReferencedActor, d as createActor, t as toArray, x as XSTATE_ERROR } from './interpreter-ed0fac7e.esm.js';\n\nfunction createSpawner(actorScope, {\n  machine,\n  context\n}, event, spawnedChildren) {\n  const spawn = (src, options = {}) => {\n    const {\n      systemId\n    } = options;\n    if (typeof src === 'string') {\n      const referenced = resolveReferencedActor(machine, src);\n      if (!referenced) {\n        throw new Error(`Actor logic '${src}' not implemented in machine '${machine.id}'`);\n      }\n      const input = 'input' in options ? options.input : referenced.input;\n\n      // TODO: this should also receive `src`\n      const actorRef = createActor(referenced.src, {\n        id: options.id,\n        parent: actorScope.self,\n        input: typeof input === 'function' ? input({\n          context,\n          event,\n          self: actorScope.self\n        }) : input,\n        src,\n        systemId\n      });\n      spawnedChildren[actorRef.id] = actorRef;\n      if (options.syncSnapshot) {\n        actorRef.subscribe({\n          next: snapshot => {\n            if (snapshot.status === 'active') {\n              actorScope.self.send({\n                type: `xstate.snapshot.${actorRef.id}`,\n                snapshot\n              });\n            }\n          },\n          error: () => {}\n        });\n      }\n      return actorRef;\n    } else {\n      // TODO: this should also receive `src`\n      const actorRef = createActor(src, {\n        id: options.id,\n        parent: actorScope.self,\n        input: options.input,\n        src: undefined,\n        systemId\n      });\n      if (options.syncSnapshot) {\n        actorRef.subscribe({\n          next: snapshot => {\n            if (snapshot.status === 'active') {\n              actorScope.self.send({\n                type: `xstate.snapshot.${actorRef.id}`,\n                snapshot,\n                id: actorRef.id\n              });\n            }\n          },\n          error: () => {}\n        });\n      }\n      return actorRef;\n    }\n  };\n  return (src, options) => {\n    const actorRef = spawn(src, options); // TODO: fix types\n    spawnedChildren[actorRef.id] = actorRef;\n    actorScope.defer(() => {\n      if (actorRef.status === ActorStatus.Stopped) {\n        return;\n      }\n      try {\n        actorRef.start?.();\n      } catch (err) {\n        actorScope.self.send(createErrorActorEvent(actorRef.id, err));\n        return;\n      }\n    });\n    return actorRef;\n  };\n}\n\nfunction resolveAssign(actorScope, state, actionArgs, actionParams, {\n  assignment\n}) {\n  if (!state.context) {\n    throw new Error('Cannot assign to undefined `context`. Ensure that `context` is defined in the machine config.');\n  }\n  const spawnedChildren = {};\n  const assignArgs = {\n    context: state.context,\n    event: actionArgs.event,\n    spawn: createSpawner(actorScope, state, actionArgs.event, spawnedChildren),\n    self: actorScope?.self,\n    system: actorScope?.system\n  };\n  let partialUpdate = {};\n  if (typeof assignment === 'function') {\n    partialUpdate = assignment(assignArgs, actionParams);\n  } else {\n    for (const key of Object.keys(assignment)) {\n      const propAssignment = assignment[key];\n      partialUpdate[key] = typeof propAssignment === 'function' ? propAssignment(assignArgs, actionParams) : propAssignment;\n    }\n  }\n  const updatedContext = Object.assign({}, state.context, partialUpdate);\n  return [cloneState(state, {\n    context: updatedContext,\n    children: Object.keys(spawnedChildren).length ? {\n      ...state.children,\n      ...spawnedChildren\n    } : state.children\n  })];\n}\n/**\n * Updates the current context of the machine.\n *\n * @param assignment An object that represents the partial context to update.\n */\nfunction assign(assignment) {\n  function assign(args, params) {\n  }\n  assign.type = 'xstate.assign';\n  assign.assignment = assignment;\n  assign.resolve = resolveAssign;\n  return assign;\n}\n\nfunction resolveChoose(_, state, actionArgs, _actionParams, {\n  branches\n}) {\n  const matchedActions = branches.find(condition => {\n    return !condition.guard || evaluateGuard(condition.guard, state.context, actionArgs.event, state);\n  })?.actions;\n  return [state, undefined, toArray(matchedActions)];\n}\nfunction choose(branches) {\n  function choose(args, params) {\n  }\n  choose.type = 'xstate.choose';\n  choose.branches = branches;\n  choose.resolve = resolveChoose;\n  return choose;\n}\n\nfunction resolveLog(_, state, actionArgs, actionParams, {\n  value,\n  label\n}) {\n  return [state, {\n    value: typeof value === 'function' ? value(actionArgs, actionParams) : value,\n    label\n  }];\n}\nfunction executeLog({\n  logger\n}, {\n  value,\n  label\n}) {\n  if (label) {\n    logger(label, value);\n  } else {\n    logger(value);\n  }\n}\n/**\n *\n * @param expr The expression function to evaluate which will be logged.\n *  Takes in 2 arguments:\n *  - `ctx` - the current state context\n *  - `event` - the event that caused this action to be executed.\n * @param label The label to give to the logged expression.\n */\nfunction log(value = ({\n  context,\n  event\n}) => ({\n  context,\n  event\n}), label) {\n  function log(args, params) {\n  }\n  log.type = 'xstate.log';\n  log.value = value;\n  log.label = label;\n  log.resolve = resolveLog;\n  log.execute = executeLog;\n  return log;\n}\n\nfunction resolvePure(_, state, args, _actionParams, {\n  get\n}) {\n  return [state, undefined, toArray(get({\n    context: args.context,\n    event: args.event\n  }))];\n}\nfunction pure(getActions) {\n  function pure(args, params) {\n  }\n  pure.type = 'xstate.pure';\n  pure.get = getActions;\n  pure.resolve = resolvePure;\n  return pure;\n}\n\n/**\n *\n * @remarks\n *\n * `T | unknown` reduces to `unknown` and that can be problematic when it comes to contextual typing.\n * It especially is a problem when the union has a function member, like here:\n *\n * ```ts\n * declare function test(cbOrVal: ((arg: number) => unknown) | unknown): void;\n * test((arg) => {}) // oops, implicit any\n * ```\n *\n * This type can be used to avoid this problem. This union represents the same value space as `unknown`.\n */\n\n// https://github.com/microsoft/TypeScript/issues/23182#issuecomment-379091887\n\n/**\n * The full definition of an event, with a string `type`.\n */\n\n/**\n * The string or object representing the state value relative to the parent state node.\n *\n * @remarks\n *\n * - For a child atomic state node, this is a string, e.g., `\"pending\"`.\n *\n * - For complex state nodes, this is an object, e.g., `{ success: \"someChildState\" }`.\n */\n\n// TODO: remove once TS fixes this type-widening issue\n\n// TODO: possibly refactor this somehow, use even a simpler type, and maybe even make `machine.options` private or something\n\nlet SpecialTargets = /*#__PURE__*/function (SpecialTargets) {\n  SpecialTargets[\"Parent\"] = \"#_parent\";\n  SpecialTargets[\"Internal\"] = \"#_internal\";\n  return SpecialTargets;\n}({});\n\nfunction resolveSendTo(actorScope, state, args, actionParams, {\n  to,\n  event: eventOrExpr,\n  id,\n  delay\n}, extra) {\n  const delaysMap = state.machine.implementations.delays;\n  if (typeof eventOrExpr === 'string') {\n    throw new Error(`Only event objects may be used with sendTo; use sendTo({ type: \"${eventOrExpr}\" }) instead`);\n  }\n  const resolvedEvent = typeof eventOrExpr === 'function' ? eventOrExpr(args, actionParams) : eventOrExpr;\n  let resolvedDelay;\n  if (typeof delay === 'string') {\n    const configDelay = delaysMap && delaysMap[delay];\n    resolvedDelay = typeof configDelay === 'function' ? configDelay(args, actionParams) : configDelay;\n  } else {\n    resolvedDelay = typeof delay === 'function' ? delay(args, actionParams) : delay;\n  }\n  const resolvedTarget = typeof to === 'function' ? to(args, actionParams) : to;\n  let targetActorRef;\n  if (typeof resolvedTarget === 'string') {\n    if (resolvedTarget === SpecialTargets.Parent) {\n      targetActorRef = actorScope?.self._parent;\n    } else if (resolvedTarget === SpecialTargets.Internal) {\n      targetActorRef = actorScope?.self;\n    } else if (resolvedTarget.startsWith('#_')) {\n      // SCXML compatibility: https://www.w3.org/TR/scxml/#SCXMLEventProcessor\n      // #_invokeid. If the target is the special term '#_invokeid', where invokeid is the invokeid of an SCXML session that the sending session has created by <invoke>, the Processor must add the event to the external queue of that session.\n      targetActorRef = state.children[resolvedTarget.slice(2)];\n    } else {\n      targetActorRef = extra.deferredActorIds?.includes(resolvedTarget) ? resolvedTarget : state.children[resolvedTarget];\n    }\n    if (!targetActorRef) {\n      throw new Error(`Unable to send event to actor '${resolvedTarget}' from machine '${state.machine.id}'.`);\n    }\n  } else {\n    targetActorRef = resolvedTarget || actorScope?.self;\n  }\n  return [state, {\n    to: targetActorRef,\n    event: resolvedEvent,\n    id,\n    delay: resolvedDelay\n  }];\n}\nfunction retryResolveSendTo(_, state, params) {\n  if (typeof params.to === 'string') {\n    params.to = state.children[params.to];\n  }\n}\nfunction executeSendTo(actorScope, params) {\n  if (typeof params.delay === 'number') {\n    actorScope.self.delaySend(params);\n    return;\n  }\n\n  // this forms an outgoing events queue\n  // thanks to that the recipient actors are able to read the *updated* snapshot value of the sender\n  actorScope.defer(() => {\n    const {\n      to,\n      event\n    } = params;\n    actorScope?.system._relay(actorScope.self, to, event.type === XSTATE_ERROR ? createErrorActorEvent(actorScope.self.id, event.data) : event);\n  });\n}\n/**\n * Sends an event to an actor.\n *\n * @param actor The `ActorRef` to send the event to.\n * @param event The event to send, or an expression that evaluates to the event to send\n * @param options Send action options\n *  - `id` - The unique send event identifier (used with `cancel()`).\n *  - `delay` - The number of milliseconds to delay the sending of the event.\n */\nfunction sendTo(to, eventOrExpr, options) {\n  function sendTo(args, params) {\n  }\n  sendTo.type = 'xstate.sendTo';\n  sendTo.to = to;\n  sendTo.event = eventOrExpr;\n  sendTo.id = options?.id;\n  sendTo.delay = options?.delay;\n  sendTo.resolve = resolveSendTo;\n  sendTo.retryResolve = retryResolveSendTo;\n  sendTo.execute = executeSendTo;\n  return sendTo;\n}\n\n/**\n * Sends an event to this machine's parent.\n *\n * @param event The event to send to the parent machine.\n * @param options Options to pass into the send event.\n */\nfunction sendParent(event, options) {\n  return sendTo(SpecialTargets.Parent, event, options);\n}\n/**\n * Forwards (sends) an event to a specified service.\n *\n * @param target The target service to forward the event to.\n * @param options Options to pass into the send action creator.\n */\nfunction forwardTo(target, options) {\n  return sendTo(target, ({\n    event\n  }) => event, options);\n}\n\n/**\n * Escalates an error by sending it as an event to this machine's parent.\n *\n * @param errorData The error data to send, or the expression function that\n * takes in the `context`, `event`, and `meta`, and returns the error data to send.\n * @param options Options to pass into the send action creator.\n */\nfunction escalate(errorData, options) {\n  return sendParent(arg => {\n    return {\n      type: XSTATE_ERROR,\n      data: typeof errorData === 'function' ? errorData(arg) : errorData\n    };\n  }, options);\n}\n\nexport { SpecialTargets as S, assign as a, sendTo as b, choose as c, escalate as e, forwardTo as f, log as l, pure as p, sendParent as s };\n","export { createEmptyActor, fromCallback, fromEventObservable, fromObservable, fromPromise, fromTransition } from '../actors/dist/xstate-actors.esm.js';\nimport { S as STATE_DELIMITER, m as mapValues, t as toArray, a as toTransitionConfigArray, N as NULL_EVENT, c as createInvokeId, i as isErrorActorEvent, b as createInitEvent, r as resolveReferencedActor, d as createActor, $ as $$ACTOR_TYPE, e as matchesState } from './interpreter-ed0fac7e.esm.js';\nexport { A as Actor, f as ActorStatus, I as InterpreterStatus, d as createActor, g as interpret, e as matchesState, p as pathToStateValue, h as toObserver } from './interpreter-ed0fac7e.esm.js';\nimport { f as formatTransitions, a as formatTransition, m as memo, e as evaluateGuard, g as getDelayedTransitions, b as formatInitialTransition, c as getCandidates, d as getConfiguration, h as getStateNodes, r as resolveStateValue, i as isInFinalState, S as State, j as cloneState, k as macrostep, t as transitionNode, l as getInitialConfiguration, n as resolveActionsAndContext, o as microstep, p as getInitialStateNodes, q as isStateId, s as getStateNodeByPath, u as getPersistedState } from './raise-2b2fdec3.esm.js';\nexport { S as State, v as and, z as cancel, h as getStateNodes, w as not, x as or, A as raise, C as spawn, y as stateIn, B as stop } from './raise-2b2fdec3.esm.js';\nimport { a as assign } from './send-59f66c58.esm.js';\nexport { S as SpecialTargets, a as assign, c as choose, e as escalate, f as forwardTo, l as log, p as pure, s as sendParent, b as sendTo } from './send-59f66c58.esm.js';\nimport '../dev/dist/xstate-dev.esm.js';\n\nclass SimulatedClock {\n  constructor() {\n    this.timeouts = new Map();\n    this._now = 0;\n    this._id = 0;\n  }\n  now() {\n    return this._now;\n  }\n  getId() {\n    return this._id++;\n  }\n  setTimeout(fn, timeout) {\n    const id = this.getId();\n    this.timeouts.set(id, {\n      start: this.now(),\n      timeout,\n      fn\n    });\n    return id;\n  }\n  clearTimeout(id) {\n    this.timeouts.delete(id);\n  }\n  set(time) {\n    if (this._now > time) {\n      throw new Error('Unable to travel back in time');\n    }\n    this._now = time;\n    this.flushTimeouts();\n  }\n  flushTimeouts() {\n    [...this.timeouts].sort(([_idA, timeoutA], [_idB, timeoutB]) => {\n      const endA = timeoutA.start + timeoutA.timeout;\n      const endB = timeoutB.start + timeoutB.timeout;\n      return endB > endA ? -1 : 1;\n    }).forEach(([id, timeout]) => {\n      if (this.now() - timeout.start >= timeout.timeout) {\n        this.timeouts.delete(id);\n        timeout.fn.call(null);\n      }\n    });\n  }\n  increment(ms) {\n    this._now += ms;\n    this.flushTimeouts();\n  }\n}\n\nconst EMPTY_OBJECT = {};\nconst toSerializableAction = action => {\n  if (typeof action === 'string') {\n    return {\n      type: action\n    };\n  }\n  if (typeof action === 'function') {\n    if ('resolve' in action) {\n      return {\n        type: action.type\n      };\n    }\n    return {\n      type: action.name\n    };\n  }\n  return action;\n};\nclass StateNode {\n  /**\n   * The relative key of the state node, which represents its location in the overall state value.\n   */\n\n  /**\n   * The unique ID of the state node.\n   */\n\n  /**\n   * The type of this state node:\n   *\n   *  - `'atomic'` - no child state nodes\n   *  - `'compound'` - nested child state nodes (XOR)\n   *  - `'parallel'` - orthogonal nested child state nodes (AND)\n   *  - `'history'` - history state node\n   *  - `'final'` - final state node\n   */\n\n  /**\n   * The string path from the root machine node to this node.\n   */\n\n  /**\n   * The child state nodes.\n   */\n\n  /**\n   * The type of history on this state node. Can be:\n   *\n   *  - `'shallow'` - recalls only top-level historical state value\n   *  - `'deep'` - recalls historical state value at all levels\n   */\n\n  /**\n   * The action(s) to be executed upon entering the state node.\n   */\n\n  /**\n   * The action(s) to be executed upon exiting the state node.\n   */\n\n  /**\n   * The parent state node.\n   */\n\n  /**\n   * The root machine node.\n   */\n\n  /**\n   * The meta data associated with this state node, which will be returned in State instances.\n   */\n\n  /**\n   * The output data sent with the \"xstate.done.state._id_\" event if this is a final state node.\n   */\n\n  /**\n   * The order this state node appears. Corresponds to the implicit document order.\n   */\n\n  constructor(\n  /**\n   * The raw config used to create the machine.\n   */\n  config, options) {\n    this.config = config;\n    this.key = void 0;\n    this.id = void 0;\n    this.type = void 0;\n    this.path = void 0;\n    this.states = void 0;\n    this.history = void 0;\n    this.entry = void 0;\n    this.exit = void 0;\n    this.parent = void 0;\n    this.machine = void 0;\n    this.meta = void 0;\n    this.output = void 0;\n    this.order = -1;\n    this.description = void 0;\n    this.tags = [];\n    this.transitions = void 0;\n    this.always = void 0;\n    this.parent = options._parent;\n    this.key = options._key;\n    this.machine = options._machine;\n    this.path = this.parent ? this.parent.path.concat(this.key) : [];\n    this.id = this.config.id || [this.machine.id, ...this.path].join(STATE_DELIMITER);\n    this.type = this.config.type || (this.config.states && Object.keys(this.config.states).length ? 'compound' : this.config.history ? 'history' : 'atomic');\n    this.description = this.config.description;\n    this.order = this.machine.idMap.size;\n    this.machine.idMap.set(this.id, this);\n    this.states = this.config.states ? mapValues(this.config.states, (stateConfig, key) => {\n      const stateNode = new StateNode(stateConfig, {\n        _parent: this,\n        _key: key,\n        _machine: this.machine\n      });\n      return stateNode;\n    }) : EMPTY_OBJECT;\n    if (this.type === 'compound' && !this.config.initial) {\n      throw new Error(`No initial state specified for compound state node \"#${this.id}\". Try adding { initial: \"${Object.keys(this.states)[0]}\" } to the state config.`);\n    }\n\n    // History config\n    this.history = this.config.history === true ? 'shallow' : this.config.history || false;\n    this.entry = toArray(this.config.entry).slice();\n    this.exit = toArray(this.config.exit).slice();\n    this.meta = this.config.meta;\n    this.output = this.type === 'final' || !this.parent ? this.config.output : undefined;\n    this.tags = toArray(config.tags).slice();\n  }\n  _initialize() {\n    this.transitions = formatTransitions(this);\n    if (this.config.always) {\n      this.always = toTransitionConfigArray(this.config.always).map(t => formatTransition(this, NULL_EVENT, t));\n    }\n    Object.keys(this.states).forEach(key => {\n      this.states[key]._initialize();\n    });\n  }\n\n  /**\n   * The well-structured state node definition.\n   */\n  get definition() {\n    return {\n      id: this.id,\n      key: this.key,\n      version: this.machine.version,\n      type: this.type,\n      initial: this.initial ? {\n        target: this.initial.target,\n        source: this,\n        actions: this.initial.actions.map(toSerializableAction),\n        eventType: null,\n        reenter: false,\n        toJSON: () => ({\n          target: this.initial.target.map(t => `#${t.id}`),\n          source: `#${this.id}`,\n          actions: this.initial.actions.map(toSerializableAction),\n          eventType: null\n        })\n      } : undefined,\n      history: this.history,\n      states: mapValues(this.states, state => {\n        return state.definition;\n      }),\n      on: this.on,\n      transitions: [...this.transitions.values()].flat().map(t => ({\n        ...t,\n        actions: t.actions.map(toSerializableAction)\n      })),\n      entry: this.entry.map(toSerializableAction),\n      exit: this.exit.map(toSerializableAction),\n      meta: this.meta,\n      order: this.order || -1,\n      output: this.output,\n      invoke: this.invoke,\n      description: this.description,\n      tags: this.tags\n    };\n  }\n  toJSON() {\n    return this.definition;\n  }\n\n  /**\n   * The logic invoked as actors by this state node.\n   */\n  get invoke() {\n    return memo(this, 'invoke', () => toArray(this.config.invoke).map((invokeConfig, i) => {\n      const {\n        src,\n        systemId\n      } = invokeConfig;\n      const resolvedId = invokeConfig.id || createInvokeId(this.id, i);\n      const resolvedSrc = typeof src === 'string' ? src : `xstate#${createInvokeId(this.id, i)}`;\n      return {\n        ...invokeConfig,\n        src: resolvedSrc,\n        id: resolvedId,\n        systemId: systemId,\n        toJSON() {\n          const {\n            onDone,\n            onError,\n            ...invokeDefValues\n          } = invokeConfig;\n          return {\n            ...invokeDefValues,\n            type: 'xstate.invoke',\n            src: resolvedSrc,\n            id: resolvedId\n          };\n        }\n      };\n    }));\n  }\n\n  /**\n   * The mapping of events to transitions.\n   */\n  get on() {\n    return memo(this, 'on', () => {\n      const transitions = this.transitions;\n      return [...transitions].flatMap(([descriptor, t]) => t.map(t => [descriptor, t])).reduce((map, [descriptor, transition]) => {\n        map[descriptor] = map[descriptor] || [];\n        map[descriptor].push(transition);\n        return map;\n      }, {});\n    });\n  }\n  get after() {\n    return memo(this, 'delayedTransitions', () => getDelayedTransitions(this));\n  }\n  get initial() {\n    return memo(this, 'initial', () => formatInitialTransition(this, this.config.initial));\n  }\n  next(state, event) {\n    const eventType = event.type;\n    const actions = [];\n    let selectedTransition;\n    const candidates = memo(this, `candidates-${eventType}`, () => getCandidates(this, eventType));\n    for (const candidate of candidates) {\n      const {\n        guard\n      } = candidate;\n      const resolvedContext = state.context;\n      let guardPassed = false;\n      try {\n        guardPassed = !guard || evaluateGuard(guard, resolvedContext, event, state);\n      } catch (err) {\n        const guardType = typeof guard === 'string' ? guard : typeof guard === 'object' ? guard.type : undefined;\n        throw new Error(`Unable to evaluate guard ${guardType ? `'${guardType}' ` : ''}in transition for event '${eventType}' in state node '${this.id}':\\n${err.message}`);\n      }\n      if (guardPassed) {\n        actions.push(...candidate.actions);\n        selectedTransition = candidate;\n        break;\n      }\n    }\n    return selectedTransition ? [selectedTransition] : undefined;\n  }\n\n  /**\n   * All the event types accepted by this state node and its descendants.\n   */\n  get events() {\n    return memo(this, 'events', () => {\n      const {\n        states\n      } = this;\n      const events = new Set(this.ownEvents);\n      if (states) {\n        for (const stateId of Object.keys(states)) {\n          const state = states[stateId];\n          if (state.states) {\n            for (const event of state.events) {\n              events.add(`${event}`);\n            }\n          }\n        }\n      }\n      return Array.from(events);\n    });\n  }\n\n  /**\n   * All the events that have transitions directly from this state node.\n   *\n   * Excludes any inert events.\n   */\n  get ownEvents() {\n    const events = new Set([...this.transitions.keys()].filter(descriptor => {\n      return this.transitions.get(descriptor).some(transition => !(!transition.target && !transition.actions.length && !transition.reenter));\n    }));\n    return Array.from(events);\n  }\n}\n\nconst STATE_IDENTIFIER = '#';\nclass StateMachine {\n  /**\n   * The machine's own version.\n   */\n\n  constructor(\n  /**\n   * The raw config used to create the machine.\n   */\n  config, implementations) {\n    this.config = config;\n    this.version = void 0;\n    this.implementations = void 0;\n    this.types = void 0;\n    this.__xstatenode = true;\n    this.idMap = new Map();\n    this.root = void 0;\n    this.id = void 0;\n    this.states = void 0;\n    this.events = void 0;\n    this.__TContext = void 0;\n    this.__TEvent = void 0;\n    this.__TActor = void 0;\n    this.__TAction = void 0;\n    this.__TGuard = void 0;\n    this.__TDelay = void 0;\n    this.__TTag = void 0;\n    this.__TInput = void 0;\n    this.__TOutput = void 0;\n    this.__TResolvedTypesMeta = void 0;\n    this.id = config.id || '(machine)';\n    this.implementations = {\n      actors: implementations?.actors ?? {},\n      actions: implementations?.actions ?? {},\n      delays: implementations?.delays ?? {},\n      guards: implementations?.guards ?? {}\n    };\n    this.version = this.config.version;\n    this.types = this.config.types ?? {};\n    this.transition = this.transition.bind(this);\n    this.getInitialState = this.getInitialState.bind(this);\n    this.restoreState = this.restoreState.bind(this);\n    this.start = this.start.bind(this);\n    this.getPersistedState = this.getPersistedState.bind(this);\n    this.root = new StateNode(config, {\n      _key: this.id,\n      _machine: this\n    });\n    this.root._initialize();\n    this.states = this.root.states; // TODO: remove!\n    this.events = this.root.events;\n  }\n\n  /**\n   * Clones this state machine with the provided implementations\n   * and merges the `context` (if provided).\n   *\n   * @param implementations Options (`actions`, `guards`, `actors`, `delays`, `context`)\n   *  to recursively merge with the existing options.\n   *\n   * @returns A new `StateMachine` instance with the provided implementations.\n   */\n  provide(implementations) {\n    const {\n      actions,\n      guards,\n      actors,\n      delays\n    } = this.implementations;\n    return new StateMachine(this.config, {\n      actions: {\n        ...actions,\n        ...implementations.actions\n      },\n      guards: {\n        ...guards,\n        ...implementations.guards\n      },\n      actors: {\n        ...actors,\n        ...implementations.actors\n      },\n      delays: {\n        ...delays,\n        ...implementations.delays\n      }\n    });\n  }\n\n  /**\n   * Resolves the given `state` to a new `State` instance relative to this machine.\n   *\n   * This ensures that `.nextEvents` represent the correct values.\n   *\n   * @param state The state to resolve\n   */\n  resolveState(state) {\n    const configurationSet = getConfiguration(getStateNodes(this.root, state.value));\n    const configuration = Array.from(configurationSet);\n    return this.createState({\n      ...state,\n      value: resolveStateValue(this.root, state.value),\n      configuration,\n      status: isInFinalState(configurationSet, this.root) ? 'done' : state.status\n    });\n  }\n  resolveStateValue(stateValue, ...[context]) {\n    const resolvedStateValue = resolveStateValue(this.root, stateValue);\n    return this.resolveState(State.from(resolvedStateValue, context, this));\n  }\n\n  /**\n   * Determines the next state given the current `state` and received `event`.\n   * Calculates a full macrostep from all microsteps.\n   *\n   * @param state The current State instance or state value\n   * @param event The received event\n   */\n  transition(state, event, actorScope) {\n    // TODO: handle error events in a better way\n    if (isErrorActorEvent(event) && !state.nextEvents.some(nextEvent => nextEvent === event.type)) {\n      return cloneState(state, {\n        status: 'error',\n        error: event.data\n      });\n    }\n    const {\n      state: nextState\n    } = macrostep(state, event, actorScope);\n    return nextState;\n  }\n\n  /**\n   * Determines the next state given the current `state` and `event`.\n   * Calculates a microstep.\n   *\n   * @param state The current state\n   * @param event The received event\n   */\n  microstep(state, event, actorScope) {\n    return macrostep(state, event, actorScope).microstates;\n  }\n  getTransitionData(state, event) {\n    return transitionNode(this.root, state.value, state, event) || [];\n  }\n\n  /**\n   * The initial state _before_ evaluating any microsteps.\n   * This \"pre-initial\" state is provided to initial actions executed in the initial state.\n   */\n  getPreInitialState(actorScope, initEvent, internalQueue) {\n    const {\n      context\n    } = this.config;\n    const preInitial = this.resolveState(this.createState({\n      value: {},\n      // TODO: this is computed in state constructor\n      context: typeof context !== 'function' && context ? context : {},\n      meta: undefined,\n      configuration: getInitialConfiguration(this.root),\n      children: {},\n      status: 'active'\n    }));\n    if (typeof context === 'function') {\n      const assignment = ({\n        spawn,\n        event\n      }) => context({\n        spawn,\n        input: event.input\n      });\n      return resolveActionsAndContext(preInitial, initEvent, actorScope, [assign(assignment)], internalQueue);\n    }\n    return preInitial;\n  }\n\n  /**\n   * Returns the initial `State` instance, with reference to `self` as an `ActorRef`.\n   */\n  getInitialState(actorScope, input) {\n    const initEvent = createInitEvent(input); // TODO: fix;\n    const internalQueue = [];\n    const preInitialState = this.getPreInitialState(actorScope, initEvent, internalQueue);\n    const nextState = microstep([{\n      target: [...getInitialStateNodes(this.root)],\n      source: this.root,\n      reenter: true,\n      actions: [],\n      eventType: null,\n      toJSON: null // TODO: fix\n    }], preInitialState, actorScope, initEvent, true, internalQueue);\n    const {\n      state: macroState\n    } = macrostep(nextState, initEvent, actorScope, internalQueue);\n    return macroState;\n  }\n  start(state) {\n    Object.values(state.children).forEach(child => {\n      if (child.getSnapshot().status === 'active') {\n        child.start();\n      }\n    });\n  }\n  getStateNodeById(stateId) {\n    const fullPath = stateId.split(STATE_DELIMITER);\n    const relativePath = fullPath.slice(1);\n    const resolvedStateId = isStateId(fullPath[0]) ? fullPath[0].slice(STATE_IDENTIFIER.length) : fullPath[0];\n    const stateNode = this.idMap.get(resolvedStateId);\n    if (!stateNode) {\n      throw new Error(`Child state node '#${resolvedStateId}' does not exist on machine '${this.id}'`);\n    }\n    return getStateNodeByPath(stateNode, relativePath);\n  }\n  get definition() {\n    return this.root.definition;\n  }\n  toJSON() {\n    return this.definition;\n  }\n  getPersistedState(state) {\n    return getPersistedState(state);\n  }\n  createState(stateConfig) {\n    return stateConfig instanceof State ? stateConfig : new State(stateConfig, this);\n  }\n  restoreState(snapshot, _actorScope) {\n    const children = {};\n    const snapshotChildren = snapshot.children;\n    Object.keys(snapshotChildren).forEach(actorId => {\n      const actorData = snapshotChildren[actorId];\n      const childState = actorData.state;\n      const src = actorData.src;\n      const logic = src ? resolveReferencedActor(this, src)?.src : undefined;\n      if (!logic) {\n        return;\n      }\n      const actorState = logic.restoreState?.(childState, _actorScope);\n      const actorRef = createActor(logic, {\n        id: actorId,\n        parent: _actorScope?.self,\n        state: actorState,\n        src,\n        systemId: actorData.systemId\n      });\n      children[actorId] = actorRef;\n    });\n    const restoredSnapshot = this.createState(new State({\n      ...snapshot,\n      children\n    }, this));\n    let seen = new Set();\n    function reviveContext(contextPart, children) {\n      if (seen.has(contextPart)) {\n        return;\n      }\n      seen.add(contextPart);\n      for (let key in contextPart) {\n        const value = contextPart[key];\n        if (value && typeof value === 'object') {\n          if ('xstate$$type' in value && value.xstate$$type === $$ACTOR_TYPE) {\n            contextPart[key] = children[value.id];\n            continue;\n          }\n          reviveContext(value, children);\n        }\n      }\n    }\n    reviveContext(restoredSnapshot.context, children);\n    return restoredSnapshot;\n  }\n\n  /**@deprecated an internal property acting as a \"phantom\" type, not meant to be used at runtime */\n}\n\nconst defaultWaitForOptions = {\n  timeout: 10_000 // 10 seconds\n};\n\n/**\n * Subscribes to an actor ref and waits for its emitted value to satisfy\n * a predicate, and then resolves with that value.\n * Will throw if the desired state is not reached after a timeout\n * (defaults to 10 seconds).\n *\n * @example\n * ```js\n * const state = await waitFor(someService, state => {\n *   return state.hasTag('loaded');\n * });\n *\n * state.hasTag('loaded'); // true\n * ```\n *\n * @param actorRef The actor ref to subscribe to\n * @param predicate Determines if a value matches the condition to wait for\n * @param options\n * @returns A promise that eventually resolves to the emitted value\n * that matches the condition\n */\nfunction waitFor(actorRef, predicate, options) {\n  const resolvedOptions = {\n    ...defaultWaitForOptions,\n    ...options\n  };\n  return new Promise((res, rej) => {\n    let done = false;\n    const handle = resolvedOptions.timeout === Infinity ? undefined : setTimeout(() => {\n      sub.unsubscribe();\n      rej(new Error(`Timeout of ${resolvedOptions.timeout} ms exceeded`));\n    }, resolvedOptions.timeout);\n    const dispose = () => {\n      clearTimeout(handle);\n      done = true;\n      sub?.unsubscribe();\n    };\n    function checkEmitted(emitted) {\n      if (predicate(emitted)) {\n        dispose();\n        res(emitted);\n      }\n    }\n    let sub; // avoid TDZ when disposing synchronously\n\n    // See if the current snapshot already matches the predicate\n    checkEmitted(actorRef.getSnapshot());\n    if (done) {\n      return;\n    }\n    sub = actorRef.subscribe({\n      next: checkEmitted,\n      error: err => {\n        dispose();\n        rej(err);\n      },\n      complete: () => {\n        dispose();\n        rej(new Error(`Actor terminated without satisfying predicate`));\n      }\n    });\n    if (done) {\n      sub.unsubscribe();\n    }\n  });\n}\n\nfunction createMachine(config, implementations) {\n  return new StateMachine(config, implementations);\n}\n\nfunction mapState(stateMap, stateId) {\n  let foundStateId;\n  for (const mappedStateId of Object.keys(stateMap)) {\n    if (matchesState(mappedStateId, stateId) && (!foundStateId || stateId.length > foundStateId.length)) {\n      foundStateId = mappedStateId;\n    }\n  }\n  return stateMap[foundStateId];\n}\n\nexport { SimulatedClock, StateMachine, StateNode, createMachine, mapState, waitFor };\n"],"names":["isEqual","STATE_IDENTIFIER"],"mappings":"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","x_google_ignoreList":[1,2,3,4,5]}