{"version":3,"file":"isObjectLike-3d6a1299.js","sources":["../../../node_modules/.pnpm/xstate@5.0.0-beta.18/node_modules/xstate/dev/dist/xstate-dev.esm.js","../../../node_modules/.pnpm/xstate@5.0.0-beta.18/node_modules/xstate/dist/actions-4d6514d2.esm.js","../../../node_modules/.pnpm/xstate@5.0.0-beta.18/node_modules/xstate/dist/xstate.esm.js","../../../.svelte-kit/adapter-node/chunks/types.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_freeGlobal.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_root.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_Symbol.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_getRawTag.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_objectToString.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/_baseGetTag.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isObject.js","../../../node_modules/.pnpm/lodash@4.17.21/node_modules/lodash/isObjectLike.js"],"sourcesContent":["// From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/globalThis\nfunction getGlobal() {\n  if (typeof globalThis !== 'undefined') {\n    return globalThis;\n  }\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n}\nfunction getDevTools() {\n  const w = getGlobal();\n  if (!!w.__xstate__) {\n    return w.__xstate__;\n  }\n  return undefined;\n}\nfunction registerService(service) {\n  if (typeof window === 'undefined') {\n    return;\n  }\n  const devTools = getDevTools();\n  if (devTools) {\n    devTools.register(service);\n  }\n}\nconst devToolsAdapter = service => {\n  if (typeof window === 'undefined') {\n    return;\n  }\n  const devTools = getDevTools();\n  if (devTools) {\n    devTools.register(service);\n  }\n};\n\nexport { devToolsAdapter, getGlobal, registerService };\n","import { devToolsAdapter } from '../dev/dist/xstate-dev.esm.js';\n\n// https://github.com/microsoft/TypeScript/issues/23182#issuecomment-379091887\n\n// TODO: replace in v5 with:\n// export type IndexByType<T extends { type: string }> = { [E in T as E['type']]: E; };\n\n/**\n * The full definition of an event, with a string `type`.\n */\n\n// TODO: do not accept machines without all implementations\n// we should also accept a raw machine as actor logic here\n// or just make machine actor logic\n\n// TODO: narrow this to logic from machine\n\n/**\n * The string or object representing the state value relative to the parent state node.\n *\n * - For a child atomic state node, this is a string, e.g., `\"pending\"`.\n * - For complex state nodes, this is an object, e.g., `{ success: \"someChildState\" }`.\n */\n\n// TODO: remove once TS fixes this type-widening issue\n\n// TODO: possibly refactor this somehow, use even a simpler type, and maybe even make `machine.options` private or something\n\nlet ConstantPrefix = /*#__PURE__*/function (ConstantPrefix) {\n  ConstantPrefix[\"After\"] = \"xstate.after\";\n  ConstantPrefix[\"DoneState\"] = \"done.state\";\n  ConstantPrefix[\"DoneInvoke\"] = \"done.invoke\";\n  ConstantPrefix[\"ErrorExecution\"] = \"error.execution\";\n  ConstantPrefix[\"ErrorCommunication\"] = \"error.communication\";\n  ConstantPrefix[\"ErrorPlatform\"] = \"error.platform\";\n  ConstantPrefix[\"ErrorCustom\"] = \"xstate.error\";\n  return ConstantPrefix;\n}({});\nlet SpecialTargets = /*#__PURE__*/function (SpecialTargets) {\n  SpecialTargets[\"Parent\"] = \"#_parent\";\n  SpecialTargets[\"Internal\"] = \"#_internal\";\n  return SpecialTargets;\n}({});\n\nconst after$1 = ConstantPrefix.After;\nconst doneState = ConstantPrefix.DoneState;\nconst errorExecution = ConstantPrefix.ErrorExecution;\nconst errorPlatform = ConstantPrefix.ErrorPlatform;\nconst error$1 = ConstantPrefix.ErrorCustom;\n\nvar constantPrefixes = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  after: after$1,\n  doneState: doneState,\n  errorExecution: errorExecution,\n  errorPlatform: errorPlatform,\n  error: error$1\n});\n\nconst STATE_DELIMITER = '.';\nconst TARGETLESS_KEY = '';\nconst NULL_EVENT = '';\nconst STATE_IDENTIFIER = '#';\nconst WILDCARD = '*';\nconst INIT_TYPE = 'xstate.init';\n\nfunction resolve$8(actorContext, state, args, {\n  to,\n  event: eventOrExpr,\n  id,\n  delay\n}) {\n  const delaysMap = state.machine.implementations.delays;\n  if (typeof eventOrExpr === 'string') {\n    throw new Error(`Only event objects may be used with sendTo; use sendTo({ type: \"${eventOrExpr}\" }) instead`);\n  }\n  const resolvedEvent = typeof eventOrExpr === 'function' ? eventOrExpr(args) : eventOrExpr;\n  let resolvedDelay;\n  if (typeof delay === 'string') {\n    const configDelay = delaysMap && delaysMap[delay];\n    resolvedDelay = typeof configDelay === 'function' ? configDelay(args) : configDelay;\n  } else {\n    resolvedDelay = typeof delay === 'function' ? delay(args) : delay;\n  }\n  const resolvedTarget = typeof to === 'function' ? to(args) : to;\n  let targetActorRef;\n  if (typeof resolvedTarget === 'string') {\n    if (resolvedTarget === SpecialTargets.Parent) {\n      targetActorRef = actorContext?.self._parent;\n    } else if (resolvedTarget === SpecialTargets.Internal) {\n      targetActorRef = actorContext?.self;\n    } else if (resolvedTarget.startsWith('#_')) {\n      // SCXML compatibility: https://www.w3.org/TR/scxml/#SCXMLEventProcessor\n      // #_invokeid. If the target is the special term '#_invokeid', where invokeid is the invokeid of an SCXML session that the sending session has created by <invoke>, the Processor must add the event to the external queue of that session.\n      targetActorRef = state.children[resolvedTarget.slice(2)];\n    } else {\n      targetActorRef = state.children[resolvedTarget];\n    }\n    if (!targetActorRef) {\n      throw new Error(`Unable to send event to actor '${resolvedTarget}' from machine '${state.machine.id}'.`);\n    }\n  } else {\n    targetActorRef = resolvedTarget || actorContext?.self;\n  }\n  return [state, {\n    to: targetActorRef,\n    event: resolvedEvent,\n    id,\n    delay: resolvedDelay\n  }];\n}\nfunction execute$5(actorContext, params) {\n  if (typeof params.delay === 'number') {\n    actorContext.self.delaySend(params);\n    return;\n  }\n  const {\n    to,\n    event\n  } = params;\n  actorContext.defer(() => {\n    to.send(event.type === error$1 ? {\n      type: `${error(actorContext.self.id)}`,\n      data: event.data\n    } : event);\n  });\n}\n\n/**\n * Sends an event to an actor.\n *\n * @param actor The `ActorRef` to send the event to.\n * @param event The event to send, or an expression that evaluates to the event to send\n * @param options Send action options\n *  - `id` - The unique send event identifier (used with `cancel()`).\n *  - `delay` - The number of milliseconds to delay the sending of the event.\n */\nfunction sendTo(to, eventOrExpr, options) {\n  function sendTo(_) {\n  }\n  sendTo.type = 'xstate.sendTo';\n  sendTo.to = to;\n  sendTo.event = eventOrExpr;\n  sendTo.id = options?.id;\n  sendTo.delay = options?.delay;\n  sendTo.resolve = resolve$8;\n  sendTo.execute = execute$5;\n  return sendTo;\n}\n\n/**\n * Sends an event to this machine's parent.\n *\n * @param event The event to send to the parent machine.\n * @param options Options to pass into the send event.\n */\nfunction sendParent(event, options) {\n  return sendTo(SpecialTargets.Parent, event, options);\n}\n/**\n * Forwards (sends) an event to a specified service.\n *\n * @param target The target service to forward the event to.\n * @param options Options to pass into the send action creator.\n */\nfunction forwardTo(target, options) {\n  return sendTo(target, ({\n    event\n  }) => event, options);\n}\n\n/**\n * Escalates an error by sending it as an event to this machine's parent.\n *\n * @param errorData The error data to send, or the expression function that\n * takes in the `context`, `event`, and `meta`, and returns the error data to send.\n * @param options Options to pass into the send action creator.\n */\nfunction escalate(errorData, options) {\n  return sendParent(arg => {\n    return {\n      type: error$1,\n      data: typeof errorData === 'function' ? errorData(arg) : errorData\n    };\n  }, options);\n}\n\nconst cache = new WeakMap();\nfunction memo(object, key, fn) {\n  let memoizedData = cache.get(object);\n  if (!memoizedData) {\n    memoizedData = {\n      [key]: fn()\n    };\n    cache.set(object, memoizedData);\n  } else if (!(key in memoizedData)) {\n    memoizedData[key] = fn();\n  }\n  return memoizedData[key];\n}\n\nfunction resolve$7(_, state, actionArgs, {\n  sendId\n}) {\n  const resolvedSendId = typeof sendId === 'function' ? sendId(actionArgs) : sendId;\n  return [state, resolvedSendId];\n}\nfunction execute$4(actorContext, resolvedSendId) {\n  actorContext.self.cancel(resolvedSendId);\n}\n\n/**\n * Cancels an in-flight `send(...)` action. A canceled sent action will not\n * be executed, nor will its event be sent, unless it has already been sent\n * (e.g., if `cancel(...)` is called after the `send(...)` action's `delay`).\n *\n * @param sendId The `id` of the `send(...)` action to cancel.\n */\nfunction cancel(sendId) {\n  function cancel(_) {\n  }\n  cancel.type = 'xstate.cancel';\n  cancel.sendId = sendId;\n  cancel.resolve = resolve$7;\n  cancel.execute = execute$4;\n  return cancel;\n}\n\nclass Mailbox {\n  constructor(_process) {\n    this._process = _process;\n    this._active = false;\n    this._current = null;\n    this._last = null;\n  }\n  start() {\n    this._active = true;\n    this.flush();\n  }\n  clear() {\n    // we can't set _current to null because we might be currently processing\n    // and enqueue following clear shouldnt start processing the enqueued item immediately\n    if (this._current) {\n      this._current.next = null;\n      this._last = this._current;\n    }\n  }\n\n  // TODO: rethink this design\n  prepend(event) {\n    if (!this._current) {\n      this.enqueue(event);\n      return;\n    }\n\n    // we know that something is already queued up\n    // so the mailbox is already flushing or it's inactive\n    // therefore the only thing that we need to do is to reassign `this._current`\n    this._current = {\n      value: event,\n      next: this._current\n    };\n  }\n  enqueue(event) {\n    const enqueued = {\n      value: event,\n      next: null\n    };\n    if (this._current) {\n      this._last.next = enqueued;\n      this._last = enqueued;\n      return;\n    }\n    this._current = enqueued;\n    this._last = enqueued;\n    if (this._active) {\n      this.flush();\n    }\n  }\n  flush() {\n    while (this._current) {\n      // atm the given _process is responsible for implementing proper try/catch handling\n      // we assume here that this won't throw in a way that can affect this mailbox\n      const consumed = this._current;\n      this._process(consumed.value);\n      // something could have been prepended in the meantime\n      // so we need to be defensive here to avoid skipping over a prepended item\n      if (consumed === this._current) {\n        this._current = this._current.next;\n      }\n    }\n    this._last = null;\n  }\n}\n\nconst symbolObservable = (() => typeof Symbol === 'function' && Symbol.observable || '@@observable')();\n\n/**\n * Returns actor logic from a transition function and its initial state.\n *\n * A transition function is a function that takes the current state and an event and returns the next state.\n *\n * @param transition The transition function that returns the next state given the current state and event.\n * @param initialState The initial state of the transition function.\n * @returns Actor logic\n */\nfunction fromTransition(transition, initialState) {\n  const logic = {\n    config: transition,\n    transition: (state, event, actorContext) => {\n      return transition(state, event, actorContext);\n    },\n    getInitialState: (_, input) => {\n      return typeof initialState === 'function' ? initialState({\n        input\n      }) : initialState;\n    },\n    getSnapshot: state => state,\n    getPersistedState: state => state,\n    restoreState: state => state\n  };\n  return logic;\n}\n\nconst resolveEventType = '$$xstate.resolve';\nconst rejectEventType = '$$xstate.reject';\nfunction fromPromise(\n// TODO: add types\npromiseCreator) {\n  // TODO: add event types, consider making the `PromiseEvent` a private type or smth alike\n  const logic = {\n    config: promiseCreator,\n    transition: (state, event) => {\n      if (state.status !== 'active') {\n        return state;\n      }\n      switch (event.type) {\n        case resolveEventType:\n          return {\n            ...state,\n            status: 'done',\n            data: event.data,\n            input: undefined\n          };\n        case rejectEventType:\n          return {\n            ...state,\n            status: 'error',\n            data: event.data,\n            input: undefined\n          };\n        case stopSignalType:\n          return {\n            ...state,\n            status: 'canceled',\n            input: undefined\n          };\n        default:\n          return state;\n      }\n    },\n    start: (state, {\n      self,\n      system\n    }) => {\n      // TODO: determine how to allow customizing this so that promises\n      // can be restarted if necessary\n      if (state.status !== 'active') {\n        return;\n      }\n      const resolvedPromise = Promise.resolve(promiseCreator({\n        input: state.input,\n        system\n      }));\n      resolvedPromise.then(response => {\n        // TODO: remove this condition once dead letter queue lands\n        if (self._state.status !== 'active') {\n          return;\n        }\n        self.send({\n          type: resolveEventType,\n          data: response\n        });\n      }, errorData => {\n        // TODO: remove this condition once dead letter queue lands\n        if (self._state.status !== 'active') {\n          return;\n        }\n        self.send({\n          type: rejectEventType,\n          data: errorData\n        });\n      });\n    },\n    getInitialState: (_, input) => {\n      return {\n        status: 'active',\n        data: undefined,\n        input\n      };\n    },\n    getSnapshot: state => state.data,\n    getStatus: state => state,\n    getPersistedState: state => state,\n    restoreState: state => state\n  };\n  return logic;\n}\n\n// TODO: this likely shouldn't accept TEvent, observable actor doesn't accept external events\nfunction fromObservable(observableCreator) {\n  const nextEventType = '$$xstate.next';\n  const errorEventType = '$$xstate.error';\n  const completeEventType = '$$xstate.complete';\n\n  // TODO: add event types\n  const logic = {\n    config: observableCreator,\n    transition: (state, event, {\n      self,\n      id,\n      defer\n    }) => {\n      if (state.status !== 'active') {\n        return state;\n      }\n      switch (event.type) {\n        case nextEventType:\n          // match the exact timing of events sent by machines\n          // send actions are not executed immediately\n          defer(() => {\n            self._parent?.send({\n              type: `xstate.snapshot.${id}`,\n              data: event.data\n            });\n          });\n          return {\n            ...state,\n            data: event.data\n          };\n        case errorEventType:\n          return {\n            ...state,\n            status: 'error',\n            input: undefined,\n            data: event.data,\n            subscription: undefined\n          };\n        case completeEventType:\n          return {\n            ...state,\n            status: 'done',\n            input: undefined,\n            subscription: undefined\n          };\n        case stopSignalType:\n          state.subscription.unsubscribe();\n          return {\n            ...state,\n            status: 'canceled',\n            input: undefined,\n            subscription: undefined\n          };\n        default:\n          return state;\n      }\n    },\n    getInitialState: (_, input) => {\n      return {\n        subscription: undefined,\n        status: 'active',\n        data: undefined,\n        input\n      };\n    },\n    start: (state, {\n      self,\n      system\n    }) => {\n      if (state.status === 'done') {\n        // Do not restart a completed observable\n        return;\n      }\n      state.subscription = observableCreator({\n        input: state.input,\n        system\n      }).subscribe({\n        next: value => {\n          self.send({\n            type: nextEventType,\n            data: value\n          });\n        },\n        error: err => {\n          self.send({\n            type: errorEventType,\n            data: err\n          });\n        },\n        complete: () => {\n          self.send({\n            type: completeEventType\n          });\n        }\n      });\n    },\n    getSnapshot: state => state.data,\n    getPersistedState: ({\n      status,\n      data,\n      input\n    }) => ({\n      status,\n      data,\n      input\n    }),\n    getStatus: state => state,\n    restoreState: state => ({\n      ...state,\n      subscription: undefined\n    })\n  };\n  return logic;\n}\n\n/**\n * Creates event observable logic that listens to an observable\n * that delivers event objects.\n *\n *\n * @param lazyObservable A function that creates an observable\n * @returns Event observable logic\n */\n\nfunction fromEventObservable(lazyObservable) {\n  const errorEventType = '$$xstate.error';\n  const completeEventType = '$$xstate.complete';\n\n  // TODO: event types\n  const logic = {\n    config: lazyObservable,\n    transition: (state, event) => {\n      if (state.status !== 'active') {\n        return state;\n      }\n      switch (event.type) {\n        case errorEventType:\n          return {\n            ...state,\n            status: 'error',\n            input: undefined,\n            data: event.data,\n            subscription: undefined\n          };\n        case completeEventType:\n          return {\n            ...state,\n            status: 'done',\n            input: undefined,\n            subscription: undefined\n          };\n        case stopSignalType:\n          state.subscription.unsubscribe();\n          return {\n            ...state,\n            status: 'canceled',\n            input: undefined,\n            subscription: undefined\n          };\n        default:\n          return state;\n      }\n    },\n    getInitialState: (_, input) => {\n      return {\n        subscription: undefined,\n        status: 'active',\n        data: undefined,\n        input\n      };\n    },\n    start: (state, {\n      self,\n      system\n    }) => {\n      if (state.status === 'done') {\n        // Do not restart a completed observable\n        return;\n      }\n      state.subscription = lazyObservable({\n        input: state.input,\n        system\n      }).subscribe({\n        next: value => {\n          self._parent?.send(value);\n        },\n        error: err => {\n          self.send({\n            type: errorEventType,\n            data: err\n          });\n        },\n        complete: () => {\n          self.send({\n            type: completeEventType\n          });\n        }\n      });\n    },\n    getSnapshot: _ => undefined,\n    getPersistedState: ({\n      status,\n      data,\n      input\n    }) => ({\n      status,\n      data,\n      input\n    }),\n    getStatus: state => state,\n    restoreState: state => ({\n      ...state,\n      subscription: undefined\n    })\n  };\n  return logic;\n}\n\nfunction matchesState(parentStateId, childStateId) {\n  const parentStateValue = toStateValue(parentStateId);\n  const childStateValue = toStateValue(childStateId);\n  if (typeof childStateValue === 'string') {\n    if (typeof parentStateValue === 'string') {\n      return childStateValue === parentStateValue;\n    }\n\n    // Parent more specific than child\n    return false;\n  }\n  if (typeof parentStateValue === 'string') {\n    return parentStateValue in childStateValue;\n  }\n  return Object.keys(parentStateValue).every(key => {\n    if (!(key in childStateValue)) {\n      return false;\n    }\n    return matchesState(parentStateValue[key], childStateValue[key]);\n  });\n}\nfunction toStatePath(stateId) {\n  try {\n    if (isArray(stateId)) {\n      return stateId;\n    }\n    return stateId.toString().split(STATE_DELIMITER);\n  } catch (e) {\n    throw new Error(`'${stateId}' is not a valid state path.`);\n  }\n}\nfunction isStateLike(state) {\n  return typeof state === 'object' && 'value' in state && 'context' in state && 'event' in state;\n}\nfunction toStateValue(stateValue) {\n  if (isStateLike(stateValue)) {\n    return stateValue.value;\n  }\n  if (isArray(stateValue)) {\n    return pathToStateValue(stateValue);\n  }\n  if (typeof stateValue !== 'string') {\n    return stateValue;\n  }\n  const statePath = toStatePath(stateValue);\n  return pathToStateValue(statePath);\n}\nfunction pathToStateValue(statePath) {\n  if (statePath.length === 1) {\n    return statePath[0];\n  }\n  const value = {};\n  let marker = value;\n  for (let i = 0; i < statePath.length - 1; i++) {\n    if (i === statePath.length - 2) {\n      marker[statePath[i]] = statePath[i + 1];\n    } else {\n      const previous = marker;\n      marker = {};\n      previous[statePath[i]] = marker;\n    }\n  }\n  return value;\n}\nfunction mapValues(collection, iteratee) {\n  const result = {};\n  const collectionKeys = Object.keys(collection);\n  for (let i = 0; i < collectionKeys.length; i++) {\n    const key = collectionKeys[i];\n    result[key] = iteratee(collection[key], key, collection, i);\n  }\n  return result;\n}\nfunction flatten(array) {\n  return [].concat(...array);\n}\nfunction toArrayStrict(value) {\n  if (isArray(value)) {\n    return value;\n  }\n  return [value];\n}\nfunction toArray(value) {\n  if (value === undefined) {\n    return [];\n  }\n  return toArrayStrict(value);\n}\nfunction mapContext(mapper, context, event) {\n  if (typeof mapper === 'function') {\n    return mapper({\n      context,\n      event\n    });\n  }\n  const result = {};\n  const args = {\n    context,\n    event\n  };\n  for (const key of Object.keys(mapper)) {\n    const subMapper = mapper[key];\n    if (typeof subMapper === 'function') {\n      result[key] = subMapper(args);\n    } else {\n      result[key] = subMapper;\n    }\n  }\n  return result;\n}\nfunction isPromiseLike(value) {\n  if (value instanceof Promise) {\n    return true;\n  }\n  // Check if shape matches the Promise/A+ specification for a \"thenable\".\n  if (value !== null && (typeof value === 'function' || typeof value === 'object') && typeof value.then === 'function') {\n    return true;\n  }\n  return false;\n}\nfunction isArray(value) {\n  return Array.isArray(value);\n}\nfunction isErrorEvent(event) {\n  return typeof event.type === 'string' && (event.type === errorExecution || event.type.startsWith(errorPlatform));\n}\nfunction toTransitionConfigArray(configLike) {\n  return toArrayStrict(configLike).map(transitionLike => {\n    if (typeof transitionLike === 'undefined' || typeof transitionLike === 'string') {\n      return {\n        target: transitionLike\n      };\n    }\n    return transitionLike;\n  });\n}\nfunction normalizeTarget(target) {\n  if (target === undefined || target === TARGETLESS_KEY) {\n    return undefined;\n  }\n  return toArray(target);\n}\nfunction toInvokeConfig(invocable, id) {\n  if (typeof invocable === 'object') {\n    if ('src' in invocable) {\n      return invocable;\n    }\n    if ('transition' in invocable) {\n      return {\n        id,\n        src: invocable\n      };\n    }\n  }\n  return {\n    id,\n    src: invocable\n  };\n}\nfunction toObserver(nextHandler, errorHandler, completionHandler) {\n  const noop = () => {};\n  const isObserver = typeof nextHandler === 'object';\n  const self = isObserver ? nextHandler : null;\n  return {\n    next: ((isObserver ? nextHandler.next : nextHandler) || noop).bind(self),\n    error: ((isObserver ? nextHandler.error : errorHandler) || noop).bind(self),\n    complete: ((isObserver ? nextHandler.complete : completionHandler) || noop).bind(self)\n  };\n}\nfunction createInvokeId(stateNodeId, index) {\n  return `${stateNodeId}:invocation[${index}]`;\n}\nfunction resolveReferencedActor(referenced) {\n  return referenced ? 'transition' in referenced ? {\n    src: referenced,\n    input: undefined\n  } : referenced : undefined;\n}\n\nfunction fromCallback(invokeCallback) {\n  const logic = {\n    config: invokeCallback,\n    start: (_state, {\n      self\n    }) => {\n      self.send({\n        type: startSignalType\n      });\n    },\n    transition: (state, event, {\n      self,\n      id,\n      system\n    }) => {\n      if (event.type === startSignalType) {\n        const sender = eventForParent => {\n          if (state.canceled) {\n            return;\n          }\n          self._parent?.send(eventForParent);\n        };\n        const receiver = newListener => {\n          state.receivers.add(newListener);\n        };\n        state.dispose = invokeCallback(sender, receiver, {\n          input: state.input,\n          system\n        });\n        if (isPromiseLike(state.dispose)) {\n          state.dispose.then(resolved => {\n            self._parent?.send(doneInvoke(id, resolved));\n            state.canceled = true;\n          }, errorData => {\n            state.canceled = true;\n            self._parent?.send(error(id, errorData));\n          });\n        }\n        return state;\n      }\n      if (event.type === stopSignalType) {\n        state.canceled = true;\n        if (typeof state.dispose === 'function') {\n          state.dispose();\n        }\n        return state;\n      }\n      if (isSignal(event)) {\n        // TODO: unrecognized signal\n        return state;\n      }\n      state.receivers.forEach(receiver => receiver(event));\n      return state;\n    },\n    getInitialState: (_, input) => {\n      return {\n        canceled: false,\n        receivers: new Set(),\n        dispose: undefined,\n        input\n      };\n    },\n    getSnapshot: () => undefined,\n    getPersistedState: ({\n      input\n    }) => input\n  };\n  return logic;\n}\n\nconst startSignalType = 'xstate.init';\nconst stopSignalType = 'xstate.stop';\nconst startSignal = {\n  type: 'xstate.init'\n};\nconst stopSignal = {\n  type: 'xstate.stop'\n};\n/**\n * An object that expresses the actor logic in reaction to received events,\n * as well as an optionally emitted stream of values.\n *\n * @template TReceived The received event\n * @template TSnapshot The emitted value\n */\n\nfunction isSignal(event) {\n  return event.type === startSignalType || event.type === stopSignalType;\n}\nfunction isActorRef(item) {\n  return !!item && typeof item === 'object' && typeof item.send === 'function';\n}\n\n// TODO: refactor the return type, this could be written in a better way\n// but it's best to avoid unneccessary breaking changes now\n// @deprecated use `interpret(actorLogic)` instead\nfunction toActorRef(actorRefLike) {\n  return {\n    subscribe: () => ({\n      unsubscribe: () => void 0\n    }),\n    id: 'anonymous',\n    sessionId: '',\n    getSnapshot: () => undefined,\n    [symbolObservable]: function () {\n      return this;\n    },\n    status: ActorStatus.Running,\n    stop: () => void 0,\n    ...actorRefLike\n  };\n}\nconst emptyLogic = fromTransition(_ => undefined, undefined);\nfunction createEmptyActor() {\n  return interpret(emptyLogic);\n}\n\nfunction createSystem() {\n  let sessionIdCounter = 0;\n  const children = new Map();\n  const keyedActors = new Map();\n  const reverseKeyedActors = new WeakMap();\n  const system = {\n    _bookId: () => `x:${sessionIdCounter++}`,\n    _register: (sessionId, actorRef) => {\n      children.set(sessionId, actorRef);\n      return sessionId;\n    },\n    _unregister: actorRef => {\n      children.delete(actorRef.sessionId);\n      const systemId = reverseKeyedActors.get(actorRef);\n      if (systemId !== undefined) {\n        keyedActors.delete(systemId);\n        reverseKeyedActors.delete(actorRef);\n      }\n    },\n    get: systemId => {\n      return keyedActors.get(systemId);\n    },\n    _set: (systemId, actorRef) => {\n      const existing = keyedActors.get(systemId);\n      if (existing && existing !== actorRef) {\n        throw new Error(`Actor with system ID '${systemId}' already exists.`);\n      }\n      keyedActors.set(systemId, actorRef);\n      reverseKeyedActors.set(actorRef, systemId);\n    }\n  };\n  return system;\n}\n\nlet ActorStatus = /*#__PURE__*/function (ActorStatus) {\n  ActorStatus[ActorStatus[\"NotStarted\"] = 0] = \"NotStarted\";\n  ActorStatus[ActorStatus[\"Running\"] = 1] = \"Running\";\n  ActorStatus[ActorStatus[\"Stopped\"] = 2] = \"Stopped\";\n  return ActorStatus;\n}({});\nconst defaultOptions = {\n  deferEvents: true,\n  clock: {\n    setTimeout: (fn, ms) => {\n      return setTimeout(fn, ms);\n    },\n    clearTimeout: id => {\n      return clearTimeout(id);\n    }\n  },\n  logger: console.log.bind(console),\n  devTools: false\n};\nclass Interpreter {\n  /**\n   * The current state of the interpreted logic.\n   */\n\n  /**\n   * The clock that is responsible for setting and clearing timeouts, such as delayed events and transitions.\n   */\n\n  /**\n   * The unique identifier for this actor relative to its parent.\n   */\n\n  /**\n   * Whether the service is started.\n   */\n\n  // Actor Ref\n\n  // TODO: add typings for system\n\n  /**\n   * The globally unique process ID for this invocation.\n   */\n\n  /**\n   * Creates a new Interpreter instance (i.e., service) for the given logic with the provided options, if any.\n   *\n   * @param logic The logic to be interpreted\n   * @param options Interpreter options\n   */\n  constructor(logic, options) {\n    this.logic = logic;\n    this._state = void 0;\n    this.clock = void 0;\n    this.options = void 0;\n    this.id = void 0;\n    this.mailbox = new Mailbox(this._process.bind(this));\n    this.delayedEventsMap = {};\n    this.observers = new Set();\n    this.logger = void 0;\n    this.status = ActorStatus.NotStarted;\n    this._parent = void 0;\n    this.ref = void 0;\n    this._actorContext = void 0;\n    this._systemId = void 0;\n    this.sessionId = void 0;\n    this.system = void 0;\n    this._doneEvent = void 0;\n    this.src = void 0;\n    this._deferred = [];\n    const resolvedOptions = {\n      ...defaultOptions,\n      ...options\n    };\n    const {\n      clock,\n      logger,\n      parent,\n      id,\n      systemId\n    } = resolvedOptions;\n    const self = this;\n    this.system = parent?.system ?? createSystem();\n    if (systemId) {\n      this._systemId = systemId;\n      this.system._set(systemId, this);\n    }\n    this.sessionId = this.system._bookId();\n    this.id = id ?? this.sessionId;\n    this.logger = logger;\n    this.clock = clock;\n    this._parent = parent;\n    this.options = resolvedOptions;\n    this.src = resolvedOptions.src;\n    this.ref = this;\n    this._actorContext = {\n      self,\n      id: this.id,\n      sessionId: this.sessionId,\n      logger: this.logger,\n      defer: fn => {\n        this._deferred.push(fn);\n      },\n      system: this.system,\n      stopChild: child => {\n        if (child._parent !== this) {\n          throw new Error(`Cannot stop child actor ${child.id} of ${this.id} because it is not a child`);\n        }\n        child._stop();\n      }\n    };\n\n    // Ensure that the send method is bound to this interpreter instance\n    // if destructured\n    this.send = this.send.bind(this);\n    this._initState();\n  }\n  _initState() {\n    this._state = this.options.state ? this.logic.restoreState ? this.logic.restoreState(this.options.state, this._actorContext) : this.options.state : this.logic.getInitialState(this._actorContext, this.options?.input);\n  }\n\n  // array of functions to defer\n\n  update(state) {\n    // Update state\n    this._state = state;\n    const snapshot = this.getSnapshot();\n\n    // Execute deferred effects\n    let deferredFn;\n    while (deferredFn = this._deferred.shift()) {\n      deferredFn();\n    }\n    for (const observer of this.observers) {\n      observer.next?.(snapshot);\n    }\n    const status = this.logic.getStatus?.(state);\n    switch (status?.status) {\n      case 'done':\n        this._stopProcedure();\n        this._doneEvent = doneInvoke(this.id, status.data);\n        this._parent?.send(this._doneEvent);\n        this._complete();\n        break;\n      case 'error':\n        this._stopProcedure();\n        this._parent?.send(error(this.id, status.data));\n        this._error(status.data);\n        break;\n    }\n  }\n  subscribe(nextListenerOrObserver, errorListener, completeListener) {\n    const observer = toObserver(nextListenerOrObserver, errorListener, completeListener);\n    this.observers.add(observer);\n    if (this.status === ActorStatus.Stopped) {\n      observer.complete?.();\n      this.observers.delete(observer);\n    }\n    return {\n      unsubscribe: () => {\n        this.observers.delete(observer);\n      }\n    };\n  }\n\n  /**\n   * Starts the interpreter from the initial state\n   */\n  start() {\n    if (this.status === ActorStatus.Running) {\n      // Do not restart the service if it is already started\n      return this;\n    }\n    this.system._register(this.sessionId, this);\n    if (this._systemId) {\n      this.system._set(this._systemId, this);\n    }\n    this.status = ActorStatus.Running;\n    if (this.logic.start) {\n      this.logic.start(this._state, this._actorContext);\n    }\n\n    // TODO: this notifies all subscribers but usually this is redundant\n    // there is no real change happening here\n    // we need to rethink if this needs to be refactored\n    this.update(this._state);\n    if (this.options.devTools) {\n      this.attachDevTools();\n    }\n    this.mailbox.start();\n    return this;\n  }\n  _process(event) {\n    try {\n      const nextState = this.logic.transition(this._state, event, this._actorContext);\n      this.update(nextState);\n      if (event.type === stopSignalType) {\n        this._stopProcedure();\n        this._complete();\n      }\n    } catch (err) {\n      // TODO: properly handle errors\n      if (this.observers.size > 0) {\n        this.observers.forEach(observer => {\n          observer.error?.(err);\n        });\n        this.stop();\n      } else {\n        throw err;\n      }\n    }\n  }\n  _stop() {\n    if (this.status === ActorStatus.Stopped) {\n      return this;\n    }\n    this.mailbox.clear();\n    if (this.status === ActorStatus.NotStarted) {\n      this.status = ActorStatus.Stopped;\n      return this;\n    }\n    this.mailbox.enqueue({\n      type: stopSignalType\n    });\n    return this;\n  }\n\n  /**\n   * Stops the interpreter and unsubscribe all listeners.\n   */\n  stop() {\n    if (this._parent) {\n      throw new Error('A non-root actor cannot be stopped directly.');\n    }\n    return this._stop();\n  }\n  _complete() {\n    for (const observer of this.observers) {\n      observer.complete?.();\n    }\n    this.observers.clear();\n  }\n  _error(data) {\n    for (const observer of this.observers) {\n      observer.error?.(data);\n    }\n    this.observers.clear();\n  }\n  _stopProcedure() {\n    if (this.status !== ActorStatus.Running) {\n      // Interpreter already stopped; do nothing\n      return this;\n    }\n\n    // Cancel all delayed events\n    for (const key of Object.keys(this.delayedEventsMap)) {\n      this.clock.clearTimeout(this.delayedEventsMap[key]);\n    }\n\n    // TODO: mailbox.reset\n    this.mailbox.clear();\n    // TODO: after `stop` we must prepare ourselves for receiving events again\n    // events sent *after* stop signal must be queued\n    // it seems like this should be the common behavior for all of our consumers\n    // so perhaps this should be unified somehow for all of them\n    this.mailbox = new Mailbox(this._process.bind(this));\n    this.status = ActorStatus.Stopped;\n    this.system._unregister(this);\n    return this;\n  }\n\n  /**\n   * Sends an event to the running interpreter to trigger a transition.\n   *\n   * @param event The event to send\n   */\n  send(event) {\n    if (typeof event === 'string') {\n      throw new Error(`Only event objects may be sent to actors; use .send({ type: \"${event}\" }) instead`);\n    }\n    if (this.status === ActorStatus.Stopped) {\n      return;\n    }\n    if (this.status !== ActorStatus.Running && !this.options.deferEvents) {\n      throw new Error(`Event \"${event.type}\" was sent to uninitialized actor \"${this.id\n      // tslint:disable-next-line:max-line-length\n      }\". Make sure .start() is called for this actor, or set { deferEvents: true } in the actor options.\\nEvent: ${JSON.stringify(event)}`);\n    }\n    this.mailbox.enqueue(event);\n  }\n\n  // TODO: make private (and figure out a way to do this within the machine)\n  delaySend({\n    event,\n    id,\n    delay,\n    to\n  }) {\n    const timerId = this.clock.setTimeout(() => {\n      if (to) {\n        to.send(event);\n      } else {\n        this.send(event);\n      }\n    }, delay);\n\n    // TODO: consider the rehydration story here\n    if (id) {\n      this.delayedEventsMap[id] = timerId;\n    }\n  }\n\n  // TODO: make private (and figure out a way to do this within the machine)\n  cancel(sendId) {\n    this.clock.clearTimeout(this.delayedEventsMap[sendId]);\n    delete this.delayedEventsMap[sendId];\n  }\n  attachDevTools() {\n    const {\n      devTools\n    } = this.options;\n    if (devTools) {\n      const resolvedDevToolsAdapter = typeof devTools === 'function' ? devTools : devToolsAdapter;\n      resolvedDevToolsAdapter(this);\n    }\n  }\n  toJSON() {\n    return {\n      id: this.id\n    };\n  }\n  getPersistedState() {\n    return this.logic.getPersistedState?.(this._state);\n  }\n  [symbolObservable]() {\n    return this;\n  }\n  getSnapshot() {\n    return this.logic.getSnapshot ? this.logic.getSnapshot(this._state) : this._state;\n  }\n}\n\n/**\n * Creates a new Interpreter instance for the given machine with the provided options, if any.\n *\n * @param machine The machine to interpret\n * @param options Interpreter options\n */\n\nfunction interpret(logic, options) {\n  const interpreter = new Interpreter(logic, options);\n  return interpreter;\n}\n\nfunction resolve$6(actorContext, state, actionArgs, {\n  id,\n  systemId,\n  src,\n  input\n}) {\n  const referenced = resolveReferencedActor(state.machine.implementations.actors[src]);\n  let actorRef;\n  if (referenced) {\n    // TODO: inline `input: undefined` should win over the referenced one\n    const configuredInput = input || referenced.input;\n    actorRef = interpret(referenced.src, {\n      id,\n      src,\n      parent: actorContext?.self,\n      systemId,\n      input: typeof configuredInput === 'function' ? configuredInput({\n        context: state.context,\n        event: actionArgs.event,\n        self: actorContext?.self\n      }) : configuredInput\n    });\n  }\n  return [cloneState(state, {\n    children: {\n      ...state.children,\n      [id]: actorRef\n    }\n  }), {\n    id,\n    actorRef\n  }];\n}\nfunction execute$3(actorContext, {\n  id,\n  actorRef\n}) {\n  if (!actorRef) {\n    return;\n  }\n  actorContext.defer(() => {\n    if (actorRef.status === ActorStatus.Stopped) {\n      return;\n    }\n    try {\n      actorRef.start?.();\n    } catch (err) {\n      actorContext.self.send(error(id, err));\n      return;\n    }\n  });\n}\nfunction invoke({\n  id,\n  systemId,\n  src,\n  input\n}) {\n  function invoke(_) {\n  }\n  invoke.type = 'xstate.invoke';\n  invoke.id = id;\n  invoke.systemId = systemId;\n  invoke.src = src;\n  invoke.input = input;\n  invoke.resolve = resolve$6;\n  invoke.execute = execute$3;\n  return invoke;\n}\n\nfunction stateIn(stateValue) {\n  return {\n    type: 'xstate.guard:in',\n    params: {\n      stateValue\n    },\n    predicate: ({\n      state\n    }) => {\n      if (typeof stateValue === 'string' && isStateId(stateValue)) {\n        return state.configuration.some(sn => sn.id === stateValue.slice(1));\n      }\n      return state.matches(stateValue);\n    }\n  };\n}\nfunction not(guard) {\n  return {\n    type: 'xstate.boolean',\n    params: {\n      op: 'not'\n    },\n    children: [toGuardDefinition(guard)],\n    predicate: ({\n      evaluate,\n      guard,\n      context,\n      event,\n      state\n    }) => {\n      return !evaluate(guard.children[0], context, event, state);\n    }\n  };\n}\nfunction and(guards) {\n  return {\n    type: 'xstate.boolean',\n    params: {\n      op: 'and'\n    },\n    children: guards.map(guard => toGuardDefinition(guard)),\n    predicate: ({\n      evaluate,\n      guard,\n      context,\n      event,\n      state\n    }) => {\n      return guard.children.every(childGuard => {\n        return evaluate(childGuard, context, event, state);\n      });\n    }\n  };\n}\nfunction or(guards) {\n  return {\n    type: 'xstate.boolean',\n    params: {\n      op: 'or'\n    },\n    children: guards.map(guard => toGuardDefinition(guard)),\n    predicate: ({\n      evaluate,\n      guard,\n      context,\n      event,\n      state\n    }) => {\n      return guard.children.some(childGuard => {\n        return evaluate(childGuard, context, event, state);\n      });\n    }\n  };\n}\nfunction evaluateGuard(guard, context, event, state) {\n  const {\n    machine\n  } = state;\n  const predicate = machine?.implementations?.guards?.[guard.type] ?? guard.predicate;\n  if (!predicate) {\n    throw new Error(`Guard '${guard.type}' is not implemented.'.`);\n  }\n  return predicate({\n    context,\n    event,\n    state,\n    guard,\n    evaluate: evaluateGuard\n  });\n}\nfunction toGuardDefinition(guardConfig, getPredicate) {\n  // TODO: check for cycles and consider a refactor to more lazily evaluated guards\n  // TODO: resolve this more recursively: https://github.com/statelyai/xstate/pull/4064#discussion_r1229915724\n  if (typeof guardConfig === 'string') {\n    const predicateOrDef = getPredicate?.(guardConfig);\n    if (typeof predicateOrDef === 'function') {\n      return {\n        type: guardConfig,\n        predicate: predicateOrDef,\n        params: {\n          type: guardConfig\n        }\n      };\n    } else if (predicateOrDef) {\n      return predicateOrDef;\n    } else {\n      return {\n        type: guardConfig,\n        params: {\n          type: guardConfig\n        }\n      };\n    }\n  }\n  if (typeof guardConfig === 'function') {\n    return {\n      type: guardConfig.name,\n      predicate: guardConfig,\n      params: {\n        type: guardConfig.name,\n        name: guardConfig.name\n      }\n    };\n  }\n  const predicateOrDef = getPredicate?.(guardConfig.type);\n  if (typeof predicateOrDef === 'function') {\n    return {\n      type: guardConfig.type,\n      params: guardConfig.params || guardConfig,\n      children: guardConfig.children?.map(childGuard => toGuardDefinition(childGuard, getPredicate)),\n      predicate: getPredicate?.(guardConfig.type) || guardConfig.predicate\n    };\n  } else if (predicateOrDef) {\n    return predicateOrDef;\n  } else {\n    return {\n      type: guardConfig.type,\n      params: guardConfig.params || guardConfig,\n      children: guardConfig.children?.map(childGuard => toGuardDefinition(childGuard, getPredicate)),\n      predicate: guardConfig.predicate\n    };\n  }\n}\n\nfunction getOutput(configuration, context, event) {\n  const machine = configuration[0].machine;\n  const finalChildStateNode = configuration.find(stateNode => stateNode.type === 'final' && stateNode.parent === machine.root);\n  return finalChildStateNode && finalChildStateNode.output ? mapContext(finalChildStateNode.output, context, event) : undefined;\n}\nconst isAtomicStateNode = stateNode => stateNode.type === 'atomic' || stateNode.type === 'final';\nfunction getChildren(stateNode) {\n  return Object.values(stateNode.states).filter(sn => sn.type !== 'history');\n}\nfunction getProperAncestors(stateNode, toStateNode) {\n  const ancestors = [];\n\n  // add all ancestors\n  let m = stateNode.parent;\n  while (m && m !== toStateNode) {\n    ancestors.push(m);\n    m = m.parent;\n  }\n  return ancestors;\n}\nfunction getConfiguration(stateNodes) {\n  const configuration = new Set(stateNodes);\n  const configurationSet = new Set(stateNodes);\n  const adjList = getAdjList(configurationSet);\n\n  // add descendants\n  for (const s of configuration) {\n    // if previously active, add existing child nodes\n    if (s.type === 'compound' && (!adjList.get(s) || !adjList.get(s).length)) {\n      getInitialStateNodes(s).forEach(sn => configurationSet.add(sn));\n    } else {\n      if (s.type === 'parallel') {\n        for (const child of getChildren(s)) {\n          if (child.type === 'history') {\n            continue;\n          }\n          if (!configurationSet.has(child)) {\n            for (const initialStateNode of getInitialStateNodes(child)) {\n              configurationSet.add(initialStateNode);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  // add all ancestors\n  for (const s of configurationSet) {\n    let m = s.parent;\n    while (m) {\n      configurationSet.add(m);\n      m = m.parent;\n    }\n  }\n  return configurationSet;\n}\nfunction getValueFromAdj(baseNode, adjList) {\n  const childStateNodes = adjList.get(baseNode);\n  if (!childStateNodes) {\n    return {}; // todo: fix?\n  }\n\n  if (baseNode.type === 'compound') {\n    const childStateNode = childStateNodes[0];\n    if (childStateNode) {\n      if (isAtomicStateNode(childStateNode)) {\n        return childStateNode.key;\n      }\n    } else {\n      return {};\n    }\n  }\n  const stateValue = {};\n  for (const childStateNode of childStateNodes) {\n    stateValue[childStateNode.key] = getValueFromAdj(childStateNode, adjList);\n  }\n  return stateValue;\n}\nfunction getAdjList(configuration) {\n  const adjList = new Map();\n  for (const s of configuration) {\n    if (!adjList.has(s)) {\n      adjList.set(s, []);\n    }\n    if (s.parent) {\n      if (!adjList.has(s.parent)) {\n        adjList.set(s.parent, []);\n      }\n      adjList.get(s.parent).push(s);\n    }\n  }\n  return adjList;\n}\nfunction getStateValue(rootNode, configuration) {\n  const config = getConfiguration(configuration);\n  return getValueFromAdj(rootNode, getAdjList(config));\n}\nfunction isInFinalState(configuration, stateNode = configuration[0].machine.root) {\n  if (stateNode.type === 'compound') {\n    return getChildren(stateNode).some(s => s.type === 'final' && configuration.includes(s));\n  }\n  if (stateNode.type === 'parallel') {\n    return getChildren(stateNode).every(sn => isInFinalState(configuration, sn));\n  }\n  return false;\n}\nconst isStateId = str => str[0] === STATE_IDENTIFIER;\nfunction getCandidates(stateNode, receivedEventType) {\n  const candidates = stateNode.transitions.get(receivedEventType) || [...stateNode.transitions.keys()].filter(descriptor => {\n    // check if transition is a wildcard transition,\n    // which matches any non-transient events\n    if (descriptor === WILDCARD) {\n      return true;\n    }\n    if (!descriptor.endsWith('.*')) {\n      return false;\n    }\n    const partialEventTokens = descriptor.split('.');\n    const eventTokens = receivedEventType.split('.');\n    for (let tokenIndex = 0; tokenIndex < partialEventTokens.length; tokenIndex++) {\n      const partialEventToken = partialEventTokens[tokenIndex];\n      const eventToken = eventTokens[tokenIndex];\n      if (partialEventToken === '*') {\n        const isLastToken = tokenIndex === partialEventTokens.length - 1;\n        return isLastToken;\n      }\n      if (partialEventToken !== eventToken) {\n        return false;\n      }\n    }\n    return true;\n  }).sort((a, b) => b.length - a.length).flatMap(key => stateNode.transitions.get(key));\n  return candidates;\n}\n\n/**\n * All delayed transitions from the config.\n */\nfunction getDelayedTransitions(stateNode) {\n  const afterConfig = stateNode.config.after;\n  if (!afterConfig) {\n    return [];\n  }\n  const mutateEntryExit = (delay, i) => {\n    const delayRef = typeof delay === 'function' ? `${stateNode.id}:delay[${i}]` : delay;\n    const eventType = after(delayRef, stateNode.id);\n    stateNode.entry.push(raise({\n      type: eventType\n    }, {\n      id: eventType,\n      delay\n    }));\n    stateNode.exit.push(cancel(eventType));\n    return eventType;\n  };\n  const delayedTransitions = isArray(afterConfig) ? afterConfig.map((transition, i) => {\n    const eventType = mutateEntryExit(transition.delay, i);\n    return {\n      ...transition,\n      event: eventType\n    };\n  }) : Object.keys(afterConfig).flatMap((delay, i) => {\n    const configTransition = afterConfig[delay];\n    const resolvedTransition = typeof configTransition === 'string' ? {\n      target: configTransition\n    } : configTransition;\n    const resolvedDelay = !isNaN(+delay) ? +delay : delay;\n    const eventType = mutateEntryExit(resolvedDelay, i);\n    return toArray(resolvedTransition).map(transition => ({\n      ...transition,\n      event: eventType,\n      delay: resolvedDelay\n    }));\n  });\n  return delayedTransitions.map(delayedTransition => {\n    const {\n      delay\n    } = delayedTransition;\n    return {\n      ...formatTransition(stateNode, delayedTransition.event, delayedTransition),\n      delay\n    };\n  });\n}\nfunction formatTransition(stateNode, descriptor, transitionConfig) {\n  const normalizedTarget = normalizeTarget(transitionConfig.target);\n  const reenter = transitionConfig.reenter ?? false;\n  const {\n    guards\n  } = stateNode.machine.implementations;\n  const target = resolveTarget(stateNode, normalizedTarget);\n  const transition = {\n    ...transitionConfig,\n    actions: toArray(transitionConfig.actions),\n    guard: transitionConfig.guard ? toGuardDefinition(transitionConfig.guard, guardType => guards[guardType]) : undefined,\n    target,\n    source: stateNode,\n    reenter,\n    eventType: descriptor,\n    toJSON: () => ({\n      ...transition,\n      source: `#${stateNode.id}`,\n      target: target ? target.map(t => `#${t.id}`) : undefined\n    })\n  };\n  return transition;\n}\nfunction formatTransitions(stateNode) {\n  const transitions = new Map();\n  if (stateNode.config.on) {\n    for (const descriptor of Object.keys(stateNode.config.on)) {\n      if (descriptor === NULL_EVENT) {\n        throw new Error('Null events (\"\") cannot be specified as a transition key. Use `always: { ... }` instead.');\n      }\n      const transitionsConfig = stateNode.config.on[descriptor];\n      transitions.set(descriptor, toTransitionConfigArray(transitionsConfig).map(t => formatTransition(stateNode, descriptor, t)));\n    }\n  }\n  if (stateNode.config.onDone) {\n    const descriptor = String(done(stateNode.id));\n    transitions.set(descriptor, toTransitionConfigArray(stateNode.config.onDone).map(t => formatTransition(stateNode, descriptor, t)));\n  }\n  for (const invokeDef of stateNode.invoke) {\n    if (invokeDef.onDone) {\n      const descriptor = `done.invoke.${invokeDef.id}`;\n      transitions.set(descriptor, toTransitionConfigArray(invokeDef.onDone).map(t => formatTransition(stateNode, descriptor, t)));\n    }\n    if (invokeDef.onError) {\n      const descriptor = `error.platform.${invokeDef.id}`;\n      transitions.set(descriptor, toTransitionConfigArray(invokeDef.onError).map(t => formatTransition(stateNode, descriptor, t)));\n    }\n    if (invokeDef.onSnapshot) {\n      const descriptor = `xstate.snapshot.${invokeDef.id}`;\n      transitions.set(descriptor, toTransitionConfigArray(invokeDef.onSnapshot).map(t => formatTransition(stateNode, descriptor, t)));\n    }\n  }\n  for (const delayedTransition of stateNode.after) {\n    let existing = transitions.get(delayedTransition.eventType);\n    if (!existing) {\n      existing = [];\n      transitions.set(delayedTransition.eventType, existing);\n    }\n    existing.push(delayedTransition);\n  }\n  return transitions;\n}\nfunction formatInitialTransition(stateNode, _target) {\n  if (typeof _target === 'string' || isArray(_target)) {\n    const targets = toArray(_target).map(t => {\n      // Resolve state string keys (which represent children)\n      // to their state node\n      const descStateNode = typeof t === 'string' ? isStateId(t) ? stateNode.machine.getStateNodeById(t) : stateNode.states[t] : t;\n      if (!descStateNode) {\n        throw new Error(`Initial state node \"${t}\" not found on parent state node #${stateNode.id}`);\n      }\n      if (!isDescendant(descStateNode, stateNode)) {\n        throw new Error(`Invalid initial target: state node #${descStateNode.id} is not a descendant of #${stateNode.id}`);\n      }\n      return descStateNode;\n    });\n    const resolvedTarget = resolveTarget(stateNode, targets);\n    const transition = {\n      source: stateNode,\n      actions: [],\n      eventType: null,\n      reenter: false,\n      target: resolvedTarget,\n      toJSON: () => ({\n        ...transition,\n        source: `#${stateNode.id}`,\n        target: resolvedTarget ? resolvedTarget.map(t => `#${t.id}`) : undefined\n      })\n    };\n    return transition;\n  }\n  return formatTransition(stateNode, '__INITIAL__', {\n    target: toArray(_target.target).map(t => {\n      if (typeof t === 'string') {\n        return isStateId(t) ? t : `${STATE_DELIMITER}${t}`;\n      }\n      return t;\n    }),\n    actions: _target.actions\n  });\n}\nfunction resolveTarget(stateNode, targets) {\n  if (targets === undefined) {\n    // an undefined target signals that the state node should not transition from that state when receiving that event\n    return undefined;\n  }\n  return targets.map(target => {\n    if (typeof target !== 'string') {\n      return target;\n    }\n    if (isStateId(target)) {\n      return stateNode.machine.getStateNodeById(target);\n    }\n    const isInternalTarget = target[0] === STATE_DELIMITER;\n    // If internal target is defined on machine,\n    // do not include machine key on target\n    if (isInternalTarget && !stateNode.parent) {\n      return getStateNodeByPath(stateNode, target.slice(1));\n    }\n    const resolvedTarget = isInternalTarget ? stateNode.key + target : target;\n    if (stateNode.parent) {\n      try {\n        const targetStateNode = getStateNodeByPath(stateNode.parent, resolvedTarget);\n        return targetStateNode;\n      } catch (err) {\n        throw new Error(`Invalid transition definition for state node '${stateNode.id}':\\n${err.message}`);\n      }\n    } else {\n      throw new Error(`Invalid target: \"${target}\" is not a valid target from the root node. Did you mean \".${target}\"?`);\n    }\n  });\n}\nfunction resolveHistoryTarget(stateNode) {\n  const normalizedTarget = normalizeTarget(stateNode.target);\n  if (!normalizedTarget) {\n    return stateNode.parent.initial.target;\n  }\n  return normalizedTarget.map(t => typeof t === 'string' ? getStateNodeByPath(stateNode.parent, t) : t);\n}\nfunction isHistoryNode(stateNode) {\n  return stateNode.type === 'history';\n}\nfunction getInitialStateNodes(stateNode) {\n  const set = new Set();\n  function iter(descStateNode) {\n    if (set.has(descStateNode)) {\n      return;\n    }\n    set.add(descStateNode);\n    if (descStateNode.type === 'compound') {\n      for (const targetStateNode of descStateNode.initial.target) {\n        for (const a of getProperAncestors(targetStateNode, stateNode)) {\n          set.add(a);\n        }\n        iter(targetStateNode);\n      }\n    } else if (descStateNode.type === 'parallel') {\n      for (const child of getChildren(descStateNode)) {\n        iter(child);\n      }\n    }\n  }\n  iter(stateNode);\n  return [...set];\n}\n/**\n * Returns the child state node from its relative `stateKey`, or throws.\n */\nfunction getStateNode(stateNode, stateKey) {\n  if (isStateId(stateKey)) {\n    return stateNode.machine.getStateNodeById(stateKey);\n  }\n  if (!stateNode.states) {\n    throw new Error(`Unable to retrieve child state '${stateKey}' from '${stateNode.id}'; no child states exist.`);\n  }\n  const result = stateNode.states[stateKey];\n  if (!result) {\n    throw new Error(`Child state '${stateKey}' does not exist on '${stateNode.id}'`);\n  }\n  return result;\n}\n\n/**\n * Returns the relative state node from the given `statePath`, or throws.\n *\n * @param statePath The string or string array relative path to the state node.\n */\nfunction getStateNodeByPath(stateNode, statePath) {\n  if (typeof statePath === 'string' && isStateId(statePath)) {\n    try {\n      return stateNode.machine.getStateNodeById(statePath);\n    } catch (e) {\n      // try individual paths\n      // throw e;\n    }\n  }\n  const arrayStatePath = toStatePath(statePath).slice();\n  let currentStateNode = stateNode;\n  while (arrayStatePath.length) {\n    const key = arrayStatePath.shift();\n    if (!key.length) {\n      break;\n    }\n    currentStateNode = getStateNode(currentStateNode, key);\n  }\n  return currentStateNode;\n}\n\n/**\n * Returns the state nodes represented by the current state value.\n *\n * @param state The state value or State instance\n */\nfunction getStateNodes(stateNode, state) {\n  const stateValue = state instanceof State ? state.value : toStateValue(state);\n  if (typeof stateValue === 'string') {\n    return [stateNode, stateNode.states[stateValue]];\n  }\n  const childStateKeys = Object.keys(stateValue);\n  const childStateNodes = childStateKeys.map(subStateKey => getStateNode(stateNode, subStateKey)).filter(Boolean);\n  return [stateNode.machine.root, stateNode].concat(childStateNodes, childStateKeys.reduce((allSubStateNodes, subStateKey) => {\n    const subStateNode = getStateNode(stateNode, subStateKey);\n    if (!subStateNode) {\n      return allSubStateNodes;\n    }\n    const subStateNodes = getStateNodes(subStateNode, stateValue[subStateKey]);\n    return allSubStateNodes.concat(subStateNodes);\n  }, []));\n}\nfunction transitionAtomicNode(stateNode, stateValue, state, event) {\n  const childStateNode = getStateNode(stateNode, stateValue);\n  const next = childStateNode.next(state, event);\n  if (!next || !next.length) {\n    return stateNode.next(state, event);\n  }\n  return next;\n}\nfunction transitionCompoundNode(stateNode, stateValue, state, event) {\n  const subStateKeys = Object.keys(stateValue);\n  const childStateNode = getStateNode(stateNode, subStateKeys[0]);\n  const next = transitionNode(childStateNode, stateValue[subStateKeys[0]], state, event);\n  if (!next || !next.length) {\n    return stateNode.next(state, event);\n  }\n  return next;\n}\nfunction transitionParallelNode(stateNode, stateValue, state, event) {\n  const allInnerTransitions = [];\n  for (const subStateKey of Object.keys(stateValue)) {\n    const subStateValue = stateValue[subStateKey];\n    if (!subStateValue) {\n      continue;\n    }\n    const subStateNode = getStateNode(stateNode, subStateKey);\n    const innerTransitions = transitionNode(subStateNode, subStateValue, state, event);\n    if (innerTransitions) {\n      allInnerTransitions.push(...innerTransitions);\n    }\n  }\n  if (!allInnerTransitions.length) {\n    return stateNode.next(state, event);\n  }\n  return allInnerTransitions;\n}\nfunction transitionNode(stateNode, stateValue, state, event) {\n  // leaf node\n  if (typeof stateValue === 'string') {\n    return transitionAtomicNode(stateNode, stateValue, state, event);\n  }\n\n  // compound node\n  if (Object.keys(stateValue).length === 1) {\n    return transitionCompoundNode(stateNode, stateValue, state, event);\n  }\n\n  // parallel node\n  return transitionParallelNode(stateNode, stateValue, state, event);\n}\nfunction getHistoryNodes(stateNode) {\n  return Object.keys(stateNode.states).map(key => stateNode.states[key]).filter(sn => sn.type === 'history');\n}\nfunction isDescendant(childStateNode, parentStateNode) {\n  let marker = childStateNode;\n  while (marker.parent && marker.parent !== parentStateNode) {\n    marker = marker.parent;\n  }\n  return marker.parent === parentStateNode;\n}\nfunction getPathFromRootToNode(stateNode) {\n  const path = [];\n  let marker = stateNode.parent;\n  while (marker) {\n    path.unshift(marker);\n    marker = marker.parent;\n  }\n  return path;\n}\nfunction hasIntersection(s1, s2) {\n  const set1 = new Set(s1);\n  const set2 = new Set(s2);\n  for (const item of set1) {\n    if (set2.has(item)) {\n      return true;\n    }\n  }\n  for (const item of set2) {\n    if (set1.has(item)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction removeConflictingTransitions(enabledTransitions, configuration, historyValue) {\n  const filteredTransitions = new Set();\n  for (const t1 of enabledTransitions) {\n    let t1Preempted = false;\n    const transitionsToRemove = new Set();\n    for (const t2 of filteredTransitions) {\n      if (hasIntersection(computeExitSet([t1], configuration, historyValue), computeExitSet([t2], configuration, historyValue))) {\n        if (isDescendant(t1.source, t2.source)) {\n          transitionsToRemove.add(t2);\n        } else {\n          t1Preempted = true;\n          break;\n        }\n      }\n    }\n    if (!t1Preempted) {\n      for (const t3 of transitionsToRemove) {\n        filteredTransitions.delete(t3);\n      }\n      filteredTransitions.add(t1);\n    }\n  }\n  return Array.from(filteredTransitions);\n}\nfunction findLCCA(stateNodes) {\n  const [head] = stateNodes;\n  let current = getPathFromRootToNode(head);\n  let candidates = [];\n  for (const stateNode of stateNodes) {\n    const path = getPathFromRootToNode(stateNode);\n    candidates = current.filter(sn => path.includes(sn));\n    current = candidates;\n    candidates = [];\n  }\n  return current[current.length - 1];\n}\nfunction getEffectiveTargetStates(transition, historyValue) {\n  if (!transition.target) {\n    return [];\n  }\n  const targets = new Set();\n  for (const targetNode of transition.target) {\n    if (isHistoryNode(targetNode)) {\n      if (historyValue[targetNode.id]) {\n        for (const node of historyValue[targetNode.id]) {\n          targets.add(node);\n        }\n      } else {\n        for (const node of getEffectiveTargetStates({\n          target: resolveHistoryTarget(targetNode)\n        }, historyValue)) {\n          targets.add(node);\n        }\n      }\n    } else {\n      targets.add(targetNode);\n    }\n  }\n  return [...targets];\n}\nfunction getTransitionDomain(transition, historyValue) {\n  const targetStates = getEffectiveTargetStates(transition, historyValue);\n  if (!targetStates) {\n    return null;\n  }\n  if (!transition.reenter && transition.source.type !== 'parallel' && targetStates.every(targetStateNode => isDescendant(targetStateNode, transition.source))) {\n    return transition.source;\n  }\n  const lcca = findLCCA(targetStates.concat(transition.source));\n  return lcca;\n}\nfunction computeExitSet(transitions, configuration, historyValue) {\n  const statesToExit = new Set();\n  for (const t of transitions) {\n    if (t.target?.length) {\n      const domain = getTransitionDomain(t, historyValue);\n      for (const stateNode of configuration) {\n        if (isDescendant(stateNode, domain)) {\n          statesToExit.add(stateNode);\n        }\n      }\n    }\n  }\n  return [...statesToExit];\n}\n\n/**\n * https://www.w3.org/TR/scxml/#microstepProcedure\n *\n * @private\n * @param transitions\n * @param currentState\n * @param mutConfiguration\n */\n\nfunction microstep(transitions, currentState, actorCtx, event, isInitial) {\n  const mutConfiguration = new Set(currentState.configuration);\n  if (!transitions.length) {\n    return currentState;\n  }\n  const microstate = microstepProcedure(transitions, currentState, mutConfiguration, event, actorCtx, isInitial);\n  return cloneState(microstate, {\n    value: {} // TODO: make optional\n  });\n}\n\nfunction microstepProcedure(transitions, currentState, mutConfiguration, event, actorCtx, isInitial) {\n  const actions = [];\n  const historyValue = {\n    ...currentState.historyValue\n  };\n  const filteredTransitions = removeConflictingTransitions(transitions, mutConfiguration, historyValue);\n  const internalQueue = [...currentState._internalQueue];\n\n  // Exit states\n  if (!isInitial) {\n    exitStates(filteredTransitions, mutConfiguration, historyValue, actions);\n  }\n\n  // Execute transition content\n  actions.push(...filteredTransitions.flatMap(t => t.actions));\n\n  // Enter states\n  enterStates(event, filteredTransitions, mutConfiguration, actions, internalQueue, currentState, historyValue, isInitial);\n  const nextConfiguration = [...mutConfiguration];\n  const done = isInFinalState(nextConfiguration);\n  if (done) {\n    const finalActions = nextConfiguration.sort((a, b) => b.order - a.order).flatMap(state => state.exit);\n    actions.push(...finalActions);\n  }\n  try {\n    const nextState = resolveActionsAndContext(actions, event, currentState, actorCtx);\n    const output = done ? getOutput(nextConfiguration, nextState.context, event) : undefined;\n    internalQueue.push(...nextState._internalQueue);\n    return cloneState(currentState, {\n      configuration: nextConfiguration,\n      historyValue,\n      _internalQueue: internalQueue,\n      context: nextState.context,\n      done,\n      output,\n      children: nextState.children\n    });\n  } catch (e) {\n    // TODO: Refactor this once proper error handling is implemented.\n    // See https://github.com/statelyai/rfcs/pull/4\n    throw e;\n  }\n}\nfunction enterStates(event, filteredTransitions, mutConfiguration, actions, internalQueue, currentState, historyValue, isInitial) {\n  const statesToEnter = new Set();\n  const statesForDefaultEntry = new Set();\n  computeEntrySet(filteredTransitions, historyValue, statesForDefaultEntry, statesToEnter);\n\n  // In the initial state, the root state node is \"entered\".\n  if (isInitial) {\n    statesForDefaultEntry.add(currentState.machine.root);\n  }\n  for (const stateNodeToEnter of [...statesToEnter].sort((a, b) => a.order - b.order)) {\n    mutConfiguration.add(stateNodeToEnter);\n    for (const invokeDef of stateNodeToEnter.invoke) {\n      actions.push(invoke(invokeDef));\n    }\n\n    // Add entry actions\n    actions.push(...stateNodeToEnter.entry);\n    if (statesForDefaultEntry.has(stateNodeToEnter)) {\n      for (const stateNode of statesForDefaultEntry) {\n        const initialActions = stateNode.initial.actions;\n        actions.push(...initialActions);\n      }\n    }\n    if (stateNodeToEnter.type === 'final') {\n      const parent = stateNodeToEnter.parent;\n      if (!parent.parent) {\n        continue;\n      }\n      internalQueue.push(done(parent.id, stateNodeToEnter.output ? mapContext(stateNodeToEnter.output, currentState.context, event) : undefined));\n      if (parent.parent) {\n        const grandparent = parent.parent;\n        if (grandparent.type === 'parallel') {\n          if (getChildren(grandparent).every(parentNode => isInFinalState([...mutConfiguration], parentNode))) {\n            internalQueue.push(done(grandparent.id));\n          }\n        }\n      }\n    }\n  }\n}\nfunction computeEntrySet(transitions, historyValue, statesForDefaultEntry, statesToEnter) {\n  for (const t of transitions) {\n    for (const s of t.target || []) {\n      addDescendantStatesToEnter(s, historyValue, statesForDefaultEntry, statesToEnter);\n    }\n    const ancestor = getTransitionDomain(t, historyValue);\n    const targetStates = getEffectiveTargetStates(t, historyValue);\n    for (const s of targetStates) {\n      addAncestorStatesToEnter(s, ancestor, statesToEnter, historyValue, statesForDefaultEntry);\n    }\n  }\n}\nfunction addDescendantStatesToEnter(stateNode, historyValue, statesForDefaultEntry, statesToEnter) {\n  if (isHistoryNode(stateNode)) {\n    if (historyValue[stateNode.id]) {\n      const historyStateNodes = historyValue[stateNode.id];\n      for (const s of historyStateNodes) {\n        addDescendantStatesToEnter(s, historyValue, statesForDefaultEntry, statesToEnter);\n      }\n      for (const s of historyStateNodes) {\n        addAncestorStatesToEnter(s, stateNode.parent, statesToEnter, historyValue, statesForDefaultEntry);\n        for (const stateForDefaultEntry of statesForDefaultEntry) {\n          statesForDefaultEntry.add(stateForDefaultEntry);\n        }\n      }\n    } else {\n      const targets = resolveHistoryTarget(stateNode);\n      for (const s of targets) {\n        addDescendantStatesToEnter(s, historyValue, statesForDefaultEntry, statesToEnter);\n      }\n      for (const s of targets) {\n        addAncestorStatesToEnter(s, stateNode, statesToEnter, historyValue, statesForDefaultEntry);\n        for (const stateForDefaultEntry of statesForDefaultEntry) {\n          statesForDefaultEntry.add(stateForDefaultEntry);\n        }\n      }\n    }\n  } else {\n    statesToEnter.add(stateNode);\n    if (stateNode.type === 'compound') {\n      statesForDefaultEntry.add(stateNode);\n      const initialStates = stateNode.initial.target;\n      for (const initialState of initialStates) {\n        addDescendantStatesToEnter(initialState, historyValue, statesForDefaultEntry, statesToEnter);\n      }\n      for (const initialState of initialStates) {\n        addAncestorStatesToEnter(initialState, stateNode, statesToEnter, historyValue, statesForDefaultEntry);\n      }\n    } else {\n      if (stateNode.type === 'parallel') {\n        for (const child of getChildren(stateNode).filter(sn => !isHistoryNode(sn))) {\n          if (![...statesToEnter].some(s => isDescendant(s, child))) {\n            addDescendantStatesToEnter(child, historyValue, statesForDefaultEntry, statesToEnter);\n          }\n        }\n      }\n    }\n  }\n}\nfunction addAncestorStatesToEnter(stateNode, toStateNode, statesToEnter, historyValue, statesForDefaultEntry) {\n  const properAncestors = getProperAncestors(stateNode, toStateNode);\n  for (const anc of properAncestors) {\n    statesToEnter.add(anc);\n    if (anc.type === 'parallel') {\n      for (const child of getChildren(anc).filter(sn => !isHistoryNode(sn))) {\n        if (![...statesToEnter].some(s => isDescendant(s, child))) {\n          addDescendantStatesToEnter(child, historyValue, statesForDefaultEntry, statesToEnter);\n        }\n      }\n    }\n  }\n}\nfunction exitStates(transitions, mutConfiguration, historyValue, actions) {\n  const statesToExit = computeExitSet(transitions, mutConfiguration, historyValue);\n  statesToExit.sort((a, b) => b.order - a.order);\n\n  // From SCXML algorithm: https://www.w3.org/TR/scxml/#exitStates\n  for (const exitStateNode of statesToExit) {\n    for (const historyNode of getHistoryNodes(exitStateNode)) {\n      let predicate;\n      if (historyNode.history === 'deep') {\n        predicate = sn => isAtomicStateNode(sn) && isDescendant(sn, exitStateNode);\n      } else {\n        predicate = sn => {\n          return sn.parent === exitStateNode;\n        };\n      }\n      historyValue[historyNode.id] = Array.from(mutConfiguration).filter(predicate);\n    }\n  }\n  for (const s of statesToExit) {\n    actions.push(...s.exit, ...s.invoke.map(def => stop(def.id)));\n    mutConfiguration.delete(s);\n  }\n}\nfunction resolveActionsAndContext(actions, event, currentState, actorCtx) {\n  const {\n    machine\n  } = currentState;\n  // TODO: this `cloneState` is really just a hack to prevent infinite loops\n  // we need to take another look at how internal queue is managed\n  let intermediateState = cloneState(currentState, {\n    _internalQueue: []\n  });\n  for (const action of actions) {\n    const resolved = typeof action === 'function' ? action : machine.implementations.actions[typeof action === 'string' ? action : action.type];\n    if (!resolved) {\n      continue;\n    }\n    const args = {\n      context: intermediateState.context,\n      event,\n      self: actorCtx?.self,\n      system: actorCtx?.system,\n      // TODO: figure out story for `action` and inline actions\n      // what those ones should receive?\n      //\n      // entry: ({ action }) => {}\n      // exit: assign(({ action }) => {})\n      action: typeof action === 'string' ? {\n        type: action\n      } : action\n    };\n    if (!('resolve' in resolved)) {\n      if (actorCtx?.self.status === ActorStatus.Running) {\n        resolved(args);\n      } else {\n        actorCtx?.defer(() => resolved(args));\n      }\n      continue;\n    }\n    const builtinAction = resolved;\n    const [nextState, params, actions] = builtinAction.resolve(actorCtx, intermediateState, args, resolved // this holds all params\n    );\n\n    intermediateState = nextState;\n    if ('execute' in resolved) {\n      if (actorCtx?.self.status === ActorStatus.Running) {\n        builtinAction.execute(actorCtx, params);\n      } else {\n        actorCtx?.defer(builtinAction.execute.bind(null, actorCtx, params));\n      }\n    }\n    if (actions) {\n      intermediateState = resolveActionsAndContext(actions, event, intermediateState, actorCtx);\n    }\n  }\n  return intermediateState;\n}\nfunction macrostep(state, event, actorCtx) {\n  let nextState = state;\n  const states = [];\n\n  // Handle stop event\n  if (event.type === stopSignalType) {\n    nextState = stopStep(event, nextState, actorCtx);\n    states.push(nextState);\n    return {\n      state: nextState,\n      microstates: states\n    };\n  }\n  let nextEvent = event;\n\n  // Assume the state is at rest (no raised events)\n  // Determine the next state based on the next microstep\n  if (nextEvent.type !== INIT_TYPE) {\n    const transitions = selectTransitions(nextEvent, nextState);\n    nextState = microstep(transitions, state, actorCtx, nextEvent, false);\n    states.push(nextState);\n  }\n  while (!nextState.done) {\n    let enabledTransitions = selectEventlessTransitions(nextState, nextEvent);\n    if (!enabledTransitions.length) {\n      if (!nextState._internalQueue.length) {\n        break;\n      } else {\n        nextEvent = nextState._internalQueue[0];\n        const transitions = selectTransitions(nextEvent, nextState);\n        nextState = microstep(transitions, nextState, actorCtx, nextEvent, false);\n        nextState._internalQueue.shift();\n        states.push(nextState);\n      }\n    } else {\n      nextState = microstep(enabledTransitions, nextState, actorCtx, nextEvent, false);\n      states.push(nextState);\n    }\n  }\n  if (nextState.done) {\n    // Perform the stop step to ensure that child actors are stopped\n    stopStep(nextEvent, nextState, actorCtx);\n  }\n  return {\n    state: nextState,\n    microstates: states\n  };\n}\nfunction stopStep(event, nextState, actorCtx) {\n  const actions = [];\n  for (const stateNode of nextState.configuration.sort((a, b) => b.order - a.order)) {\n    actions.push(...stateNode.exit);\n  }\n  for (const child of Object.values(nextState.children)) {\n    actions.push(stop(child));\n  }\n  return resolveActionsAndContext(actions, event, nextState, actorCtx);\n}\nfunction selectTransitions(event, nextState) {\n  return nextState.machine.getTransitionData(nextState, event);\n}\nfunction selectEventlessTransitions(nextState, event) {\n  const enabledTransitionSet = new Set();\n  const atomicStates = nextState.configuration.filter(isAtomicStateNode);\n  for (const stateNode of atomicStates) {\n    loop: for (const s of [stateNode].concat(getProperAncestors(stateNode, null))) {\n      if (!s.always) {\n        continue;\n      }\n      for (const transition of s.always) {\n        if (transition.guard === undefined || evaluateGuard(transition.guard, nextState.context, event, nextState)) {\n          enabledTransitionSet.add(transition);\n          break loop;\n        }\n      }\n    }\n  }\n  return removeConflictingTransitions(Array.from(enabledTransitionSet), new Set(nextState.configuration), nextState.historyValue);\n}\n\n/**\n * Resolves a partial state value with its full representation in the state node's machine.\n *\n * @param stateValue The partial state value to resolve.\n */\nfunction resolveStateValue(rootNode, stateValue) {\n  const configuration = getConfiguration(getStateNodes(rootNode, stateValue));\n  return getStateValue(rootNode, [...configuration]);\n}\nfunction getInitialConfiguration(rootNode) {\n  const configuration = [];\n  const initialTransition = rootNode.initial;\n  const statesToEnter = new Set();\n  const statesForDefaultEntry = new Set([rootNode]);\n  computeEntrySet([initialTransition], {}, statesForDefaultEntry, statesToEnter);\n  for (const stateNodeToEnter of [...statesToEnter].sort((a, b) => a.order - b.order)) {\n    configuration.push(stateNodeToEnter);\n  }\n  return configuration;\n}\n\nclass State {\n  /**\n   * Indicates whether the state is a final state.\n   */\n\n  /**\n   * The done data of the top-level finite state.\n   */\n  // TODO: add an explicit type for `output`\n\n  /**\n   * The enabled state nodes representative of the state value.\n   */\n\n  /**\n   * An object mapping actor names to spawned/invoked actors.\n   */\n\n  /**\n   * Creates a new State instance for the given `stateValue` and `context`.\n   * @param stateValue\n   * @param context\n   */\n  static from(stateValue, context = {}, machine) {\n    if (stateValue instanceof State) {\n      if (stateValue.context !== context) {\n        return new State({\n          value: stateValue.value,\n          context,\n          meta: {},\n          configuration: [],\n          // TODO: fix,\n          children: {}\n        }, machine);\n      }\n      return stateValue;\n    }\n    const configuration = getConfiguration(getStateNodes(machine.root, stateValue));\n    return new State({\n      value: stateValue,\n      context,\n      meta: undefined,\n      configuration: Array.from(configuration),\n      children: {}\n    }, machine);\n  }\n\n  /**\n   * Creates a new `State` instance that represents the current state of a running machine.\n   *\n   * @param config\n   */\n  constructor(config, machine) {\n    this.machine = machine;\n    this.tags = void 0;\n    this.value = void 0;\n    this.done = void 0;\n    this.output = void 0;\n    this.context = void 0;\n    this.historyValue = {};\n    this._internalQueue = void 0;\n    this.configuration = void 0;\n    this.children = void 0;\n    this.context = config.context;\n    this._internalQueue = config._internalQueue ?? [];\n    this.historyValue = config.historyValue || {};\n    this.matches = this.matches.bind(this);\n    this.toStrings = this.toStrings.bind(this);\n    this.configuration = config.configuration ?? Array.from(getConfiguration(getStateNodes(machine.root, config.value)));\n    this.children = config.children;\n    this.value = getStateValue(machine.root, this.configuration);\n    this.tags = new Set(flatten(this.configuration.map(sn => sn.tags)));\n    this.done = config.done ?? false;\n    this.output = config.output;\n  }\n\n  /**\n   * Returns an array of all the string leaf state node paths.\n   * @param stateValue\n   * @param delimiter The character(s) that separate each subpath in the string state node path.\n   */\n  toStrings(stateValue = this.value) {\n    if (typeof stateValue === 'string') {\n      return [stateValue];\n    }\n    const valueKeys = Object.keys(stateValue);\n    return valueKeys.concat(...valueKeys.map(key => this.toStrings(stateValue[key]).map(s => key + STATE_DELIMITER + s)));\n  }\n  toJSON() {\n    const {\n      configuration,\n      tags,\n      machine,\n      ...jsonValues\n    } = this;\n    return {\n      ...jsonValues,\n      tags: Array.from(tags),\n      meta: this.meta\n    };\n  }\n\n  /**\n   * Whether the current state value is a subset of the given parent state value.\n   * @param parentStateValue\n   */\n  matches(parentStateValue) {\n    return matchesState(parentStateValue, this.value);\n  }\n\n  /**\n   * Whether the current state configuration has a state node with the specified `tag`.\n   * @param tag\n   */\n  hasTag(tag) {\n    return this.tags.has(tag);\n  }\n\n  /**\n   * Determines whether sending the `event` will cause a non-forbidden transition\n   * to be selected, even if the transitions have no actions nor\n   * change the state value.\n   *\n   * @param event The event to test\n   * @returns Whether the event will cause a transition\n   */\n  can(event) {\n    const transitionData = this.machine.getTransitionData(this, event);\n    return !!transitionData?.length &&\n    // Check that at least one transition is not forbidden\n    transitionData.some(t => t.target !== undefined || t.actions.length);\n  }\n\n  /**\n   * The next events that will cause a transition from the current state.\n   */\n  get nextEvents() {\n    return memo(this, 'nextEvents', () => {\n      return [...new Set(flatten([...this.configuration.map(sn => sn.ownEvents)]))];\n    });\n  }\n  get meta() {\n    return this.configuration.reduce((acc, stateNode) => {\n      if (stateNode.meta !== undefined) {\n        acc[stateNode.id] = stateNode.meta;\n      }\n      return acc;\n    }, {});\n  }\n}\nfunction cloneState(state, config = {}) {\n  return new State({\n    ...state,\n    ...config\n  }, state.machine);\n}\nfunction getPersistedState(state) {\n  const {\n    configuration,\n    tags,\n    machine,\n    children,\n    ...jsonValues\n  } = state;\n  const childrenJson = {};\n  for (const id in children) {\n    childrenJson[id] = {\n      state: children[id].getPersistedState?.(),\n      src: children[id].src\n    };\n  }\n  return {\n    ...jsonValues,\n    children: childrenJson\n  };\n}\n\nfunction resolve$5(_, state, args, {\n  actorRef\n}) {\n  const actorRefOrString = typeof actorRef === 'function' ? actorRef(args) : actorRef;\n  const resolvedActorRef = typeof actorRefOrString === 'string' ? state.children[actorRefOrString] : actorRefOrString;\n  let children = state.children;\n  if (resolvedActorRef) {\n    children = {\n      ...children\n    };\n    delete children[resolvedActorRef.id];\n  }\n  return [cloneState(state, {\n    children\n  }), resolvedActorRef];\n}\nfunction execute$2(actorContext, actorRef) {\n  if (!actorRef) {\n    return;\n  }\n  if (actorRef.status !== ActorStatus.Running) {\n    actorContext.stopChild(actorRef);\n    return;\n  }\n  // TODO: recheck why this one has to be deferred\n  actorContext.defer(() => {\n    actorContext.stopChild(actorRef);\n  });\n}\n\n/**\n * Stops an actor.\n *\n * @param actorRef The actor to stop.\n */\n\nfunction stop(actorRef) {\n  function stop(_) {\n  }\n  stop.type = 'xstate.stop';\n  stop.actorRef = actorRef;\n  stop.resolve = resolve$5;\n  stop.execute = execute$2;\n  return stop;\n}\n\nfunction resolve$4(_, state, actionArgs, {\n  value,\n  label\n}) {\n  return [state, {\n    value: typeof value === 'function' ? value(actionArgs) : value,\n    label\n  }];\n}\nfunction execute$1({\n  logger\n}, {\n  value,\n  label\n}) {\n  if (label) {\n    logger(label, value);\n  } else {\n    logger(value);\n  }\n}\n\n/**\n *\n * @param expr The expression function to evaluate which will be logged.\n *  Takes in 2 arguments:\n *  - `ctx` - the current state context\n *  - `event` - the event that caused this action to be executed.\n * @param label The label to give to the logged expression.\n */\nfunction log(value = ({\n  context,\n  event\n}) => ({\n  context,\n  event\n}), label) {\n  function log(_) {\n  }\n  log.type = 'xstate.log';\n  log.value = value;\n  log.label = label;\n  log.resolve = resolve$4;\n  log.execute = execute$1;\n  return log;\n}\n\nfunction createSpawner(actorContext, {\n  machine,\n  context\n}, event, spawnedChildren) {\n  const spawn = (src, options = {}) => {\n    const {\n      systemId\n    } = options;\n    if (typeof src === 'string') {\n      const referenced = resolveReferencedActor(machine.implementations.actors[src]);\n      if (!referenced) {\n        throw new Error(`Actor logic '${src}' not implemented in machine '${machine.id}'`);\n      }\n      const input = 'input' in options ? options.input : referenced.input;\n\n      // TODO: this should also receive `src`\n      const actor = interpret(referenced.src, {\n        id: options.id,\n        parent: actorContext.self,\n        input: typeof input === 'function' ? input({\n          context,\n          event,\n          self: actorContext.self\n        }) : input,\n        systemId\n      });\n      spawnedChildren[actor.id] = actor;\n      return actor;\n    } else {\n      // TODO: this should also receive `src`\n      return interpret(src, {\n        id: options.id,\n        parent: actorContext.self,\n        input: options.input,\n        systemId\n      });\n    }\n  };\n  return (src, options) => {\n    const actorRef = spawn(src, options);\n    spawnedChildren[actorRef.id] = actorRef;\n    actorContext.defer(() => {\n      if (actorRef.status === ActorStatus.Stopped) {\n        return;\n      }\n      try {\n        actorRef.start?.();\n      } catch (err) {\n        actorContext.self.send(error(actorRef.id, err));\n        return;\n      }\n    });\n    return actorRef;\n  };\n}\n\nfunction resolve$3(actorContext, state, actionArgs, {\n  assignment\n}) {\n  if (!state.context) {\n    throw new Error('Cannot assign to undefined `context`. Ensure that `context` is defined in the machine config.');\n  }\n  const spawnedChildren = {};\n  const assignArgs = {\n    context: state.context,\n    event: actionArgs.event,\n    action: actionArgs.action,\n    spawn: createSpawner(actorContext, state, actionArgs.event, spawnedChildren),\n    self: actorContext?.self,\n    system: actorContext?.system\n  };\n  let partialUpdate = {};\n  if (typeof assignment === 'function') {\n    partialUpdate = assignment(assignArgs);\n  } else {\n    for (const key of Object.keys(assignment)) {\n      const propAssignment = assignment[key];\n      partialUpdate[key] = typeof propAssignment === 'function' ? propAssignment(assignArgs) : propAssignment;\n    }\n  }\n  const updatedContext = Object.assign({}, state.context, partialUpdate);\n  return [cloneState(state, {\n    context: updatedContext,\n    children: Object.keys(spawnedChildren).length ? {\n      ...state.children,\n      ...spawnedChildren\n    } : state.children\n  })];\n}\n\n/**\n * Updates the current context of the machine.\n *\n * @param assignment An object that represents the partial context to update.\n */\nfunction assign(assignment) {\n  function assign(_) {\n  }\n  assign.type = 'xstate.assign';\n  assign.assignment = assignment;\n  assign.resolve = resolve$3;\n  return assign;\n}\n\nfunction resolve$2(_, state, args, {\n  event: eventOrExpr,\n  id,\n  delay\n}) {\n  const delaysMap = state.machine.implementations.delays;\n  if (typeof eventOrExpr === 'string') {\n    throw new Error(`Only event objects may be used with raise; use raise({ type: \"${eventOrExpr}\" }) instead`);\n  }\n  const resolvedEvent = typeof eventOrExpr === 'function' ? eventOrExpr(args) : eventOrExpr;\n  let resolvedDelay;\n  if (typeof delay === 'string') {\n    const configDelay = delaysMap && delaysMap[delay];\n    resolvedDelay = typeof configDelay === 'function' ? configDelay(args) : configDelay;\n  } else {\n    resolvedDelay = typeof delay === 'function' ? delay(args) : delay;\n  }\n  return [typeof resolvedDelay !== 'number' ? cloneState(state, {\n    _internalQueue: state._internalQueue.concat(resolvedEvent)\n  }) : state, {\n    event: resolvedEvent,\n    id,\n    delay: resolvedDelay\n  }];\n}\nfunction execute(actorContext, params) {\n  if (typeof params.delay === 'number') {\n    actorContext.self.delaySend(params);\n    return;\n  }\n}\n\n/**\n * Raises an event. This places the event in the internal event queue, so that\n * the event is immediately consumed by the machine in the current step.\n *\n * @param eventType The event to raise.\n */\n\nfunction raise(eventOrExpr, options) {\n  function raise(_) {\n  }\n  raise.type = 'xstate.raise';\n  raise.event = eventOrExpr;\n  raise.id = options?.id;\n  raise.delay = options?.delay;\n  raise.resolve = resolve$2;\n  raise.execute = execute;\n  return raise;\n}\n\nfunction resolve$1(_, state, actionArgs, {\n  branches\n}) {\n  const matchedActions = branches.find(condition => {\n    const guard = condition.guard && toGuardDefinition(condition.guard, guardType => state.machine.implementations.guards[guardType]);\n    return !guard || evaluateGuard(guard, state.context, actionArgs.event, state);\n  })?.actions;\n  return [state, undefined, toArray(matchedActions)];\n}\nfunction choose(branches) {\n  function choose(_) {\n  }\n  choose.type = 'xstate.choose';\n  choose.branches = branches;\n  choose.resolve = resolve$1;\n  return choose;\n}\n\nfunction resolve(_, state, args, {\n  get\n}) {\n  return [state, undefined, toArray(get({\n    context: state.context,\n    event: args.event\n  }))];\n}\nfunction pure(getActions) {\n  function pure(_) {\n  }\n  pure.type = 'xstate.pure';\n  pure.get = getActions;\n  pure.resolve = resolve;\n  return pure;\n}\n\n/**\n * Returns an event type that represents an implicit event that\n * is sent after the specified `delay`.\n *\n * @param delayRef The delay in milliseconds\n * @param id The state node ID where this event is handled\n */\nfunction after(delayRef, id) {\n  const idSuffix = id ? `#${id}` : '';\n  return `${ConstantPrefix.After}(${delayRef})${idSuffix}`;\n}\n\n/**\n * Returns an event that represents that a final state node\n * has been reached in the parent state node.\n *\n * @param id The final state node's parent state node `id`\n * @param output The data to pass into the event\n */\nfunction done(id, output) {\n  const type = `${ConstantPrefix.DoneState}.${id}`;\n  const eventObject = {\n    type,\n    output\n  };\n  eventObject.toString = () => type;\n  return eventObject;\n}\n\n/**\n * Returns an event that represents that an invoked service has terminated.\n *\n * An invoked service is terminated when it has reached a top-level final state node,\n * but not when it is canceled.\n *\n * @param invokeId The invoked service ID\n * @param output The data to pass into the event\n */\nfunction doneInvoke(invokeId, output) {\n  const type = `${ConstantPrefix.DoneInvoke}.${invokeId}`;\n  const eventObject = {\n    type,\n    output\n  };\n  eventObject.toString = () => type;\n  return eventObject;\n}\nfunction error(id, data) {\n  const type = `${ConstantPrefix.ErrorPlatform}.${id}`;\n  const eventObject = {\n    type,\n    data\n  };\n  eventObject.toString = () => type;\n  return eventObject;\n}\nfunction createInitEvent(input) {\n  return {\n    type: INIT_TYPE,\n    input\n  };\n}\n\nexport { fromEventObservable as $, isAtomicStateNode as A, error as B, isStateId as C, getStateNodeByPath as D, getPersistedState as E, resolveReferencedActor as F, interpret as G, matchesState as H, sendTo as I, sendParent as J, forwardTo as K, Interpreter as L, ActorStatus as M, NULL_EVENT as N, doneInvoke as O, cancel as P, choose as Q, log as R, STATE_DELIMITER as S, pure as T, raise as U, stop as V, pathToStateValue as W, toObserver as X, fromPromise as Y, fromObservable as Z, fromCallback as _, toTransitionConfigArray as a, fromTransition as a0, stateIn as a1, not as a2, and as a3, or as a4, ConstantPrefix as a5, SpecialTargets as a6, startSignalType as a7, stopSignalType as a8, startSignal as a9, stopSignal as aa, isSignal as ab, isActorRef as ac, toActorRef as ad, createEmptyActor as ae, toGuardDefinition as af, constantPrefixes as ag, after as ah, done as ai, escalate as aj, formatTransition as b, memo as c, flatten as d, evaluateGuard as e, formatTransitions as f, createInvokeId as g, getDelayedTransitions as h, formatInitialTransition as i, getCandidates as j, toInvokeConfig as k, getConfiguration as l, mapValues as m, getStateNodes as n, isInFinalState as o, State as p, isErrorEvent as q, resolveStateValue as r, macrostep as s, toArray as t, transitionNode as u, getInitialConfiguration as v, resolveActionsAndContext as w, assign as x, createInitEvent as y, microstep as z };\n","import { S as STATE_DELIMITER, m as mapValues, t as toArray, f as formatTransitions, a as toTransitionConfigArray, b as formatTransition, N as NULL_EVENT, c as memo, e as evaluateGuard, d as flatten, g as createInvokeId, h as getDelayedTransitions, i as formatInitialTransition, j as getCandidates, k as toInvokeConfig, l as getConfiguration, n as getStateNodes, r as resolveStateValue, o as isInFinalState, p as State, q as isErrorEvent, s as macrostep, u as transitionNode, v as getInitialConfiguration, w as resolveActionsAndContext, x as assign, y as createInitEvent, z as microstep, A as isAtomicStateNode, B as error, C as isStateId, D as getStateNodeByPath, E as getPersistedState, F as resolveReferencedActor, G as interpret, H as matchesState } from './actions-4d6514d2.esm.js';\nexport { a5 as ConstantPrefix, L as Interpreter, M as InterpreterStatus, a6 as SpecialTargets, p as State, a3 as and, x as assign, P as cancel, Q as choose, O as doneInvoke, K as forwardTo, _ as fromCallback, $ as fromEventObservable, Z as fromObservable, Y as fromPromise, a0 as fromTransition, n as getStateNodes, G as interpret, R as log, H as matchesState, a2 as not, a4 as or, W as pathToStateValue, T as pure, U as raise, J as sendParent, I as sendTo, a1 as stateIn, V as stop, X as toObserver } from './actions-4d6514d2.esm.js';\nimport '../dev/dist/xstate-dev.esm.js';\n\nconst EMPTY_OBJECT = {};\nconst toSerializableActon = action => {\n  if (typeof action === 'string') {\n    return {\n      type: action\n    };\n  }\n  if (typeof action === 'function') {\n    if ('resolve' in action) {\n      return {\n        type: action.type\n      };\n    }\n    return {\n      type: action.name\n    };\n  }\n  return action;\n};\nclass StateNode {\n  /**\n   * The relative key of the state node, which represents its location in the overall state value.\n   */\n\n  /**\n   * The unique ID of the state node.\n   */\n\n  /**\n   * The type of this state node:\n   *\n   *  - `'atomic'` - no child state nodes\n   *  - `'compound'` - nested child state nodes (XOR)\n   *  - `'parallel'` - orthogonal nested child state nodes (AND)\n   *  - `'history'` - history state node\n   *  - `'final'` - final state node\n   */\n\n  /**\n   * The string path from the root machine node to this node.\n   */\n\n  /**\n   * The child state nodes.\n   */\n\n  /**\n   * The type of history on this state node. Can be:\n   *\n   *  - `'shallow'` - recalls only top-level historical state value\n   *  - `'deep'` - recalls historical state value at all levels\n   */\n\n  /**\n   * The action(s) to be executed upon entering the state node.\n   */\n\n  /**\n   * The action(s) to be executed upon exiting the state node.\n   */\n\n  /**\n   * The parent state node.\n   */\n\n  /**\n   * The root machine node.\n   */\n\n  /**\n   * The meta data associated with this state node, which will be returned in State instances.\n   */\n\n  /**\n   * The output data sent with the \"done.state._id_\" event if this is a final state node.\n   */\n\n  /**\n   * The order this state node appears. Corresponds to the implicit document order.\n   */\n\n  constructor(\n  /**\n   * The raw config used to create the machine.\n   */\n  config, options) {\n    this.config = config;\n    this.key = void 0;\n    this.id = void 0;\n    this.type = void 0;\n    this.path = void 0;\n    this.states = void 0;\n    this.history = void 0;\n    this.entry = void 0;\n    this.exit = void 0;\n    this.parent = void 0;\n    this.machine = void 0;\n    this.meta = void 0;\n    this.output = void 0;\n    this.order = -1;\n    this.description = void 0;\n    this.tags = [];\n    this.transitions = void 0;\n    this.always = void 0;\n    this.parent = options._parent;\n    this.key = options._key;\n    this.machine = options._machine;\n    this.path = this.parent ? this.parent.path.concat(this.key) : [];\n    this.id = this.config.id || [this.machine.id, ...this.path].join(STATE_DELIMITER);\n    this.type = this.config.type || (this.config.states && Object.keys(this.config.states).length ? 'compound' : this.config.history ? 'history' : 'atomic');\n    this.description = this.config.description;\n    this.order = this.machine.idMap.size;\n    this.machine.idMap.set(this.id, this);\n    this.states = this.config.states ? mapValues(this.config.states, (stateConfig, key) => {\n      const stateNode = new StateNode(stateConfig, {\n        _parent: this,\n        _key: key,\n        _machine: this.machine\n      });\n      return stateNode;\n    }) : EMPTY_OBJECT;\n    if (this.type === 'compound' && !this.config.initial) {\n      throw new Error(`No initial state specified for compound state node \"#${this.id}\". Try adding { initial: \"${Object.keys(this.states)[0]}\" } to the state config.`);\n    }\n\n    // History config\n    this.history = this.config.history === true ? 'shallow' : this.config.history || false;\n    this.entry = toArray(this.config.entry);\n    this.exit = toArray(this.config.exit);\n    this.meta = this.config.meta;\n    this.output = this.type === 'final' ? this.config.output : undefined;\n    this.tags = toArray(config.tags);\n  }\n  _initialize() {\n    this.transitions = formatTransitions(this);\n    if (this.config.always) {\n      this.always = toTransitionConfigArray(this.config.always).map(t => formatTransition(this, NULL_EVENT, t));\n    }\n    Object.keys(this.states).forEach(key => {\n      this.states[key]._initialize();\n    });\n  }\n\n  /**\n   * The well-structured state node definition.\n   */\n  get definition() {\n    return {\n      id: this.id,\n      key: this.key,\n      version: this.machine.version,\n      type: this.type,\n      initial: this.initial ? {\n        target: this.initial.target,\n        source: this,\n        actions: this.initial.actions.map(toSerializableActon),\n        eventType: null,\n        reenter: false,\n        toJSON: () => ({\n          target: this.initial.target.map(t => `#${t.id}`),\n          source: `#${this.id}`,\n          actions: this.initial.actions.map(toSerializableActon),\n          eventType: null\n        })\n      } : undefined,\n      history: this.history,\n      states: mapValues(this.states, state => {\n        return state.definition;\n      }),\n      on: this.on,\n      transitions: [...this.transitions.values()].flat().map(t => ({\n        ...t,\n        actions: t.actions.map(toSerializableActon)\n      })),\n      entry: this.entry.map(toSerializableActon),\n      exit: this.exit.map(toSerializableActon),\n      meta: this.meta,\n      order: this.order || -1,\n      output: this.output,\n      invoke: this.invoke,\n      description: this.description,\n      tags: this.tags\n    };\n  }\n  toJSON() {\n    return this.definition;\n  }\n\n  /**\n   * The logic invoked as actors by this state node.\n   */\n  get invoke() {\n    return memo(this, 'invoke', () => toArray(this.config.invoke).map((invocable, i) => {\n      const generatedId = createInvokeId(this.id, i);\n      const invokeConfig = toInvokeConfig(invocable, generatedId);\n      const resolvedId = invokeConfig.id || generatedId;\n      const src = invokeConfig.src;\n      const {\n        systemId\n      } = invokeConfig;\n\n      // TODO: resolving should not happen here\n      const resolvedSrc = typeof src === 'string' ? src : !('type' in src) ? resolvedId : src;\n      if (!this.machine.implementations.actors[resolvedId] && typeof src !== 'string' && !('type' in src)) {\n        this.machine.implementations.actors = {\n          ...this.machine.implementations.actors,\n          // TODO: this should accept `src` as-is\n          [resolvedId]: src\n        };\n      }\n      return {\n        type: 'xstate.invoke',\n        ...invokeConfig,\n        src: resolvedSrc,\n        id: resolvedId,\n        systemId: systemId,\n        toJSON() {\n          const {\n            onDone,\n            onError,\n            ...invokeDefValues\n          } = invokeConfig;\n          return {\n            ...invokeDefValues,\n            type: 'xstate.invoke',\n            src: resolvedSrc,\n            id: resolvedId\n          };\n        }\n      };\n    }));\n  }\n\n  /**\n   * The mapping of events to transitions.\n   */\n  get on() {\n    return memo(this, 'on', () => {\n      const transitions = this.transitions;\n      return [...transitions].flatMap(([descriptor, t]) => t.map(t => [descriptor, t])).reduce((map, [descriptor, transition]) => {\n        map[descriptor] = map[descriptor] || [];\n        map[descriptor].push(transition);\n        return map;\n      }, {});\n    });\n  }\n  get after() {\n    return memo(this, 'delayedTransitions', () => getDelayedTransitions(this));\n  }\n  get initial() {\n    return memo(this, 'initial', () => formatInitialTransition(this, this.config.initial || []));\n  }\n  next(state, event) {\n    const eventType = event.type;\n    const actions = [];\n    let selectedTransition;\n    const candidates = memo(this, `candidates-${eventType}`, () => getCandidates(this, eventType));\n    for (const candidate of candidates) {\n      const {\n        guard\n      } = candidate;\n      const resolvedContext = state.context;\n      let guardPassed = false;\n      try {\n        guardPassed = !guard || evaluateGuard(guard, resolvedContext, event, state);\n      } catch (err) {\n        throw new Error(`Unable to evaluate guard '${guard.type}' in transition for event '${eventType}' in state node '${this.id}':\\n${err.message}`);\n      }\n      if (guardPassed) {\n        actions.push(...candidate.actions);\n        selectedTransition = candidate;\n        break;\n      }\n    }\n    return selectedTransition ? [selectedTransition] : undefined;\n  }\n\n  /**\n   * The target state value of the history state node, if it exists. This represents the\n   * default state value to transition to if no history value exists yet.\n   */\n  get target() {\n    if (this.type === 'history') {\n      const historyConfig = this.config;\n      return historyConfig.target;\n    }\n    return undefined;\n  }\n\n  /**\n   * All the state node IDs of this state node and its descendant state nodes.\n   */\n  get stateIds() {\n    const childStateIds = flatten(Object.keys(this.states).map(stateKey => {\n      return this.states[stateKey].stateIds;\n    }));\n    return [this.id].concat(childStateIds);\n  }\n\n  /**\n   * All the event types accepted by this state node and its descendants.\n   */\n  get events() {\n    return memo(this, 'events', () => {\n      const {\n        states\n      } = this;\n      const events = new Set(this.ownEvents);\n      if (states) {\n        for (const stateId of Object.keys(states)) {\n          const state = states[stateId];\n          if (state.states) {\n            for (const event of state.events) {\n              events.add(`${event}`);\n            }\n          }\n        }\n      }\n      return Array.from(events);\n    });\n  }\n\n  /**\n   * All the events that have transitions directly from this state node.\n   *\n   * Excludes any inert events.\n   */\n  get ownEvents() {\n    const events = new Set([...this.transitions.keys()].filter(descriptor => {\n      return this.transitions.get(descriptor).some(transition => !(!transition.target && !transition.actions.length && !transition.reenter));\n    }));\n    return Array.from(events);\n  }\n}\n\nconst STATE_IDENTIFIER = '#';\nclass StateMachine {\n  /**\n   * The machine's own version.\n   */\n\n  constructor(\n  /**\n   * The raw config used to create the machine.\n   */\n  config, implementations) {\n    this.config = config;\n    this.version = void 0;\n    this.implementations = void 0;\n    this.types = void 0;\n    this.__xstatenode = true;\n    this.idMap = new Map();\n    this.root = void 0;\n    this.id = void 0;\n    this.states = void 0;\n    this.events = void 0;\n    this.__TContext = void 0;\n    this.__TEvent = void 0;\n    this.__TAction = void 0;\n    this.__TActorMap = void 0;\n    this.__TResolvedTypesMeta = void 0;\n    this.id = config.id || '(machine)';\n    this.implementations = {\n      actors: implementations?.actors ?? {},\n      actions: implementations?.actions ?? {},\n      delays: implementations?.delays ?? {},\n      guards: implementations?.guards ?? {}\n    };\n    this.version = this.config.version;\n    this.types = this.config.types ?? {};\n    this.transition = this.transition.bind(this);\n    this.root = new StateNode(config, {\n      _key: this.id,\n      _machine: this\n    });\n    this.root._initialize();\n    this.states = this.root.states; // TODO: remove!\n    this.events = this.root.events;\n  }\n\n  /**\n   * Clones this state machine with the provided implementations\n   * and merges the `context` (if provided).\n   *\n   * @param implementations Options (`actions`, `guards`, `actors`, `delays`, `context`)\n   *  to recursively merge with the existing options.\n   *\n   * @returns A new `StateMachine` instance with the provided implementations.\n   */\n  provide(implementations) {\n    const {\n      actions,\n      guards,\n      actors,\n      delays\n    } = this.implementations;\n    return new StateMachine(this.config, {\n      actions: {\n        ...actions,\n        ...implementations.actions\n      },\n      guards: {\n        ...guards,\n        ...implementations.guards\n      },\n      actors: {\n        ...actors,\n        ...implementations.actors\n      },\n      delays: {\n        ...delays,\n        ...implementations.delays\n      }\n    });\n  }\n\n  /**\n   * Resolves the given `state` to a new `State` instance relative to this machine.\n   *\n   * This ensures that `.nextEvents` represent the correct values.\n   *\n   * @param state The state to resolve\n   */\n  resolveState(state) {\n    const configurationSet = getConfiguration(getStateNodes(this.root, state.value));\n    const configuration = Array.from(configurationSet);\n    return this.createState({\n      ...state,\n      value: resolveStateValue(this.root, state.value),\n      configuration,\n      done: isInFinalState(configuration)\n    });\n  }\n  resolveStateValue(stateValue, ...[context]) {\n    const resolvedStateValue = resolveStateValue(this.root, stateValue);\n    return this.resolveState(State.from(resolvedStateValue, context, this));\n  }\n\n  /**\n   * Determines the next state given the current `state` and received `event`.\n   * Calculates a full macrostep from all microsteps.\n   *\n   * @param state The current State instance or state value\n   * @param event The received event\n   */\n  transition(state, event, actorCtx) {\n    // TODO: handle error events in a better way\n    if (isErrorEvent(event) && !state.nextEvents.some(nextEvent => nextEvent === event.type)) {\n      throw event.data;\n    }\n    const {\n      state: nextState\n    } = macrostep(state, event, actorCtx);\n    return nextState;\n  }\n\n  /**\n   * Determines the next state given the current `state` and `event`.\n   * Calculates a microstep.\n   *\n   * @param state The current state\n   * @param event The received event\n   */\n  microstep(state, event, actorCtx) {\n    return macrostep(state, event, actorCtx).microstates;\n  }\n  getTransitionData(state, event) {\n    return transitionNode(this.root, state.value, state, event) || [];\n  }\n\n  /**\n   * The initial state _before_ evaluating any microsteps.\n   * This \"pre-initial\" state is provided to initial actions executed in the initial state.\n   */\n  getPreInitialState(actorCtx, initEvent) {\n    const {\n      context\n    } = this.config;\n    const preInitial = this.resolveState(this.createState({\n      value: {},\n      // TODO: this is computed in state constructor\n      context: typeof context !== 'function' && context ? context : {},\n      meta: undefined,\n      configuration: getInitialConfiguration(this.root),\n      children: {}\n    }));\n    if (typeof context === 'function') {\n      const assignment = ({\n        spawn,\n        event\n      }) => context({\n        spawn,\n        input: event.input\n      });\n      return resolveActionsAndContext([assign(assignment)], initEvent, preInitial, actorCtx);\n    }\n    return preInitial;\n  }\n\n  /**\n   * Returns the initial `State` instance, with reference to `self` as an `ActorRef`.\n   */\n  getInitialState(actorCtx, input) {\n    const initEvent = createInitEvent(input); // TODO: fix;\n\n    const preInitialState = this.getPreInitialState(actorCtx, initEvent);\n    const nextState = microstep([{\n      target: [...preInitialState.configuration].filter(isAtomicStateNode),\n      source: this.root,\n      reenter: true,\n      actions: [],\n      eventType: null,\n      toJSON: null // TODO: fix\n    }], preInitialState, actorCtx, initEvent, true);\n    const {\n      state: macroState\n    } = macrostep(nextState, initEvent, actorCtx);\n    return macroState;\n  }\n  start(state, actorCtx) {\n    Object.values(state.children).forEach(child => {\n      if (child.status === 0) {\n        try {\n          child.start?.();\n        } catch (err) {\n          // TODO: unify error handling when child starts\n          actorCtx.self.send(error(child.id, err));\n        }\n      }\n    });\n  }\n  getStateNodeById(stateId) {\n    const fullPath = stateId.split(STATE_DELIMITER);\n    const relativePath = fullPath.slice(1);\n    const resolvedStateId = isStateId(fullPath[0]) ? fullPath[0].slice(STATE_IDENTIFIER.length) : fullPath[0];\n    const stateNode = this.idMap.get(resolvedStateId);\n    if (!stateNode) {\n      throw new Error(`Child state node '#${resolvedStateId}' does not exist on machine '${this.id}'`);\n    }\n    return getStateNodeByPath(stateNode, relativePath);\n  }\n  get definition() {\n    return this.root.definition;\n  }\n  toJSON() {\n    return this.definition;\n  }\n  getPersistedState(state) {\n    return getPersistedState(state);\n  }\n  createState(stateConfig) {\n    return stateConfig instanceof State ? stateConfig : new State(stateConfig, this);\n  }\n  getStatus(state) {\n    return state.done ? {\n      status: 'done',\n      data: state.output\n    } : {\n      status: 'active'\n    };\n  }\n  restoreState(state, _actorCtx) {\n    const children = {};\n    Object.keys(state.children).forEach(actorId => {\n      const actorData = state.children[actorId];\n      const childState = actorData.state;\n      const src = actorData.src;\n      const logic = src ? resolveReferencedActor(this.implementations.actors[src])?.src : undefined;\n      if (!logic) {\n        return;\n      }\n      const actorState = logic.restoreState?.(childState, _actorCtx);\n      const actorRef = interpret(logic, {\n        id: actorId,\n        state: actorState\n      });\n      children[actorId] = actorRef;\n    });\n    const restoredState = this.createState(new State({\n      ...state,\n      children\n    }, this));\n\n    // TODO: DRY this up\n    restoredState.configuration.forEach(stateNode => {\n      if (stateNode.invoke) {\n        stateNode.invoke.forEach(invokeConfig => {\n          const {\n            id,\n            src\n          } = invokeConfig;\n          if (children[id]) {\n            return;\n          }\n          const referenced = resolveReferencedActor(this.implementations.actors[src]);\n          if (referenced) {\n            const actorRef = interpret(referenced.src, {\n              id,\n              parent: _actorCtx?.self,\n              input: 'input' in invokeConfig ? invokeConfig.input : referenced.input\n            });\n            children[id] = actorRef;\n          }\n        });\n      }\n    });\n    return restoredState;\n  }\n\n  /**@deprecated an internal property acting as a \"phantom\" type, not meant to be used at runtime */\n}\n\nfunction createMachine(config, implementations) {\n  return new StateMachine(config, implementations);\n}\n\nfunction mapState(stateMap, stateId) {\n  let foundStateId;\n  for (const mappedStateId of Object.keys(stateMap)) {\n    if (matchesState(mappedStateId, stateId) && (!foundStateId || stateId.length > foundStateId.length)) {\n      foundStateId = mappedStateId;\n    }\n  }\n  return stateMap[foundStateId];\n}\n\nclass SimulatedClock {\n  constructor() {\n    this.timeouts = new Map();\n    this._now = 0;\n    this._id = 0;\n  }\n  now() {\n    return this._now;\n  }\n  getId() {\n    return this._id++;\n  }\n  setTimeout(fn, timeout) {\n    const id = this.getId();\n    this.timeouts.set(id, {\n      start: this.now(),\n      timeout,\n      fn\n    });\n    return id;\n  }\n  clearTimeout(id) {\n    this.timeouts.delete(id);\n  }\n  set(time) {\n    if (this._now > time) {\n      throw new Error('Unable to travel back in time');\n    }\n    this._now = time;\n    this.flushTimeouts();\n  }\n  flushTimeouts() {\n    [...this.timeouts].sort(([_idA, timeoutA], [_idB, timeoutB]) => {\n      const endA = timeoutA.start + timeoutA.timeout;\n      const endB = timeoutB.start + timeoutB.timeout;\n      return endB > endA ? -1 : 1;\n    }).forEach(([id, timeout]) => {\n      if (this.now() - timeout.start >= timeout.timeout) {\n        this.timeouts.delete(id);\n        timeout.fn.call(null);\n      }\n    });\n  }\n  increment(ms) {\n    this._now += ms;\n    this.flushTimeouts();\n  }\n}\n\nconst defaultWaitForOptions = {\n  timeout: 10_000 // 10 seconds\n};\n\n/**\n * Subscribes to an actor ref and waits for its emitted value to satisfy\n * a predicate, and then resolves with that value.\n * Will throw if the desired state is not reached after a timeout\n * (defaults to 10 seconds).\n *\n * @example\n * ```js\n * const state = await waitFor(someService, state => {\n *   return state.hasTag('loaded');\n * });\n *\n * state.hasTag('loaded'); // true\n * ```\n *\n * @param actorRef The actor ref to subscribe to\n * @param predicate Determines if a value matches the condition to wait for\n * @param options\n * @returns A promise that eventually resolves to the emitted value\n * that matches the condition\n */\nfunction waitFor(actorRef, predicate, options) {\n  const resolvedOptions = {\n    ...defaultWaitForOptions,\n    ...options\n  };\n  return new Promise((res, rej) => {\n    let done = false;\n    const handle = resolvedOptions.timeout === Infinity ? undefined : setTimeout(() => {\n      sub.unsubscribe();\n      rej(new Error(`Timeout of ${resolvedOptions.timeout} ms exceeded`));\n    }, resolvedOptions.timeout);\n    const dispose = () => {\n      clearTimeout(handle);\n      done = true;\n      sub?.unsubscribe();\n    };\n    function checkEmitted(emitted) {\n      if (predicate(emitted)) {\n        dispose();\n        res(emitted);\n      }\n    }\n    let sub; // avoid TDZ when disposing synchronously\n\n    // See if the current snapshot already matches the predicate\n    checkEmitted(actorRef.getSnapshot());\n    if (done) {\n      return;\n    }\n    sub = actorRef.subscribe({\n      next: checkEmitted,\n      error: err => {\n        dispose();\n        rej(err);\n      },\n      complete: () => {\n        dispose();\n        rej(new Error(`Actor terminated without satisfying predicate`));\n      }\n    });\n    if (done) {\n      sub.unsubscribe();\n    }\n  });\n}\n\nexport { SimulatedClock, StateMachine, StateNode, createMachine, mapState, waitFor };\n","const sharedGuards = {\n  // TODO\n  gameFinished: () => false,\n  /** All users have been assigned a side, and there is at least one admin on both sides */\n  allSidesAssigned: ({ context }) => context.users.every((user) => user.isSideAssigned) && !!context.users.find((user) => user.side === \"defender\" && user.isAdmin) && !!context.users.find((user) => user.side === \"attacker\" && user.isAdmin),\n  /** The admin said that they finished assigning the sides */\n  finishedAssigningSides: ({ context }) => context.finishedAssigningSides,\n  /** Both, defense and attack has all players configured */\n  allRolesAssigned: ({ context }) => context.attack.attacker.isConfigured && context.defense.defenders.every((defender) => defender.isConfigured),\n  // TODO\n  finishedAssigningRoles: ({ context }) => context.attack.finishedAssigning && context.defense.finishedAssigning,\n  attackerShouldBeVisible: () => false,\n  attackerShouldBeInvisible: () => false\n};\nconst DEFAULT_DEFENSE_INVENTORY = {\n  cloud: 0,\n  shield: 0\n};\nconst DEFAULT_ATTACK_INVENTORY = {\n  gun: 0,\n  virus: 0\n};\nconst FACES = {\n  man: \"man\",\n  woman: \"woman\",\n  other: \"other\"\n};\nconst isDefenderId = (id) => id !== \"attacker\";\nexport {\n  DEFAULT_DEFENSE_INVENTORY as D,\n  FACES as F,\n  DEFAULT_ATTACK_INVENTORY as a,\n  isDefenderId as i,\n  sharedGuards as s\n};\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n"],"names":["STATE_IDENTIFIER","global","require$$0","require$$1","require$$2"],"mappings":"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","x_google_ignoreList":[0,1,2,4,5,6,7,8,9,10,11]}